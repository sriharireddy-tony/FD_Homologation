{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { ApiResponse } from './bizobjects';\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\nimport Swal from 'sweetalert2';\nimport { ServiceRegistory } from './service.registry';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { DatePipe } from '@angular/common';\nlet Services = class Services {\n  constructor(ngxService, router, datepipe) {\n    this.ngxService = ngxService;\n    this.router = router;\n    this.datepipe = datepipe;\n\n    this.processHttpResponse = (methodname, httpResponse, apiResponseObj) => {\n      var _a, _b;\n\n      apiResponseObj.responseCode = 200;\n      let bizObjectName = (_a = ServiceRegistory[methodname]) === null || _a === void 0 ? void 0 : _a.returnType;\n      let occurrence = (_b = ServiceRegistory[methodname]) === null || _b === void 0 ? void 0 : _b.occurrence;\n      if (!occurrence) occurrence = \"*\";\n\n      if (httpResponse.hasOwnProperty(\"tuple\")) {\n        if (Array.isArray(httpResponse.tuple)) {\n          apiResponseObj.responseBody = [];\n          let container = \"new\" in httpResponse.tuple[0] ? \"new\" : \"old\";\n          bizObjectName = \"any\" === bizObjectName || !bizObjectName ? Object.keys(httpResponse.tuple[0][container])[0] : bizObjectName;\n\n          for (let index = 0; index < httpResponse.tuple.length; index++) {\n            apiResponseObj.responseBody.push(httpResponse.tuple[index][container][bizObjectName]);\n          }\n        } else {\n          let container = \"new\" in httpResponse.tuple ? \"new\" : \"old\";\n          bizObjectName = \"any\" === bizObjectName || !bizObjectName ? Object.keys(httpResponse.tuple[container])[0] : bizObjectName;\n\n          if (occurrence === \"1\") {\n            apiResponseObj.responseBody = httpResponse.tuple[container][bizObjectName];\n          } else {\n            apiResponseObj.responseBody = [];\n            apiResponseObj.responseBody.push(httpResponse.tuple[container][bizObjectName]);\n          }\n        }\n      } else {\n        if (httpResponse && Object.keys(httpResponse).length >= 3) {\n          apiResponseObj.responseBody = httpResponse;\n        } else {\n          if (occurrence === \"1\") apiResponseObj.responseBody = {};else apiResponseObj.responseBody = [];\n        }\n      }\n    };\n\n    this.processHttpServerError = (httpResponse, status, errorText, apiResponseObj) => {\n      apiResponseObj.responseCode = 500;\n      apiResponseObj.errorMsg.faultCode = httpResponse.responseJSON.faultcode.text;\n      apiResponseObj.errorMsg.faultMsg = httpResponse.responseJSON.faultstring.text; //apiResponseObj.errorMsg.faultDetails = httpResponse.responseJSON.detail.FaultRelatedException.text;\n    };\n\n    this.call_modal = false;\n    this.data_send = {};\n    this.actStag = new BehaviorSubject('');\n    this.ARAIFlag = new Subject();\n    this.callEngineModel = new Subject();\n    this.createPageEvents = new BehaviorSubject('');\n    this.taskPage = new Subject();\n    this.routeChange = new Subject();\n    this.routerName = new Subject();\n    this.repConfEventCall = new Subject();\n    this.addNewLineBtn = new Subject();\n    this.roleStage = new Subject();\n    this.callTable4G = new Subject();\n    this.OpenAs = new BehaviorSubject(false);\n    this.cloneHRNo = new Subject(); // masterAttributes:any = new Subject();\n\n    this.lovMasaterList = new BehaviorSubject([]);\n    this.loginUserID = new BehaviorSubject('');\n    this.loginUserName = new BehaviorSubject('');\n    this.HR_REF_NO = new BehaviorSubject({});\n    this.ENGINE_FAMILY_NO_Arr = new BehaviorSubject([]);\n    this.tabsArr = new BehaviorSubject([]);\n  }\n\n  downloadFileByFileContent(fileContent, fileName) {\n    let docContent = atob(fileContent);\n    let contentArray = new Uint8Array(docContent.length);\n\n    for (let lpvar = 0; lpvar < docContent.length; lpvar++) {\n      contentArray[lpvar] = docContent.charCodeAt(lpvar);\n    }\n\n    let xlBlob = new Blob([contentArray], {\n      type: \"application/octet-stream\"\n    }); // saveAs(xlBlob, fileName);\n\n    const a = document.createElement('a');\n    const objectUrl = URL.createObjectURL(xlBlob);\n    a.href = objectUrl;\n    a.download = fileName;\n    a.click();\n    URL.revokeObjectURL(objectUrl);\n  }\n\n  downloadFile(methodname, fileName, fileLink, namespace = '', isAsync = undefined, showLoadingIndicator = undefined) {\n    let fileContent;\n    let download_req = {};\n\n    if (fileLink.indexOf(\";\") >= 0) {\n      download_req = {\n        \"filePath\": fileLink.split(\";\")[0],\n        \"path\": fileLink.split(\";\")[1]\n      };\n    } else {\n      download_req = {\n        \"filePath\": fileLink\n      };\n    }\n\n    this.fireSoapService(methodname, namespace, download_req, isAsync, showLoadingIndicator).then(response => {\n      fileContent = response[0].downloadDocument;\n      let docContent = atob(fileContent);\n      let contentArray = new Uint8Array(docContent.length);\n\n      for (let lpvar = 0; lpvar < docContent.length; lpvar++) {\n        contentArray[lpvar] = docContent.charCodeAt(lpvar);\n      }\n\n      let xlBlob = new Blob([contentArray], {\n        type: \"application/octet-stream\"\n      }); // saveAs(xlBlob, fileName);\n\n      const a = document.createElement('a');\n      const objectUrl = URL.createObjectURL(xlBlob);\n      a.href = objectUrl;\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(objectUrl);\n    }).catch(response => {\n      alert(response.responseJSON.faultstring.text);\n    });\n  }\n\n  uploadFile(methodname, file, fileFormats, namespace = '', isAsync = undefined, showLoadingIndicator = undefined) {\n    let fileContent;\n    let extension;\n\n    let _this = this;\n\n    return new Promise((resolve, reject) => {\n      if (file.name.lastIndexOf(\".\") == -1) {\n        Swal.fire('File Format Not Recognized. Please Select Different File.', '', 'error');\n        reject(\"File Format Not Recognized. Please Select Different File.\");\n      }\n\n      if (file.name.indexOf(\"@\") > -1 || file.name.indexOf(\"#\") > -1) {\n        Swal.fire(\"File must not contain \\\"@\\\" or \\\"#\\\". Please Remove And Try Again\", '', 'error');\n        reject(\"File must not contain \\\"@\\\" or \\\"#\\\". Please Remove And Try Again\");\n      }\n\n      if (file.name.length > 100) {\n        Swal.fire(\"File Name should be less than 100 characters\", '', 'error');\n        reject(\"File Name should be less than 100 characters\");\n      }\n\n      extension = file.name.split('.').pop();\n      extension = extension.toLowerCase();\n\n      if (fileFormats.length > 0 && fileFormats.indexOf(extension) == -1) {\n        Swal.fire('', 'Please Upload ' + fileFormats.toString() + ' format files', 'warning');\n        reject('Please Upload ' + fileFormats.toString() + ' format files');\n      }\n\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function (e) {\n        fileContent = e.target.result;\n        let upload_req = {\n          \"fileName\": file.name,\n          \"fileContent\": fileContent\n        };\n\n        _this.fireSoapService(methodname, namespace, upload_req, isAsync, showLoadingIndicator).then(response => {\n          resolve(response[0].uploadFDHLDocumnets);\n        }).catch(response => {\n          alert(response.responseJSON.faultstring.text);\n          reject(response);\n        });\n      };\n    });\n  }\n\n  invokeService(methodname, requestBody, namespace = '', isAsync = undefined, showLoadingIndicator = undefined) {\n    let parameters = requestBody;\n    $.cordys.json.defaults.removeNamespacePrefix = true;\n    return new Promise((resolve, reject) => {\n      this.fireSoapService(methodname, namespace, parameters, isAsync, showLoadingIndicator).then(response => {\n        resolve(response);\n      }).catch(response => {\n        alert(response.responseJSON.faultstring.text);\n        reject(response.responseJSON.faultstring.text);\n      });\n    });\n  }\n\n  fireSoapService(methodname, namespace, parameters, isAsync, showLoadingIndicator) {\n    var _a, _b, _c;\n\n    let _this = this;\n\n    if (!namespace) namespace = (_a = ServiceRegistory[methodname]) === null || _a === void 0 ? void 0 : _a.namespace;\n    if (!isAsync) isAsync = (_b = ServiceRegistory[methodname]) === null || _b === void 0 ? void 0 : _b.isAsync;\n    if (!showLoadingIndicator) showLoadingIndicator = (_c = ServiceRegistory[methodname]) === null || _c === void 0 ? void 0 : _c.showLoadingIndicator;\n    return new Promise((resolve, reject) => {\n      $.cordys.ajax({\n        method: methodname,\n        namespace: namespace,\n        parameters: parameters,\n        async: isAsync,\n        showLoadingIndicator: false,\n        success: function (response) {\n          if (showLoadingIndicator) _this.ngxService.stop();\n          let apiResponseObj = new ApiResponse();\n\n          _this.processHttpResponse(methodname, response, apiResponseObj);\n\n          resolve(apiResponseObj.responseBody);\n        },\n        error: function (response, status, errorText) {\n          if (showLoadingIndicator) _this.ngxService.stop();\n          reject(response);\n        },\n        beforeSend: function (xhr) {\n          if (showLoadingIndicator) _this.ngxService.start();\n        },\n        complete: function () {\n          if (showLoadingIndicator) _this.ngxService.stop();\n        },\n        fail: function (response) {\n          if (showLoadingIndicator) _this.ngxService.stop();\n        }\n      });\n    });\n  }\n\n  datavalidate(data) {\n    if (data != undefined && data != null && data != \"\") {\n      return data;\n    } else {\n      return \"\";\n    }\n  }\n\n  completeTask(taskId, data, status, openas) {\n    this.call_modal = false;\n    var titlest = \"Task Completed Successfully\";\n\n    let _this = this;\n\n    $.cordys.workflow.completeTask(taskId, data, {\n      dataType: 'xml'\n    }).done(() => {\n      // Swal.fire({\n      //   title: titlest,\n      //   icon: 'success',\n      //   allowOutsideClick: false\n      // }).then(function () {\n      //   _this.closeTask(openas);\n      // });\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: titlest,\n          active: this.call_modal\n        };\n      }, 0);\n    }); //End of done Function\n  } // End Of Function\n\n\n  closeTask(openas) {\n    this.actStage = \"view\";\n\n    if (openas == 'customInboxTask') // if Custom Inbox\n      {\n        this.router.navigate(['/inbox']);\n      } else if (openas == 'mail') // if accessed through mail\n      {\n        //$scope.viewPage = true;\n        window.close();\n      } else //if Cordys Inbox\n      {// if(typeof window.parent.parent.parent.system.windows[\"RightFrame_cordys_notif_MyInboxTask\"] != 'undefined')\n        // \t{\n        // \t\t\twindow.parent.parent.parent.system.windows[\"RightFrame_cordys_notif_MyInboxTask\"].refreshButton_Click();\n        // \t\t\tparent.parent.parent.application.container.close();\n        // \t\t\treturn false;\n        // \t}\n        // else\n        // \t{\n        // \tparent.parent.parent.application.container.close();\n        // \t}\n      }\n  }\n\n  dateFilter(date) {\n    let formattedDate;\n\n    if (date != undefined && date != null && date != \"\") {\n      if (typeof date == 'object') {\n        formattedDate = this.datepipe.transform(new Date(date), 'YYYY-MM-dd');\n      } else if (typeof date == 'string') {\n        formattedDate = date.includes('-') ? date.split('-').reverse().join('-') : date.includes('/') ? date.split('/').reverse().join('/') : date.includes('.') ? date.split('.').reverse().join('.') : '';\n      }\n\n      return formattedDate;\n    } else {\n      return '';\n    }\n  }\n\n  sharingData(Data, Type) {\n    switch (Type) {\n      case 'LovDetails':\n        this.lovMasaterList.next(Data);\n        break;\n\n      case 'loginUserID':\n        this.loginUserID.next(Data);\n        break;\n\n      case 'loginUserName':\n        this.loginUserName.next(Data);\n        break;\n\n      case 'HR_REF_NO':\n        this.HR_REF_NO.next(Data);\n        break;\n\n      case 'ENGINE_FAMILY_NO_Arr':\n        this.ENGINE_FAMILY_NO_Arr.next(Data);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n};\n\nServices.ctorParameters = () => [{\n  type: NgxUiLoaderService\n}, {\n  type: Router\n}, {\n  type: DatePipe\n}];\n\nServices = __decorate([Injectable({\n  providedIn: 'root'\n})], Services);\nexport { Services };","map":{"version":3,"sources":["D:/SVN Projects/FD_Homologation_LatesT/FD_Homologation/src/app/services/services.ts"],"names":["__decorate","Injectable","ApiResponse","NgxUiLoaderService","Swal","ServiceRegistory","Router","BehaviorSubject","Subject","DatePipe","Services","constructor","ngxService","router","datepipe","processHttpResponse","methodname","httpResponse","apiResponseObj","_a","_b","responseCode","bizObjectName","returnType","occurrence","hasOwnProperty","Array","isArray","tuple","responseBody","container","Object","keys","index","length","push","processHttpServerError","status","errorText","errorMsg","faultCode","responseJSON","faultcode","text","faultMsg","faultstring","call_modal","data_send","actStag","ARAIFlag","callEngineModel","createPageEvents","taskPage","routeChange","routerName","repConfEventCall","addNewLineBtn","roleStage","callTable4G","OpenAs","cloneHRNo","lovMasaterList","loginUserID","loginUserName","HR_REF_NO","ENGINE_FAMILY_NO_Arr","tabsArr","downloadFileByFileContent","fileContent","fileName","docContent","atob","contentArray","Uint8Array","lpvar","charCodeAt","xlBlob","Blob","type","a","document","createElement","objectUrl","URL","createObjectURL","href","download","click","revokeObjectURL","downloadFile","fileLink","namespace","isAsync","undefined","showLoadingIndicator","download_req","indexOf","split","fireSoapService","then","response","downloadDocument","catch","alert","uploadFile","file","fileFormats","extension","_this","Promise","resolve","reject","name","lastIndexOf","fire","pop","toLowerCase","toString","reader","FileReader","readAsDataURL","onload","e","target","result","upload_req","uploadFDHLDocumnets","invokeService","requestBody","parameters","$","cordys","json","defaults","removeNamespacePrefix","_c","ajax","method","async","success","stop","error","beforeSend","xhr","start","complete","fail","datavalidate","data","completeTask","taskId","openas","titlest","workflow","dataType","done","setTimeout","active","closeTask","actStage","navigate","window","close","dateFilter","date","formattedDate","transform","Date","includes","reverse","join","sharingData","Data","Type","next","ctorParameters","providedIn"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { ApiResponse } from './bizobjects';\r\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\r\nimport Swal from 'sweetalert2';\r\nimport { ServiceRegistory } from './service.registry';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { DatePipe } from '@angular/common';\r\nlet Services = class Services {\r\n    constructor(ngxService, router, datepipe) {\r\n        this.ngxService = ngxService;\r\n        this.router = router;\r\n        this.datepipe = datepipe;\r\n        this.processHttpResponse = (methodname, httpResponse, apiResponseObj) => {\r\n            var _a, _b;\r\n            apiResponseObj.responseCode = 200;\r\n            let bizObjectName = (_a = ServiceRegistory[methodname]) === null || _a === void 0 ? void 0 : _a.returnType;\r\n            let occurrence = (_b = ServiceRegistory[methodname]) === null || _b === void 0 ? void 0 : _b.occurrence;\r\n            if (!occurrence)\r\n                occurrence = \"*\";\r\n            if (httpResponse.hasOwnProperty(\"tuple\")) {\r\n                if (Array.isArray(httpResponse.tuple)) {\r\n                    apiResponseObj.responseBody = [];\r\n                    let container = (\"new\" in httpResponse.tuple[0]) ? \"new\" : \"old\";\r\n                    bizObjectName = (\"any\" === bizObjectName || !bizObjectName) ? Object.keys(httpResponse.tuple[0][container])[0] : bizObjectName;\r\n                    for (let index = 0; index < httpResponse.tuple.length; index++) {\r\n                        apiResponseObj.responseBody.push(httpResponse.tuple[index][container][bizObjectName]);\r\n                    }\r\n                }\r\n                else {\r\n                    let container = (\"new\" in httpResponse.tuple) ? \"new\" : \"old\";\r\n                    bizObjectName = (\"any\" === bizObjectName || !bizObjectName) ? Object.keys(httpResponse.tuple[container])[0] : bizObjectName;\r\n                    if (occurrence === \"1\") {\r\n                        apiResponseObj.responseBody = httpResponse.tuple[container][bizObjectName];\r\n                    }\r\n                    else {\r\n                        apiResponseObj.responseBody = [];\r\n                        apiResponseObj.responseBody.push(httpResponse.tuple[container][bizObjectName]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (httpResponse && Object.keys(httpResponse).length >= 3) {\r\n                    apiResponseObj.responseBody = httpResponse;\r\n                }\r\n                else {\r\n                    if (occurrence === \"1\")\r\n                        apiResponseObj.responseBody = {};\r\n                    else\r\n                        apiResponseObj.responseBody = [];\r\n                }\r\n            }\r\n        };\r\n        this.processHttpServerError = (httpResponse, status, errorText, apiResponseObj) => {\r\n            apiResponseObj.responseCode = 500;\r\n            apiResponseObj.errorMsg.faultCode = httpResponse.responseJSON.faultcode.text;\r\n            apiResponseObj.errorMsg.faultMsg = httpResponse.responseJSON.faultstring.text;\r\n            //apiResponseObj.errorMsg.faultDetails = httpResponse.responseJSON.detail.FaultRelatedException.text;\r\n        };\r\n        this.call_modal = false;\r\n        this.data_send = {};\r\n        this.actStag = new BehaviorSubject('');\r\n        this.ARAIFlag = new Subject();\r\n        this.callEngineModel = new Subject();\r\n        this.createPageEvents = new BehaviorSubject('');\r\n        this.taskPage = new Subject();\r\n        this.routeChange = new Subject();\r\n        this.routerName = new Subject();\r\n        this.repConfEventCall = new Subject();\r\n        this.addNewLineBtn = new Subject();\r\n        this.roleStage = new Subject();\r\n        this.callTable4G = new Subject();\r\n        this.OpenAs = new BehaviorSubject(false);\r\n        this.cloneHRNo = new Subject();\r\n        // masterAttributes:any = new Subject();\r\n        this.lovMasaterList = new BehaviorSubject([]);\r\n        this.loginUserID = new BehaviorSubject('');\r\n        this.loginUserName = new BehaviorSubject('');\r\n        this.HR_REF_NO = new BehaviorSubject({});\r\n        this.ENGINE_FAMILY_NO_Arr = new BehaviorSubject([]);\r\n        this.tabsArr = new BehaviorSubject([]);\r\n    }\r\n    downloadFileByFileContent(fileContent, fileName) {\r\n        let docContent = atob(fileContent);\r\n        let contentArray = new Uint8Array(docContent.length);\r\n        for (let lpvar = 0; lpvar < docContent.length; lpvar++) {\r\n            contentArray[lpvar] = docContent.charCodeAt(lpvar);\r\n        }\r\n        let xlBlob = new Blob([contentArray], { type: \"application/octet-stream\" });\r\n        // saveAs(xlBlob, fileName);\r\n        const a = document.createElement('a');\r\n        const objectUrl = URL.createObjectURL(xlBlob);\r\n        a.href = objectUrl;\r\n        a.download = fileName;\r\n        a.click();\r\n        URL.revokeObjectURL(objectUrl);\r\n    }\r\n    downloadFile(methodname, fileName, fileLink, namespace = '', isAsync = undefined, showLoadingIndicator = undefined) {\r\n        let fileContent;\r\n        let download_req = {};\r\n        if (fileLink.indexOf(\";\") >= 0) {\r\n            download_req = {\r\n                \"filePath\": fileLink.split(\";\")[0],\r\n                \"path\": fileLink.split(\";\")[1]\r\n            };\r\n        }\r\n        else {\r\n            download_req = {\r\n                \"filePath\": fileLink\r\n            };\r\n        }\r\n        this.fireSoapService(methodname, namespace, download_req, isAsync, showLoadingIndicator)\r\n            .then((response) => {\r\n            fileContent = response[0].downloadDocument;\r\n            let docContent = atob(fileContent);\r\n            let contentArray = new Uint8Array(docContent.length);\r\n            for (let lpvar = 0; lpvar < docContent.length; lpvar++) {\r\n                contentArray[lpvar] = docContent.charCodeAt(lpvar);\r\n            }\r\n            let xlBlob = new Blob([contentArray], { type: \"application/octet-stream\" });\r\n            // saveAs(xlBlob, fileName);\r\n            const a = document.createElement('a');\r\n            const objectUrl = URL.createObjectURL(xlBlob);\r\n            a.href = objectUrl;\r\n            a.download = fileName;\r\n            a.click();\r\n            URL.revokeObjectURL(objectUrl);\r\n        }).catch((response) => {\r\n            alert(response.responseJSON.faultstring.text);\r\n        });\r\n    }\r\n    uploadFile(methodname, file, fileFormats, namespace = '', isAsync = undefined, showLoadingIndicator = undefined) {\r\n        let fileContent;\r\n        let extension;\r\n        let _this = this;\r\n        return new Promise((resolve, reject) => {\r\n            if (file.name.lastIndexOf(\".\") == -1) {\r\n                Swal.fire('File Format Not Recognized. Please Select Different File.', '', 'error');\r\n                reject(\"File Format Not Recognized. Please Select Different File.\");\r\n            }\r\n            if (file.name.indexOf(\"@\") > -1 || file.name.indexOf(\"#\") > -1) {\r\n                Swal.fire(\"File must not contain \\\"@\\\" or \\\"#\\\". Please Remove And Try Again\", '', 'error');\r\n                reject(\"File must not contain \\\"@\\\" or \\\"#\\\". Please Remove And Try Again\");\r\n            }\r\n            if (file.name.length > 100) {\r\n                Swal.fire(\"File Name should be less than 100 characters\", '', 'error');\r\n                reject(\"File Name should be less than 100 characters\");\r\n            }\r\n            extension = file.name.split('.').pop();\r\n            extension = extension.toLowerCase();\r\n            if (fileFormats.length > 0 && fileFormats.indexOf(extension) == -1) {\r\n                Swal.fire('', 'Please Upload ' + fileFormats.toString() + ' format files', 'warning');\r\n                reject('Please Upload ' + fileFormats.toString() + ' format files');\r\n            }\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function (e) {\r\n                fileContent = e.target.result;\r\n                let upload_req = {\r\n                    \"fileName\": file.name,\r\n                    \"fileContent\": fileContent\r\n                };\r\n                _this.fireSoapService(methodname, namespace, upload_req, isAsync, showLoadingIndicator)\r\n                    .then((response) => {\r\n                    resolve(response[0].uploadFDHLDocumnets);\r\n                }).catch((response) => {\r\n                    alert(response.responseJSON.faultstring.text);\r\n                    reject(response);\r\n                });\r\n            };\r\n        });\r\n    }\r\n    invokeService(methodname, requestBody, namespace = '', isAsync = undefined, showLoadingIndicator = undefined) {\r\n        let parameters = requestBody;\r\n        $.cordys.json.defaults.removeNamespacePrefix = true;\r\n        return new Promise((resolve, reject) => {\r\n            this.fireSoapService(methodname, namespace, parameters, isAsync, showLoadingIndicator)\r\n                .then((response) => {\r\n                resolve(response);\r\n            }).catch((response) => {\r\n                alert(response.responseJSON.faultstring.text);\r\n                reject(response.responseJSON.faultstring.text);\r\n            });\r\n        });\r\n    }\r\n    fireSoapService(methodname, namespace, parameters, isAsync, showLoadingIndicator) {\r\n        var _a, _b, _c;\r\n        let _this = this;\r\n        if (!namespace)\r\n            namespace = (_a = ServiceRegistory[methodname]) === null || _a === void 0 ? void 0 : _a.namespace;\r\n        if (!isAsync)\r\n            isAsync = (_b = ServiceRegistory[methodname]) === null || _b === void 0 ? void 0 : _b.isAsync;\r\n        if (!showLoadingIndicator)\r\n            showLoadingIndicator = (_c = ServiceRegistory[methodname]) === null || _c === void 0 ? void 0 : _c.showLoadingIndicator;\r\n        return new Promise((resolve, reject) => {\r\n            $.cordys.ajax({\r\n                method: methodname,\r\n                namespace: namespace,\r\n                parameters: parameters,\r\n                async: isAsync,\r\n                showLoadingIndicator: false,\r\n                success: function (response) {\r\n                    if (showLoadingIndicator)\r\n                        _this.ngxService.stop();\r\n                    let apiResponseObj = new ApiResponse();\r\n                    _this.processHttpResponse(methodname, response, apiResponseObj);\r\n                    resolve(apiResponseObj.responseBody);\r\n                },\r\n                error: function (response, status, errorText) {\r\n                    if (showLoadingIndicator)\r\n                        _this.ngxService.stop();\r\n                    reject(response);\r\n                },\r\n                beforeSend: function (xhr) {\r\n                    if (showLoadingIndicator)\r\n                        _this.ngxService.start();\r\n                },\r\n                complete: function () {\r\n                    if (showLoadingIndicator)\r\n                        _this.ngxService.stop();\r\n                },\r\n                fail: function (response) {\r\n                    if (showLoadingIndicator)\r\n                        _this.ngxService.stop();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    datavalidate(data) {\r\n        if (data != undefined && data != null && data != \"\") {\r\n            return data;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    completeTask(taskId, data, status, openas) {\r\n        this.call_modal = false;\r\n        var titlest = \"Task Completed Successfully\";\r\n        let _this = this;\r\n        $.cordys.workflow.completeTask(taskId, data, { dataType: 'xml' }).done(() => {\r\n            // Swal.fire({\r\n            //   title: titlest,\r\n            //   icon: 'success',\r\n            //   allowOutsideClick: false\r\n            // }).then(function () {\r\n            //   _this.closeTask(openas);\r\n            // });\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: titlest, active: this.call_modal };\r\n            }, 0);\r\n        }); //End of done Function\r\n    } // End Of Function\r\n    closeTask(openas) {\r\n        this.actStage = \"view\";\r\n        if (openas == 'customInboxTask') // if Custom Inbox\r\n         {\r\n            this.router.navigate(['/inbox']);\r\n        }\r\n        else if (openas == 'mail') // if accessed through mail\r\n         {\r\n            //$scope.viewPage = true;\r\n            window.close();\r\n        }\r\n        else //if Cordys Inbox\r\n         {\r\n            // if(typeof window.parent.parent.parent.system.windows[\"RightFrame_cordys_notif_MyInboxTask\"] != 'undefined')\r\n            // \t{\r\n            // \t\t\twindow.parent.parent.parent.system.windows[\"RightFrame_cordys_notif_MyInboxTask\"].refreshButton_Click();\r\n            // \t\t\tparent.parent.parent.application.container.close();\r\n            // \t\t\treturn false;\r\n            // \t}\r\n            // else\r\n            // \t{\r\n            // \tparent.parent.parent.application.container.close();\r\n            // \t}\r\n        }\r\n    }\r\n    dateFilter(date) {\r\n        let formattedDate;\r\n        if (date != undefined && date != null && date != \"\") {\r\n            if (typeof (date) == 'object') {\r\n                formattedDate = this.datepipe.transform(new Date(date), 'YYYY-MM-dd');\r\n            }\r\n            else if (typeof (date) == 'string') {\r\n                formattedDate = date.includes('-') ? date.split('-').reverse().join('-') : date.includes('/') ? date.split('/').reverse().join('/') :\r\n                    date.includes('.') ? date.split('.').reverse().join('.') : '';\r\n            }\r\n            return formattedDate;\r\n        }\r\n        else {\r\n            return '';\r\n        }\r\n    }\r\n    sharingData(Data, Type) {\r\n        switch (Type) {\r\n            case 'LovDetails':\r\n                this.lovMasaterList.next(Data);\r\n                break;\r\n            case 'loginUserID':\r\n                this.loginUserID.next(Data);\r\n                break;\r\n            case 'loginUserName':\r\n                this.loginUserName.next(Data);\r\n                break;\r\n            case 'HR_REF_NO':\r\n                this.HR_REF_NO.next(Data);\r\n                break;\r\n            case 'ENGINE_FAMILY_NO_Arr':\r\n                this.ENGINE_FAMILY_NO_Arr.next(Data);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n};\r\nServices.ctorParameters = () => [\r\n    { type: NgxUiLoaderService },\r\n    { type: Router },\r\n    { type: DatePipe }\r\n];\r\nServices = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    })\r\n], Services);\r\nexport { Services };\r\n"]},"metadata":{},"sourceType":"module"}