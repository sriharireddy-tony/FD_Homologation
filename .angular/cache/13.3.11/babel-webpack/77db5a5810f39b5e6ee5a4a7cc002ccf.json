{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\SVN Projects\\\\FD_Homologation_LatesT\\\\FD_Homologation\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Chapter2Component } from './chapter2/chapter2.component';\nimport { CoveringLetterComponent } from './covering-letter/covering-letter.component';\nimport { Table12Component } from './table12/table12.component';\nimport { Table4gComponent } from './table4g/table4g.component';\nlet CreateNewRequestComponent = class CreateNewRequestComponent {\n  constructor(service, datepipe, fb, activatedRoute, location, menuComp, router, confirmationService) {\n    this.service = service;\n    this.datepipe = datepipe;\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.location = location;\n    this.menuComp = menuComp;\n    this.router = router;\n    this.confirmationService = confirmationService;\n    this.namespace = \"http://schemas.cordys.com/FD_HL_WSPackage\";\n    this.displayPopup = 'none';\n    this.DOC_REF_NO = '';\n    this.loginUserID = '';\n    this.isSubmitted = false;\n    this.HR_REF_NO = '';\n    this.REQUEST_NO = '';\n    this.instance_id = '';\n    this.taskId = '';\n    this.openAs = '';\n    this.actRole = '';\n    this.actStage = '';\n    this.AAHPopup = 'none';\n    this.AAHArr = [];\n    this.engineVarient = [];\n    this.dis2 = false;\n    this.call_modal = false;\n    this.documentsArr = [];\n    this.checkedRows = [];\n    this.maindocArr = [];\n    this.ENGINE_FAMILY_NO_Arr = [];\n    this.ReportName = [];\n    this.isSubmitted1 = false;\n    this.routeName = '';\n    this.CLONE_REQUEST_NO = '';\n    this.remarks = '';\n    this.remarkSubmit = false;\n    this.loginUserName = '';\n    this.anexureArr = [];\n    this.reguTable12 = '';\n    this.reguCovering = '';\n    this.reguTable4G = '';\n    this.reguChapter2 = '';\n    this.OpenAs = ''; // certfileUploadDoc1: any;\n\n    this.parrentInd = 0;\n    this.childInd = 0;\n    this.coveringWordDoc = '';\n    this.table12WordDoc = '';\n    this.ARAITrue = true;\n    this.engineFamilyDataArr = [];\n    this.procesStatus = '';\n    this.emisionComplaince = ''; // idArr: any = [];\n\n    this.nameArr = [];\n    this.variantsArr = [];\n    this.variantsArr1 = []; // idArrStr: string = ''\n\n    this.nameArrStr = '';\n    this.table4gVar = [];\n    this.chapter2Var = [];\n    this.HRV_REF_NOArr = [];\n    this.initValue = 0;\n    this.gridDocSize = 0;\n    this.mainDocSpinner = false;\n    this.certdocumentsArr = [];\n    this.certDocSize = 0;\n    this.certSpinner = false;\n    this.repdocumentsArr = [];\n    this.repDocSize = 0;\n    this.repSpinner = false;\n    this.appdocumentsArr = [];\n    this.appDocSize = 0;\n    this.appSpinner = false;\n    this.dradocumentsArr = [];\n    this.dragDocSize = 0;\n    this.dragSpinner = false;\n    this.invdocumentsArr = [];\n    this.invDocSize = 0;\n    this.invSpinner = false;\n    this.docSubmit = false;\n    this.createRequestForm = this.fb.group({\n      LOCATION: ['Domestic', Validators.required],\n      CERTIFICATION_TYPE: ['', Validators.required],\n      ENGINE_FAMILY_NO: ['', Validators.required],\n      WBS: ['', Validators.required],\n      COST_CENTER: ['', Validators.required],\n      ARAI: [''],\n      APEX: ['']\n    });\n    this.coverLetterObj = {};\n    this.table12Obj = {};\n    this.valid = false;\n    this.saveType = '';\n    this.isSaveSubm = false;\n    this.newREQUEST_NO = '';\n    this.Table12EmptyArr = [];\n    this.chapter2EmptyArr = [];\n    this.Table12Arr = [];\n    this.chapter2Arr = [];\n    this.getEngineFamily();\n    this.loadPage();\n    this.callReqManagementEmpty();\n    this.service.lovMasaterList.subscribe(lovMasaterList => {});\n    this.service.loginUserID.subscribe(loginUserID => {\n      this.loginUserID = loginUserID;\n    });\n    this.service.loginUserName.subscribe(loginUserName => {\n      this.loginUserName = loginUserName;\n    });\n    this.subscription = this.service.createPageEvents.subscribe(call => {\n      switch (call) {\n        case 'save':\n          this.saveDetails('save');\n          break;\n\n        case 'submit':\n          this.saveDetails('submit');\n          break;\n\n        case 'obsolete':\n          this.completeTask(4, this.openAs, '');\n          break;\n\n        case 'clear':\n          this.clear();\n          break;\n\n        case 'seekClarification':\n          this.service.OpenAs.next(false);\n          this.completeTask(0, this.openAs, '');\n          break;\n\n        case 'reject':\n          this.completeTask(3, this.openAs, '');\n          break;\n\n        case 'sentToARAI':\n          this.sentToARAI();\n          break;\n\n        case 'complete':\n          this.saveARAI('complete');\n          break;\n\n        case 'docSave':\n          this.saveARAI('docsave');\n          break;\n\n        case 'clone':\n          this.saveDetails('clone');\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    this.CLONE_REQUEST_NO = this.datavalidate(changes['requestIDClone'].currentValue.REQUEST_NO);\n    this.cloneHRNo = this.datavalidate(changes['cloneHRNo'].currentValue);\n  }\n\n  ngOnInit() {\n    this.getReportName();\n    this.getFDHLReportNameAndVersion();\n    this.activatedRoute.url.subscribe(urlSegments => {\n      this.routeName = urlSegments[0].path;\n    });\n  }\n\n  getFDHLReportNameAndVersion() {\n    this.service.invokeService(\"GetFDHLReportNameAndVersion\", null, this.namespace, true, false).then(res => {\n      res.forEach(obj => {\n        if (obj.REPORT_REF_ID == 1) {\n          this.reguTable12 = obj.REPORT_VERSION;\n        } else if (obj.REPORT_REF_ID == 2) {\n          this.reguCovering = obj.REPORT_VERSION;\n        } else if (obj.REPORT_REF_ID == 3) {\n          this.reguTable4G = obj.REPORT_VERSION;\n        } else if (obj.REPORT_REF_ID == 4) {\n          this.reguChapter2 = obj.REPORT_VERSION;\n        }\n      });\n    });\n  }\n\n  cloneFdHlRequest() {\n    this.call_modal = false;\n    let obj = {\n      HR_REF_NO: this.HR_REF_NO,\n      CHR_REF_NO: this.cloneHRNo,\n      CLONE_REQUEST_NO: this.CLONE_REQUEST_NO\n    };\n    this.service.invokeService(\"CloneFdHlRequest\", obj, this.namespace, true, false).then(res => {\n      var _a, _b, _c, _d;\n\n      this.service.cloneHRNo.next(this.cloneHRNo);\n      (_a = this.covering) === null || _a === void 0 ? void 0 : _a.getFDHLCoveringLetterDetails();\n      (_b = this.covering) === null || _b === void 0 ? void 0 : _b.getFDHLCLEnClosureDetails();\n      (_c = this.table12) === null || _c === void 0 ? void 0 : _c.getData();\n      (_d = this.table12) === null || _d === void 0 ? void 0 : _d.getFDHLRequestVariantDetails(); // this.getFDHLEngineModelsByFamily();\n      // this.getFDHLRequestVariantDetails(this.HR_REF_NO);\n\n      Promise.all([this.getFDHLRequestDetails(this.HR_REF_NO), this.callReqManagement1(this.HR_REF_NO)]).then(res => {\n        // this.table4g?.getData();\n        // this.table4g?.getMesurment();\n        // this.table4g?.getMode();\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: `New Request Created Successfully`,\n            'text1': `Request ID`,\n            'text2': `${this.REQUEST_NO}`,\n            active: this.call_modal\n          };\n        }, 0);\n      });\n    });\n  }\n\n  getopenAs() {\n    let routerName = window.location.href.split('/')[window.location.href.split('/').length - 1];\n\n    if (routerName.includes('?')) {\n      this.OpenAs = routerName.split('?')[1].split('&')[1].split('=')[1];\n\n      if (this.OpenAs == 'customInboxTask' && this.actStage == '2' || this.OpenAs == 'completed' || this.OpenAs == 'dashboard') {\n        this.dis2 = true;\n        this.service.OpenAs.next(true);\n      } else {\n        this.dis2 = false;\n        this.service.OpenAs.next(false);\n      }\n    }\n  }\n\n  getFdHlAnnexureDetailsByFamily() {\n    let refId;\n\n    if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\n      refId = 3;\n    } else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\n      refId = 4;\n    }\n\n    let obj = {\n      HR_REF_NO: this.HR_REF_NO,\n      REPORT_REF_ID: refId,\n      ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value\n    };\n    this.service.invokeService(\"GetFdHlAnnexureDetailsByFamily\", obj, this.namespace, true, false).then(res => {\n      this.anexureArr = res;\n    });\n  }\n\n  anneUploadFile1(parrent, child) {\n    this.parrentInd = parrent;\n    this.childInd = child;\n    $(\"#certfileUploadDoc1\").click();\n  }\n\n  anneUploadFile1Doc1(e) {\n    this.call_modal = false;\n    let fileName = '';\n    let fileExt = '';\n    this.certfile = e.target.files[0];\n\n    if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 5) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Document Size Limit Exceeded,You have total limit upto 5MB !',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    fileName = e.target.files[0].name;\n    fileExt = e.target.files[0].name.split('.')[1];\n    this.service.uploadFile(\"UploadFDHLDocumnets\", this.certfile, ['png', 'jpg', 'jpeg'], this.namespace, false, false).then(resDocPath => {\n      this.variantsArr[this.parrentInd].Table12Arr[this.childInd].ANNEXURE_NAME = fileName;\n      this.variantsArr[this.parrentInd].Table12Arr[this.childInd].ANNEXURE_PATH = resDocPath;\n      this.variantsArr[this.parrentInd].Table12Arr[this.childInd].ANNEXURE_EXT = fileExt;\n    }); // this.certfileUploadDoc1=''\n    // }\n  }\n\n  clear() {\n    var _a, _b;\n\n    if (this.datavalidate(this.HR_REF_NO) == '') {\n      this.createRequestForm.patchValue({\n        LOCATION: '',\n        CERTIFICATION_TYPE: '',\n        ENGINE_FAMILY_NO: '',\n        WBS: '',\n        COST_CENTER: ''\n      });\n      this.remarks = '';\n      this.variantsArr = [];\n      this.nameArr = [];\n    } else {\n      this.createRequestForm.patchValue({\n        WBS: '',\n        COST_CENTER: ''\n      });\n      this.remarks = '';\n      (_a = this.covering) === null || _a === void 0 ? void 0 : _a.clear();\n      (_b = this.table12) === null || _b === void 0 ? void 0 : _b.clear();\n      this.engineVarient.forEach(obj => {\n        var _a, _b;\n\n        if (obj.HRV_REF_NO != '') {\n          if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\n            (_a = this.table4g) === null || _a === void 0 ? void 0 : _a.clear(obj.HRV_REF_NO, obj.VARIANT);\n          } else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\n            (_b = this.chapter2) === null || _b === void 0 ? void 0 : _b.clear(obj.HRV_REF_NO, obj.VARIANT);\n          }\n        }\n      });\n    }\n  }\n\n  onButtonClick(event, type) {\n    event.stopPropagation(); //  if(type='covering'){\n\n    let obj = {\n      FDHL_DOC_TYPE: type,\n      HR_REF_NO: this.HR_REF_NO,\n      HRV_REF_NO: '',\n      REPORT_REF_ID: ''\n    };\n    this.service.invokeService(\"GenerateFDHlWordDocument\", obj, this.namespace, true, false).then(res => {\n      this.coveringWordDoc = res[0].generateFDHlWordDocument;\n      this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlWordDocument, res[0].generateFDHlWordDocument + \";reportpath\", this.namespace, true, false);\n    });\n  }\n\n  consolidate() {\n    let type = '';\n    let refId = 0;\n\n    if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\n      type = 'Table 4G';\n      refId = 3;\n    } else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\n      type = 'Chapter 2';\n      refId = 4;\n    }\n\n    let obj = {\n      FDHL_DOC_TYPE: type,\n      HR_REF_NO: this.HR_REF_NO,\n      HRV_REF_NO: '',\n      REPORT_REF_ID: refId\n    };\n    this.service.invokeService(\"GenerateFDHlConsolidateReport\", obj, this.namespace, true, false).then(res => {\n      this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlConsolidateReport, res[0].generateFDHlConsolidateReport + \";reportpath\", this.namespace, true, false);\n    });\n  }\n\n  ARAIValid() {\n    if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '') {\n      this.isSubmitted1 = true;\n      this.ARAITrue = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  sentToARAI() {\n    this.call_modal = false;\n\n    if (this.ARAIValid()) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          'text': 'Please Enter ARAI Request Number',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    let dataObj1 = {};\n\n    if (this.datavalidate(this.HR_REF_NO) != '') {\n      dataObj1 = {\n        tuple: {\n          old: {\n            FD_HL_REQUEST_DETAILS: {\n              HR_REF_NO: this.HR_REF_NO\n            }\n          },\n          new: {\n            FD_HL_REQUEST_DETAILS: {\n              'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value),\n              'CURRENT_STAGE': this.actStage,\n              'REMARKS': this.remarks\n            }\n          }\n        }\n      };\n    }\n\n    this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj1, this.namespace, true, false).then(res => {\n      let dataObj = {\n        HR_REF_NO: this.HR_REF_NO,\n        from_User: this.loginUserID,\n        to_User: '',\n        mailType: 'Send to ARAI',\n        stage: this.actStage,\n        status: 5,\n        taskId: this.taskId,\n        remarks: this.remarks\n      };\n      this.service.invokeService(\"SendFD_HLCustomMailWrapper\", dataObj, this.namespace, true, false).then(res => {\n        // this.ARAIFlag = res[0].sendFD_HLCustomMailWrapper;\n        let dataObj = {\n          HR_REF_NO: this.HR_REF_NO\n        };\n        this.service.invokeService(\"GetFDHLRequestDetails\", dataObj, this.namespace, true, false).then(res => {\n          this.procesStatus = res[0].PROCESS_STATUS;\n          this.service.ARAIFlag.next(this.procesStatus);\n        });\n        this.getFD_HLHistoryDetailsByHR_RefNo();\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            'text': 'Task Sent to ARAI Successfully',\n            active: this.call_modal\n          };\n        }, 0);\n      });\n    });\n  }\n\n  getEngineFamily() {\n    let dataObj = {\n      ENGINE_M_REF_ID: ''\n    };\n    this.service.invokeService(\"GetFDHLEngineFamilyDetails\", dataObj, this.namespace, true, false).then(res => {\n      this.engineFamilyDataArr = res;\n      res.forEach(data => {\n        this.ENGINE_FAMILY_NO_Arr.push({\n          RefNo: data.ENGINE_F_REF_ID,\n          ENGINE_FAMILY_NO: data.ENGINE_FAMILY_NO,\n          EMISSION_COMPLIANCE: data.EMISSION_COMPLIANCE\n        });\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n\n  backBtnLink() {\n    if (this.HR_REF_NO != '' && this.datavalidate(this.openAs) != '') {\n      return true;\n    }\n\n    if (this.HR_REF_NO == '') {\n      return false;\n    }\n\n    if (this.HR_REF_NO != '' && this.datavalidate(this.openAs) == '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  validTypeApproval() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.call_modal = false;\n      var CERTIFICATION_TYPE = _this2.createRequestForm.controls['CERTIFICATION_TYPE'].value;\n      var ENGINE_FAMILY_NO = _this2.createRequestForm.controls['ENGINE_FAMILY_NO'].value;\n      let obj = {\n        ENGINE_FAMILY_NO: _this2.createRequestForm.controls['ENGINE_FAMILY_NO'].value\n      };\n\n      try {\n        let res = yield _this2.service.invokeService(\"GetFDHLApprovalRequestNo\", obj, _this2.namespace, true, false);\n\n        if (res.length == 0) {\n          if (CERTIFICATION_TYPE == 'Amendment' && ENGINE_FAMILY_NO != '') {\n            setTimeout(() => {\n              _this2.call_modal = true;\n              _this2.data_send = {\n                text: 'Please Create Type Approval Request',\n                active: _this2.call_modal\n              };\n              _this2.saveType == 'submit' ? '' : _this2.createRequestForm.patchValue({\n                CERTIFICATION_TYPE: ''\n              });\n            }, 0);\n            return true;\n          }\n        } else {\n          for (let obj of res) {\n            if (CERTIFICATION_TYPE == 'Approval' && (obj.PROCESS_STATUS == '1' || obj.PROCESS_STATUS == '2') && obj.CERTIFICATION_TYPE == 'Approval') {\n              setTimeout(() => {\n                _this2.call_modal = true;\n                _this2.data_send = {\n                  text: _this2.datavalidate(obj.REQUEST_NO) + ' is already created',\n                  text1: 'For Type Approval with Engine Family No. ' + ENGINE_FAMILY_NO,\n                  active: _this2.call_modal\n                };\n                _this2.saveType == 'submit' ? '' : _this2.createRequestForm.patchValue({\n                  CERTIFICATION_TYPE: ''\n                });\n              }, 0);\n              return true;\n            } else if (CERTIFICATION_TYPE == 'Amendment' && obj.PROCESS_STATUS == '2' && obj.CERTIFICATION_TYPE == 'Amendment') {\n              setTimeout(() => {\n                _this2.call_modal = true;\n                _this2.data_send = {\n                  text: 'Type Amendment is already',\n                  text1: 'Inprogress with ' + obj.REQUEST_NO,\n                  active: _this2.call_modal\n                };\n                _this2.saveType == 'submit' ? '' : _this2.createRequestForm.patchValue({\n                  CERTIFICATION_TYPE: ''\n                });\n              }, 0);\n              return true;\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n\n      return false;\n    })();\n  }\n\n  back() {\n    let variable = this.OpenAs == 'saved' ? 'saved' : this.OpenAs == 'customInboxTask' ? 'inbox' : this.OpenAs == 'completed' ? 'completedTasks' : '';\n    this.menuComp.menuHideFun();\n    this.location.back(); // this.router.navigate(['inbox']);\n\n    this.service.routeChange.next(variable);\n    this.service.createPageEvents.next('');\n    this.service.OpenAs.next(false);\n  }\n\n  workflowHistory() {\n    this.AAHPopup = 'block';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"hidden\";\n  }\n\n  closeWorkFlowDoc() {\n    this.AAHPopup = 'none';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"auto\";\n  }\n\n  getFD_HLHistoryDetailsByHR_RefNo() {\n    let dataObj = {\n      HR_RefNo: this.HR_REF_NO\n    };\n    this.service.invokeService(\"GetFD_HLHistoryDetailsByHR_RefNo\", dataObj, this.namespace, true, false).then(res => {\n      this.AAHArr = res;\n    });\n  }\n\n  getFDHLRequestDetails(arg) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let dataObj = {\n        HR_REF_NO: arg\n      };\n      yield _this3.service.invokeService(\"GetFDHLRequestDetails\", dataObj, _this3.namespace, true, false).then(res => {\n        // this.clarificationType = this.datavalidate(res[0].CERTIFICATION_TYPE)\n        _this3.REQUEST_NO = res[0].REQUEST_NO;\n        _this3.procesStatus = res[0].PROCESS_STATUS;\n        _this3.remarks = _this3.datavalidate(_this3.actStage) == _this3.datavalidate(res[0].CURRENT_STAGE) ? res[0].REMARKS : '';\n\n        _this3.createRequestForm.patchValue({\n          LOCATION: _this3.datavalidate(res[0].LOCATION),\n          CERTIFICATION_TYPE: _this3.datavalidate(res[0].CERTIFICATION_TYPE),\n          ENGINE_FAMILY_NO: _this3.datavalidate(res[0].ENGINE_FAMILY_NO),\n          WBS: _this3.datavalidate(res[0].WBS),\n          COST_CENTER: _this3.datavalidate(res[0].COST_CENTER),\n          ARAI: _this3.datavalidate(res[0].ARAI_NO),\n          APEX: _this3.datavalidate(res[0].APEX_NO)\n        }); // if(this.routeName!='clone'){\n\n\n        _this3.getFDHLEngineModelsByFamily();\n\n        _this3.service.ARAIFlag.next(_this3.procesStatus); // }\n\n      });\n    })();\n  }\n\n  getFD_HLDocDetailsByHR_RefNo(arg) {\n    this.documentsArr = [];\n    this.certdocumentsArr = [];\n    this.repdocumentsArr = [];\n    this.appdocumentsArr = [];\n    this.dradocumentsArr = [];\n    this.invdocumentsArr = [];\n    this.initValue = 0;\n    this.certDocSize = 0;\n    this.repDocSize = 0;\n    this.appDocSize = 0;\n    this.dragDocSize = 0;\n    this.invDocSize = 0;\n    let dataObj = {\n      HR_RefNo: arg\n    };\n    this.service.invokeService(\"GetFD_HLDocDetailsByHR_RefNo\", dataObj, this.namespace, true, false).then(res => {\n      res.filter(doc => {\n        switch (doc.DOC_TYPE) {\n          case 'Main':\n            this.documentsArr.push(doc);\n            this.initValue += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Certificates':\n            this.certdocumentsArr.push(doc);\n            this.certDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Reports':\n            this.repdocumentsArr.push(doc);\n            this.repDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Approved':\n            this.appdocumentsArr.push(doc);\n            this.appDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Drawings':\n            this.dradocumentsArr.push(doc);\n            this.dragDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Invoice':\n            this.invdocumentsArr.push(doc);\n            this.invDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  getFDHLEngineModelsByFamily() {\n    this.call_modal = false;\n    this.variantsArr = [];\n    this.variantsArr1 = [];\n\n    if (this.datavalidate(this.HR_REF_NO) == '') {\n      this.callReqManagement1(this.HR_REF_NO);\n    }\n\n    let dataObj = {\n      ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value\n    };\n    this.service.invokeService(\"GetFDHLEngineModelsByFamily\", dataObj, this.namespace, true, false).then(res => {\n      this.engineVarient = res;\n      this.engineVarient.forEach(d1 => {\n        d1.HRV_REF_NO = '';\n        d1.isChecked = false;\n      });\n      this.ENGINE_FAMILY_NO_Arr.forEach(d => {\n        if (d.ENGINE_FAMILY_NO == this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\n          this.emisionComplaince = d.EMISSION_COMPLIANCE;\n        }\n      });\n\n      if (this.datavalidate(this.openAs) == '') {\n        this.validTypeApproval();\n      }\n\n      this.isvarientCheck();\n      this.getFdHlAnnexureDetailsByFamily();\n    });\n  }\n\n  isvarientCheck() {\n    let check = false;\n\n    if (this.engineVarient == 0) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Please create at least one variant',\n          active: this.call_modal\n        };\n      }, 0);\n      check = true;\n    }\n\n    return check;\n  }\n\n  loadPage() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.activatedRoute.queryParams.subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (params) {\n          _this4.HR_REF_NO = params.HR_REF_NO;\n          _this4.taskId = params['taskId'];\n          _this4.openAs = params['openAs'];\n\n          _this4.service.actStag.next('');\n\n          if (_this4.taskId) {\n            $.cordys.json.defaults.removeNamespacePrefix = true;\n            yield $.cordys.workflow.getTaskDetails(_this4.taskId).done(tData => {\n              // this.taskState = tData.State;\n              _this4.HR_REF_NO = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.HR_REF_NO;\n              _this4.actRole = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.ACT_ROLE;\n              _this4.actStage = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.STAGE;\n              let varObj = _this4.actRole + ',' + _this4.actStage;\n\n              _this4.service.roleStage.next(varObj);\n\n              _this4.service.actStag.next(_this4.actStage);\n\n              _this4.getopenAs();\n            });\n          }\n\n          if (_this4.datavalidate(_this4.HR_REF_NO) != '') {\n            let obj = {\n              'HR_REF_NO': _this4.HR_REF_NO,\n              'actRole': _this4.actRole,\n              'actStage': _this4.actStage\n            };\n\n            _this4.service.sharingData(obj, 'HR_REF_NO');\n\n            _this4.service.taskPage.next(true);\n\n            _this4.getFDHLRequestDetails(_this4.HR_REF_NO);\n\n            _this4.callReqManagement1(_this4.HR_REF_NO);\n\n            _this4.getFD_HLDocDetailsByHR_RefNo(_this4.HR_REF_NO);\n\n            _this4.getFD_HLHistoryDetailsByHR_RefNo();\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      _this4.getopenAs();\n    })();\n  }\n\n  variantSelect(obj) {\n    if (!obj.isChecked) {\n      // this.idArr.splice(this.idArr.indexOf(obj.LOV_ID), 1)\n      this.nameArr.splice(this.nameArr.indexOf(obj.VARIANT), 1);\n\n      if (this.datavalidate(obj.HRV_REF_NO) == '') {} else {\n        this.confirmationService.confirm({\n          message: 'Probably loose the saved data. Do you want to proceed?',\n          header: 'Confirmation',\n          icon: 'pi pi-exclamation-triangle',\n          accept: () => {\n            let param = {\n              'HRV_REF_NO': obj.HRV_REF_NO,\n              'HR_REF_NO': this.HR_REF_NO\n            };\n            this.service.invokeService(\"DeleteFDHLRequestVariant\", param, this.namespace, true, false).then(res => {\n              for (let item of this.engineVarient) {\n                if (item.HRV_REF_NO == obj.HRV_REF_NO && obj.HRV_REF_NO != '') {\n                  this.HRV_REF_NOArr.splice(this.HRV_REF_NOArr.indexOf(obj.HRV_REF_NO), 1);\n                  item.HRV_REF_NO = '';\n                  item.isChecked = false;\n                }\n              }\n            });\n          },\n          reject: () => {\n            obj.isChecked = true;\n            this.nameArr.push(obj.VARIANT);\n            let temp = {\n              HRV_REF_NO: obj.HRV_REF_NO,\n              LOV_DESC: obj.VARIANT,\n              Table12Arr: [],\n              Measurment: [],\n              Mode: [{\n                innerArr: []\n              }]\n            };\n            let temp1 = {\n              HRV_REF_NO: obj.HRV_REF_NO,\n              LOV_DESC: obj.VARIANT,\n              Table12Arr1: [],\n              Measurment: [],\n              Mode: [{\n                innerArr: []\n              }]\n            };\n            this.variantsArr.push(temp);\n            this.variantsArr1.push(temp1);\n            this.nameArrStr = [...new Set(this.nameArr)].toString();\n            this.variantsArr = [...new Set(this.variantsArr)];\n            this.variantsArr1 = [...new Set(this.variantsArr1)];\n            setTimeout(() => {\n              this.getFdHlRequestManagement();\n              this.getFdHlRequestManagement1();\n            }, 0);\n          }\n        });\n      }\n\n      this.variantsArr.forEach(d => {\n        if (d.LOV_DESC == obj.VARIANT) {\n          this.variantsArr.splice(this.variantsArr.indexOf(d), 1);\n        }\n      });\n      this.variantsArr1.forEach(d1 => {\n        if (d1.LOV_DESC == obj.VARIANT) {\n          this.variantsArr1.splice(this.variantsArr1.indexOf(d1), 1);\n        }\n      });\n    } else {\n      // this.idArr.push(obj.VARIANT)\n      this.nameArr.push(obj.VARIANT);\n      let temp = {\n        HRV_REF_NO: obj.HRV_REF_N,\n        LOV_DESC: obj.VARIANT,\n        Table12Arr: [],\n        Measurment: [],\n        Mode: [{\n          innerArr: []\n        }]\n      };\n      let temp1 = {\n        HRV_REF_NO: obj.HRV_REF_NO,\n        LOV_DESC: obj.VARIANT,\n        Table12Arr1: [],\n        Measurment: [],\n        Mode: [{\n          innerArr: []\n        }]\n      };\n      this.variantsArr.push(temp);\n      this.variantsArr1.push(temp1);\n    } // this.idArrStr = this.idArr.toString();\n\n\n    this.nameArrStr = [...new Set(this.nameArr)].toString();\n    this.variantsArr = [...new Set(this.variantsArr)];\n    this.variantsArr1 = [...new Set(this.variantsArr1)];\n    this.getFdHlRequestManagement();\n    this.getFdHlRequestManagement1();\n  }\n\n  getFDHLRequestVariantDetails(arg) {\n    this.HRV_REF_NOArr = [];\n    this.nameArr = [];\n    var param = {\n      HR_REF_NO: arg\n    };\n    this.service.invokeService(\"GetFDHLRequestVariantDetails\", param, this.namespace, true, false).then(res => {\n      this.engineVarient.filter(d => {\n        res.forEach(d1 => {\n          if (d.VARIANT == d1.VARIANT) {\n            d.HRV_REF_NO = d1.HRV_REF_NO;\n            this.HRV_REF_NOArr.push(d1.HRV_REF_NO);\n            this.nameArr.push(d1.VARIANT);\n            d.isChecked = true;\n            this.variantsArr.push({\n              HR_REF_NO: d1.HR_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              LOV_DESC: d.VARIANT,\n              Table12Arr: [],\n              Measurment: [],\n              Mode: [{\n                innerArr: []\n              }]\n            });\n            this.variantsArr1.push({\n              HR_REF_NO: d1.HR_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              LOV_DESC: d.VARIANT,\n              Table12Arr1: [],\n              Measurment: [],\n              Mode: [{\n                innerArr: []\n              }]\n            });\n          }\n        });\n      });\n      this.getFdHlRequestManagement();\n      this.getFdHlRequestManagement1();\n    });\n  }\n\n  saveVariants() {\n    let ParamTuple = [];\n    var params = {};\n\n    for (var obj of this.engineVarient) {\n      // if(obj.isChecked){\n      if (this.datavalidate(obj.HRV_REF_NO) == \"\") {\n        params = {\n          'new': {\n            'FD_HL_REQUEST_VARIANTS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'VARIANT': this.datavalidate(obj.VARIANT),\n              'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\n            }\n          }\n        };\n      } else {\n        params = {\n          'old': {\n            'FD_HL_REQUEST_VARIANTS': {\n              'HRV_REF_NO': obj.HRV_REF_NO\n            }\n          },\n          'new': {\n            'FD_HL_REQUEST_VARIANTS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'VARIANT': this.datavalidate(obj.VARIANT),\n              'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\n            }\n          }\n        };\n      } // }\n\n\n      if (obj.isChecked) {\n        ParamTuple.push(params);\n      }\n    }\n\n    var paramsAll = {\n      'tuple': ParamTuple\n    };\n    this.service.invokeService(\"UpdateFdHlRequestVariants\", paramsAll, this.namespace, true, false).then(res => {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n      res.forEach(obj => {\n        this.HRV_REF_NOArr.push(obj.HRV_REF_NO);\n      });\n      this.engineVarient.filter(d => {\n        res.forEach(d1 => {\n          if (d.VARIANT == d1.VARIANT) {\n            d.HRV_REF_NO = d1.HRV_REF_NO;\n          }\n        });\n      }); // this.service.callTable4G.next('table4g');\n      // this.service.callTable4G.next('chapter2');\n      // this.service.callTable4G.next('table12');\n      // this.service.callTable4G.next('covering');\n\n      if (this.saveType != 'clone') {\n        if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\n          Promise.all([(_a = this.covering) === null || _a === void 0 ? void 0 : _a.updateFdHlCoveringLetter(), (_b = this.covering) === null || _b === void 0 ? void 0 : _b.updateFdHlClEnclosure(), (_c = this.table4g) === null || _c === void 0 ? void 0 : _c.save(), (_d = this.table12) === null || _d === void 0 ? void 0 : _d.updateFdHlTable12(), (_e = this.table12) === null || _e === void 0 ? void 0 : _e.updateFdHlTab12SpecChanges(), (_f = this.table4g) === null || _f === void 0 ? void 0 : _f.saveMode(), (_g = this.table4g) === null || _g === void 0 ? void 0 : _g.saveMeasurment()]).then(res => {\n            this.saveDocuments();\n          }).catch(error => {// alert('error: data not saved successfully');\n          });\n        } else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\n          Promise.all([(_h = this.covering) === null || _h === void 0 ? void 0 : _h.updateFdHlCoveringLetter(), (_j = this.covering) === null || _j === void 0 ? void 0 : _j.updateFdHlClEnclosure(), (_k = this.chapter2) === null || _k === void 0 ? void 0 : _k.save(), (_l = this.table12) === null || _l === void 0 ? void 0 : _l.updateFdHlTable12(), (_m = this.table12) === null || _m === void 0 ? void 0 : _m.updateFdHlTab12SpecChanges(), (_o = this.chapter2) === null || _o === void 0 ? void 0 : _o.saveMode(), (_p = this.chapter2) === null || _p === void 0 ? void 0 : _p.saveMeasurment()]).then(res => {\n            this.saveDocuments();\n          }).catch(error => {// alert('error: data not saved successfully');\n          });\n        } else {\n          Promise.all([(_q = this.covering) === null || _q === void 0 ? void 0 : _q.updateFdHlCoveringLetter(), (_r = this.covering) === null || _r === void 0 ? void 0 : _r.updateFdHlClEnclosure(), (_s = this.table12) === null || _s === void 0 ? void 0 : _s.updateFdHlTable12(), (_t = this.table12) === null || _t === void 0 ? void 0 : _t.updateFdHlTab12SpecChanges()]).then(res => {\n            this.saveDocuments();\n          }).catch(error => {// alert('error: data not saved successfully');\n          });\n        }\n      } else {\n        this.cloneFdHlRequest();\n      }\n    });\n  }\n\n  getReportName() {\n    this.service.invokeService(\"GetFDHLReportNames\", null, this.namespace, true, false).then(res => {\n      this.ReportName = res;\n      res.forEach(d => {\n        if (d.REPORT_NAME == 'Table 4G') {\n          this.table4gVar.push(d);\n        } else if (d.REPORT_NAME == 'Chapter 2') {\n          this.chapter2Var.push(d);\n        }\n      });\n    });\n  }\n\n  openDoc() {\n    this.displayPopup = 'block';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"hidden\"; // body.style.opacity = '0.85';\n  }\n\n  closeDoc() {\n    this.displayPopup = 'none';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"auto\"; // body.style.opacity = '1';\n  }\n\n  downloadFile(doc) {\n    this.service.downloadFile(\"DownloadDocument\", doc.DOC_NAME, doc.DOC_PATH, this.namespace);\n  }\n\n  checkAllCheckBox(ev) {\n    this.documentsArr.forEach(x => x.checked = ev.target.checked);\n    ev.target.checked ? this.documentsArr.forEach(x => {\n      this.checkedRows.push(x);\n    }) : this.checkedRows = [];\n  }\n\n  isAllCheckBoxChecked() {\n    return this.documentsArr.every(p => p.checked);\n  }\n\n  tdCheckbox(row) {\n    row.checked == true ? this.checkedRows.push(row) : this.checkedRows.splice(this.checkedRows.indexOf(row), 1);\n  }\n\n  uploadFile() {\n    $(\"#fileUploadDoc\").click();\n  }\n\n  UploadFileDoc(e) {\n    this.mainDocSpinner = true;\n    this.call_modal = false;\n    this.file = e.target.files[0];\n    this.fileName = e.target.files[0].name;\n    const record = this.documentsArr.find(item => {\n      return item.DOC_NAME == this.fileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n      this.mainDocSpinner = false;\n    } else {\n      if (this.initValue + parseFloat(this.file.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        this.mainDocSpinner = false;\n        return;\n      } else {\n        this.service.uploadFile(\"UploadFDHLDocumnets\", this.file, [], this.namespace, false, false).then(resDocPath => {\n          this.mainDocSpinner = false;\n          this.initValue = this.initValue + parseFloat(this.file.size) / 1024 / 1024;\n          this.documentsArr.push({\n            'DOC_REF_NO': '',\n            'DOC_NAME': this.service.datavalidate(this.fileName),\n            \"DOC_PATH\": resDocPath,\n            'DOC_TYPE': 'Main',\n            'UPLOADERNAME': this.loginUserID,\n            'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n            'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n          });\n          this.fileUploadDoc = '';\n        }).catch(err => {\n          this.mainDocSpinner = false;\n        });\n      }\n    }\n  }\n\n  certUploadFile() {\n    $(\"#certfileUploadDoc\").click();\n  }\n\n  certUploadFileDoc(e) {\n    this.certSpinner = true;\n    this.call_modal = false;\n    this.certfile = e.target.files[0];\n    this.certfileName = e.target.files[0].name;\n    const record = this.certdocumentsArr.find(item => {\n      return item.DOC_NAME == this.certfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n      this.certSpinner = false;\n    } else {\n      if (this.certDocSize + parseFloat(this.certfile.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        this.certSpinner = false;\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.certfile, [], this.namespace, false, false).then(resDocPath => {\n        this.certSpinner = false;\n        this.certDocSize = this.certDocSize + parseFloat(this.certfile.size) / 1024 / 1024;\n        this.certdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.certfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Certificates',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.certfileUploadDoc = '';\n      }).catch(error => {\n        this.certSpinner = false;\n      });\n    }\n  }\n\n  repUploadFile() {\n    $(\"#repfileUploadDoc\").click();\n  }\n\n  repUploadFileDoc(e) {\n    this.repSpinner = true;\n    this.call_modal = false;\n    this.repfile = e.target.files[0];\n    this.repfileName = e.target.files[0].name;\n    const record = this.repdocumentsArr.find(item => {\n      return item.DOC_NAME == this.repfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n      this.repSpinner = false;\n    } else {\n      if (this.repDocSize + parseFloat(this.repfile.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        this.repSpinner = false;\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.repfile, [], this.namespace, false, false).then(resDocPath => {\n        this.repSpinner = false;\n        this.repDocSize = this.repDocSize + parseFloat(this.repfile.size) / 1024 / 1024;\n        this.repdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.repfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Reports',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.repfileUploadDoc = '';\n      }).catch(err => {\n        this.repSpinner = false;\n      });\n    }\n  }\n\n  appUploadFile() {\n    $(\"#appfileUploadDoc\").click();\n  }\n\n  appUploadFileDoc(e) {\n    this.appSpinner = true;\n    this.call_modal = false;\n    this.appfile = e.target.files[0];\n    this.appfileName = e.target.files[0].name;\n    const record = this.appdocumentsArr.find(item => {\n      return item.DOC_NAME == this.appfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n      this.appSpinner = false;\n    } else {\n      if (this.appDocSize + parseFloat(this.appfile.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        this.appSpinner = false;\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.appfile, [], this.namespace, false, false).then(resDocPath => {\n        this.appSpinner = false;\n        this.appDocSize = this.appDocSize + parseFloat(this.appfile.size) / 1024 / 1024;\n        this.appdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.appfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Approved',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.appfileUploadDoc = '';\n      }).catch(err => {\n        this.appSpinner = false;\n      });\n    }\n  }\n\n  draUploadFile() {\n    $(\"#drafileUploadDoc\").click();\n  }\n\n  draUploadFileDoc(e) {\n    this.dragSpinner = true;\n    this.call_modal = false;\n    this.drafile = e.target.files[0];\n    this.drafileName = e.target.files[0].name;\n    const record = this.dradocumentsArr.find(item => {\n      return item.DOC_NAME == this.drafileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n      this.dragSpinner = false;\n    } else {\n      if (this.dragDocSize + parseFloat(this.drafile.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        this.dragSpinner = false;\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.drafile, [], this.namespace, false, false).then(resDocPath => {\n        this.dragSpinner = false;\n        this.dragDocSize = this.dragDocSize + parseFloat(this.drafile.size) / 1024 / 1024;\n        this.dradocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.drafileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Drawings',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.drafileUploadDoc = '';\n      }).catch(err => {\n        this.dragSpinner = false;\n      });\n    }\n  }\n\n  invUploadFile() {\n    $(\"#invfileUploadDoc\").click();\n  }\n\n  invUploadFileDoc(e) {\n    this.invSpinner = true;\n    this.call_modal = false;\n    this.invfile = e.target.files[0];\n    this.invfileName = e.target.files[0].name;\n    const record = this.invdocumentsArr.find(item => {\n      return item.DOC_NAME == this.invfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n      this.invSpinner = false;\n    } else {\n      if (this.invDocSize + parseFloat(this.invfile.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        this.invSpinner = false;\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.invfile, [], this.namespace, false, false).then(resDocPath => {\n        this.invSpinner = false;\n        this.invDocSize = this.invDocSize + parseFloat(this.invfile.size) / 1024 / 1024;\n        this.invdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.invfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Invoice',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.invfileUploadDoc = '';\n      }).catch(err => {\n        this.invSpinner = false;\n      });\n    }\n  }\n\n  certDelete(i) {\n    if (this.datavalidate(this.certdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.certdocumentsArr[i].DOC_REF_NO);\n          this.certDocSize = this.certDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\n          this.certdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.certDocSize = this.certDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\n      this.certdocumentsArr.splice(i, 1);\n    }\n  }\n\n  repDelete(i) {\n    if (this.datavalidate(this.repdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.repdocumentsArr[i].DOC_REF_NO);\n          this.repDocSize = this.repDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\n          this.repdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.repDocSize = this.repDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\n      this.repdocumentsArr.splice(i, 1);\n    }\n  }\n\n  appDelete(i) {\n    if (this.datavalidate(this.appdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.appdocumentsArr[i].DOC_REF_NO);\n          this.appDocSize = this.appDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\n          this.appdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.appDocSize = this.appDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\n      this.appdocumentsArr.splice(i, 1);\n    }\n  }\n\n  draDelete(i) {\n    if (this.datavalidate(this.dradocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.dradocumentsArr[i].DOC_REF_NO);\n          this.dragDocSize = this.dragDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\n          this.dradocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.dragDocSize = this.dragDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\n      this.dradocumentsArr.splice(i, 1);\n    }\n  }\n\n  invDelete(i) {\n    if (this.datavalidate(this.invdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.invdocumentsArr[i].DOC_REF_NO);\n          this.invDocSize = this.invDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\n          this.invdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.invDocSize = this.invDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\n      this.invdocumentsArr.splice(i, 1);\n    }\n  }\n\n  gridDocSave(arg) {\n    this.call_modal = false;\n    const concatArr = [this.certdocumentsArr, this.repdocumentsArr, this.appdocumentsArr, this.dradocumentsArr, this.invdocumentsArr].flat();\n    let ParamTuple = [];\n    var params = {};\n\n    for (var save of concatArr) {\n      if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\n        params = {\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              \"UPLOADER_ID\": save.UPLOADER_ID,\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      } else {\n        params = {\n          'old': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_REF_NO': save.DOC_REF_NO\n            }\n          },\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      }\n\n      ParamTuple.push(params);\n    }\n\n    var paramsAll = {\n      'tuple': ParamTuple\n    };\n    this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false).then(res => {\n      this.gridDocSplit(res);\n\n      if (arg == 'complete') {\n        this.completeTask(1, this.openAs, '');\n      } else {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            'text': `Saved successfully `,\n            active: this.call_modal\n          };\n        }, 0);\n      }\n    }, err => {\n      console.log(\"Error occured while saving Docdata \");\n    });\n  }\n\n  gridDocSplit(doc) {\n    this.certdocumentsArr = [];\n    this.repdocumentsArr = [];\n    this.appdocumentsArr = [];\n    this.dradocumentsArr = [];\n    this.invdocumentsArr = [];\n    doc.forEach(obj => {\n      switch (obj.DOC_TYPE) {\n        case 'Certificates':\n          this.certdocumentsArr.push(obj);\n          break;\n\n        case 'Reports':\n          this.repdocumentsArr.push(obj);\n          break;\n\n        case 'Approved':\n          this.appdocumentsArr.push(obj);\n          break;\n\n        case 'Drawings':\n          this.dradocumentsArr.push(obj);\n          break;\n\n        case 'Invoice':\n          this.invdocumentsArr.push(obj);\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  gridDeleteFile(i) {\n    this.call_modal = false;\n    let dataObj = {\n      tuple: {\n        old: {\n          FD_HL_DOC_DETAILS: {\n            DOC_REF_NO: i\n          }\n        }\n      }\n    };\n    this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).then(ajaxResponse => {\n      // this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'File Deleted Successfull',\n          active: this.call_modal\n        };\n      }, 0);\n    });\n  }\n\n  gridDocValid(arg) {\n    if (arg != 'docsave') {\n      this.docSubmit = true;\n\n      if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '' || this.datavalidate(this.createRequestForm.controls['APEX'].value) == '') {\n        return true;\n      }\n\n      if (this.certdocumentsArr.length == 0 || this.repdocumentsArr.length == 0 || this.appdocumentsArr.length == 0 || this.dradocumentsArr.length == 0 || this.invdocumentsArr.length == 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  saveARAI(arg) {\n    this.ARAITrue = true; // this.isSubmitted1 = true;\n\n    this.call_modal = false;\n\n    if (this.gridDocValid(arg)) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Please enter all mandatory fields',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    let dataObj = {};\n\n    if (this.datavalidate(this.HR_REF_NO) != '') {\n      dataObj = {\n        tuple: {\n          old: {\n            FD_HL_REQUEST_DETAILS: {\n              HR_REF_NO: this.HR_REF_NO\n            }\n          },\n          new: {\n            FD_HL_REQUEST_DETAILS: {\n              'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value),\n              'APEX_NO': this.datavalidate(this.createRequestForm.controls['APEX'].value),\n              'CURRENT_STAGE': this.actStage,\n              'REMARKS': this.remarks\n            }\n          }\n        }\n      };\n    }\n\n    this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false).then(res => {\n      this.gridDocSave(arg);\n    });\n  }\n\n  receiveData(obj) {\n    this.coverLetterObj = obj;\n  }\n\n  receiveData1(obj) {\n    this.table12Obj = obj;\n  }\n\n  isValid() {\n    this.valid = false;\n\n    if (true) {\n      if (this.datavalidate(this.createRequestForm.controls['WBS'].value) == '' && this.saveType != 'clone' || this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value) == '' && this.saveType != 'clone') {\n        this.valid = true;\n      }\n\n      if (this.routeName == 'clone' && this.CLONE_REQUEST_NO == '') {\n        this.valid = true;\n      }\n\n      if (this.saveType != 'clone') {\n        if (this.coverLetterObj.enclosureArr.length == 0) {\n          this.valid = true;\n          this.service.callTable4G.next('covering');\n        } else {\n          for (let obj of this.coverLetterObj.enclosureArr) {\n            if (this.datavalidate(this.coverLetterObj.CL_CONTENT) == '' || this.coverLetterObj.CL_TO == '' || this.datavalidate(this.coverLetterObj.CL_REGARDS) == '' || this.datavalidate(this.coverLetterObj.Date) == '' || this.datavalidate(obj.ENCLOSURE) == '') {\n              this.valid = true;\n              this.service.callTable4G.next('covering');\n            }\n          }\n        }\n      }\n\n      if (this.saveType != 'clone' && this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value) != 'Approval') {\n        if (this.table12Obj.specArr.length == 0) {\n          this.valid = true;\n          this.service.callTable4G.next('table12');\n        } else {\n          if (this.datavalidate(this.table12Obj.MANUFACTURER) == '' || this.table12Obj.CMVR_CERTIFICATE_NO == '' || this.datavalidate(this.table12Obj.CMVR_CERTIFICATE_DATE) == '' || this.datavalidate(this.table12Obj.SPECIFICATION_NO) == '' || this.datavalidate(this.table12Obj.EXTENSION_DATE) == '' || this.datavalidate(this.table12Obj.EXTENSION_SPEC_REV) == '' || this.datavalidate(this.table12Obj.NATURE_OF_CHANGE) == '') {\n            this.valid = true;\n            this.service.callTable4G.next('table12');\n          } else {\n            for (let obj of this.table12Obj.specArr) {\n              if (this.datavalidate(obj.ENGINE_MODEL_NAME) == '' || this.datavalidate(obj.SPEC_NO) == '' || this.datavalidate(obj.DESCRIPTION) == '' || this.datavalidate(obj.PARAMETER_EARLIER) == '' || this.datavalidate(obj.PARAMETER_NEW_EXTENSION) == '') {\n                this.valid = true;\n                this.service.callTable4G.next('table12');\n              }\n            }\n          }\n        }\n      }\n\n      if (this.saveType != 'clone' && (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4')) {\n        for (let i = 0; i < this.variantsArr.length; i++) {\n          for (var obj of this.variantsArr[i].Table12Arr) {\n            if (obj.MANDATORY == 'Yes' && this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4')) {\n              this.valid = true;\n              this.service.callTable4G.next('table4g');\n            }\n          }\n\n          for (let obj1 of this.variantsArr[i].Mode) {\n            for (let obj2 of obj1.innerArr) {\n              if (this.datavalidate(obj2.ENGINE_SPEED) == '' || this.datavalidate(obj2.GROSS_POWER) == '') {\n                this.valid = true;\n                this.service.callTable4G.next('table4g');\n              }\n            }\n          }\n        }\n      }\n\n      if (this.saveType != 'clone' && (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3')) {\n        for (let i = 0; i < this.variantsArr1.length; i++) {\n          for (var obj of this.variantsArr1[i].Table12Arr1) {\n            if (obj.MANDATORY == 'Yes' && this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3')) {\n              this.valid = true;\n              this.service.callTable4G.next('chapter2'); //return;\n            }\n          }\n\n          for (let obj1 of this.variantsArr1[i].Measurment) {\n            if (this.datavalidate(obj1.ENGINE_SPEED) == '' || this.datavalidate(obj1.GROSS_POWER) == '') {\n              this.valid = true;\n              this.service.callTable4G.next('chapter2');\n            }\n          }\n        }\n      }\n    } else {\n      this.valid = false;\n    }\n\n    return this.valid;\n  }\n\n  saveValid() {\n    if (this.datavalidate(this.createRequestForm.controls['LOCATION'].value) == '' || this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value) == '' || this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) == '' || this.variantsArr.length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  saveDetails(arg) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.saveType = arg;\n      let dataObj = {};\n      _this5.call_modal = false;\n\n      if (_this5.isvarientCheck() && _this5.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\n        return;\n      }\n\n      if (_this5.saveValid()) {\n        _this5.isSaveSubm = true;\n        setTimeout(() => {\n          _this5.call_modal = true;\n          _this5.data_send = {\n            'text': 'Please Enter All Mandatory Fields',\n            active: _this5.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      if (_this5.documentsArr.length == 0 && arg == 'submit') {\n        setTimeout(() => {\n          _this5.call_modal = true;\n          _this5.data_send = {\n            'text': 'Please upload at least one document',\n            active: _this5.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      if (arg == 'submit' || arg == 'clone') {\n        _this5.isSubmitted = arg == 'submit' ? true : false;\n\n        if (yield _this5.validTypeApproval()) {\n          return;\n        }\n\n        if (_this5.isValid()) {\n          setTimeout(() => {\n            _this5.call_modal = true;\n            _this5.data_send = {\n              'text': 'Please Enter All Mandatory Fields',\n              active: _this5.call_modal\n            };\n          }, 0);\n          return;\n        }\n      }\n\n      if (_this5.datavalidate(_this5.HR_REF_NO) != '') {\n        dataObj = {\n          tuple: {\n            old: {\n              FD_HL_REQUEST_DETAILS: {\n                HR_REF_NO: _this5.HR_REF_NO\n              }\n            },\n            new: {\n              FD_HL_REQUEST_DETAILS: {\n                'LOCATION': _this5.datavalidate(_this5.createRequestForm.controls['LOCATION'].value),\n                'CERTIFICATION_TYPE': _this5.datavalidate(_this5.createRequestForm.controls['CERTIFICATION_TYPE'].value),\n                'ENGINE_FAMILY_NO': _this5.datavalidate(_this5.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\n                'WBS': _this5.datavalidate(_this5.createRequestForm.controls['WBS'].value),\n                'COST_CENTER': _this5.datavalidate(_this5.createRequestForm.controls['COST_CENTER'].value),\n                'REQUEST_NO': _this5.routeName == 'clone' ? _this5.newREQUEST_NO : _this5.REQUEST_NO,\n                'CLONE_REQUEST_NO': _this5.routeName == 'clone' ? _this5.CLONE_REQUEST_NO : '',\n                'REMARKS': _this5.remarks,\n                'CURRENT_STAGE': _this5.actStage\n              }\n            }\n          }\n        };\n      } else {\n        dataObj = {\n          tuple: {\n            new: {\n              FD_HL_REQUEST_DETAILS: {\n                'HR_REF_NO': '',\n                'LOCATION': _this5.datavalidate(_this5.createRequestForm.controls['LOCATION'].value),\n                'CERTIFICATION_TYPE': _this5.datavalidate(_this5.createRequestForm.controls['CERTIFICATION_TYPE'].value),\n                'ENGINE_FAMILY_NO': _this5.datavalidate(_this5.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\n                'WBS': _this5.datavalidate(_this5.createRequestForm.controls['WBS'].value),\n                'COST_CENTER': _this5.datavalidate(_this5.createRequestForm.controls['COST_CENTER'].value),\n                'INITIATOR_ID': _this5.loginUserID,\n                'INITIATION_DATE': _this5.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n                'PROCESS_STATUS': '0',\n                'CLONE_REQUEST_NO': _this5.routeName == 'clone' ? _this5.CLONE_REQUEST_NO : '',\n                'REMARKS': _this5.remarks,\n                'CHAPTER2_REVISION': _this5.reguChapter2,\n                'CL_REVISION': _this5.reguCovering,\n                'TABLE4G_REVISION': _this5.reguTable4G,\n                'TABLE12_REVISION': _this5.reguTable12,\n                'CURRENT_STAGE': _this5.actStage\n              }\n            }\n          }\n        };\n      }\n\n      _this5.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, _this5.namespace, true, false).then(res => {\n        _this5.HR_REF_NO = res[0].HR_REF_NO;\n        let obj = {\n          'HR_REF_NO': _this5.HR_REF_NO,\n          'actRole': _this5.actRole,\n          'actStage': _this5.actStage\n        };\n\n        _this5.service.sharingData(obj, 'HR_REF_NO');\n\n        _this5.service.createPageEvents.next('');\n\n        _this5.REQUEST_NO = res[0].REQUEST_NO;\n        _this5.newREQUEST_NO = res[0].REQUEST_NO;\n\n        _this5.saveVariants();\n      }, err => {\n        console.log('Error occured! While saving the data');\n      });\n    })();\n  }\n\n  saveDocuments() {\n    let ParamTuple = [];\n    var params = {};\n\n    for (var save of this.documentsArr) {\n      if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\n        params = {\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              \"UPLOADER_ID\": save.UPLOADERNAME,\n              'DOC_REMARKS': save.DOC_REMARKS,\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      } else {\n        params = {\n          'old': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_REF_NO': save.DOC_REF_NO\n            }\n          },\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              // \"UPLOADER_ID\": save.UPLOADERNAME,\n              'DOC_REMARKS': save.DOC_REMARKS,\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      }\n\n      ParamTuple.push(params);\n    }\n\n    var paramsAll = {\n      'tuple': ParamTuple\n    };\n    this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false).then(res => {\n      if (this.saveType == 'submit') {\n        if (this.datavalidate(this.taskId) == '') {\n          let param = {\n            'HR_REF_NO': this.HR_REF_NO,\n            'INITIATED_BY': this.loginUserID,\n            'REMARKS': this.remarks\n          };\n          this.service.invokeService(\"FD_HL_MainProcess\", param, \"http://schemas.cordys.com/default\", true, false).then(res => {\n            // let dObj = {HR_REF_NO:this.HR_REF_NO}\n            // this.service.invokeService(\"SendFD_HLCustomRequestorMail\", dObj, this.namespace, true, false)\n            // .then((res: any) => {\n            // })\n            setTimeout(() => {\n              let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\n              this.call_modal = true;\n              this.data_send = {\n                text: `Request Submitted Successfully`,\n                'text1': `Request ID`,\n                'text2': `${this.REQUEST_NO}`,\n                active: this.call_modal,\n                from: modal_from\n              };\n            }, 0);\n          });\n        } else {\n          this.completeTask(7, this.openAs, '');\n        }\n      } else if (this.saveType == 'save') {\n        let msg;\n        msg = this.datavalidate(this.openAs) == '' ? 'New Request Created Successfully' : 'Request Updated Successfully';\n        setTimeout(() => {\n          let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\n          this.call_modal = true;\n          this.data_send = {\n            text: msg,\n            'text1': `Request ID`,\n            'text2': `${this.REQUEST_NO}`,\n            active: this.call_modal,\n            from: modal_from\n          };\n        }, 0);\n      }\n\n      if (res) {\n        this.documentsArr = [];\n        this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\n      }\n    }, err => {\n      console.log(\"Error occured while saving Docdata \");\n    });\n  }\n\n  deleteFile() {\n    this.call_modal = false;\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delele this file?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        for (let i = 0; i < this.checkedRows.length; i++) {\n          this.initValue = this.initValue - parseFloat(this.checkedRows[i].DOC_SIZE);\n\n          if (this.service.datavalidate(this.checkedRows[i].DOC_REF_NO) != \"\") {\n            let dataObj = {\n              tuple: {\n                old: {\n                  FD_HL_DOC_DETAILS: {\n                    DOC_REF_NO: this.checkedRows[i].DOC_REF_NO\n                  }\n                }\n              }\n            };\n            this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).then(ajaxResponse => {\n              this.documentsArr = this.documentsArr.filter(val => {\n                return this.checkedRows.indexOf(val) === -1;\n              });\n              this.checkedRows = [];\n              setTimeout(() => {\n                this.call_modal = true;\n                this.data_send = {\n                  text: 'File Deleted Successfull',\n                  active: this.call_modal\n                };\n              }, 0);\n            });\n          } else {\n            this.documentsArr = this.documentsArr.filter(val => {\n              return this.checkedRows.indexOf(val) === -1;\n            });\n            this.checkedRows.forEach(d => {\n              if (d.DOC_REF_NO == '') {\n                this.checkedRows.splice(this.checkedRows.indexOf(d), 1);\n              }\n            });\n          }\n        }\n      },\n      reject: () => {}\n    });\n  }\n\n  isRemarksValid(arg) {\n    if (arg == 0 && this.remarks == '' || arg == 3 && this.remarks == '' || arg == 4 && this.remarks == '' || arg == 7 && this.remarks == '') {\n      this.remarkSubmit = true;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  completeTask(decision, openas, remarks) {\n    this.call_modal = false;\n\n    if (this.isRemarksValid(decision)) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Please enter remarks',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    let data = {\n      \"FD_HL_OPSchemaFragment\": {\n        ApproverDecision: decision,\n        ApprovedBy: this.loginUserID,\n        Remarks: this.remarks\n      }\n    };\n    this.call_modal = false;\n    var titlest = decision == 1 ? \"Task Completed Successfully\" : decision == 0 ? \"Task Seek Clarification Successfully\" : decision == 7 ? \"Task Submitted Successfully\" : decision == 4 ? \"Task Obsoleted Successfully\" : decision == 3 ? \"Task Rejected Successfully\" : \"\";\n\n    let _this = this;\n\n    $.cordys.workflow.completeTask(this.taskId, data, {\n      dataType: 'xml'\n    }).done(() => {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: titlest,\n          active: this.call_modal,\n          from: 'task'\n        };\n      }, 0); // _this.closeTask(openas);\n    });\n  }\n\n  closeTask(openas) {\n    this.actStage = \"view\";\n\n    if (openas == 'customInboxTask') {\n      this.router.navigate(['/inbox']);\n    } else if (openas == 'mail') {\n      window.close();\n    } else {}\n  }\n\n  callReqManagement1(arg) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      let params = {\n        HR_REF_NO: arg,\n        REPORT_REF_ID: 3\n      };\n      yield _this6.service.invokeService(\"GetFdHlRequestManagement\", params, _this6.namespace, true, false).then(res => {\n        _this6.Table12Arr = res;\n      });\n      let params1 = {\n        HR_REF_NO: arg,\n        REPORT_REF_ID: 4\n      };\n      yield _this6.service.invokeService(\"GetFdHlRequestManagement\", params1, _this6.namespace, true, false).then(res => {\n        _this6.chapter2Arr = res;\n      });\n      setTimeout(() => {\n        _this6.getFDHLRequestVariantDetails(arg);\n      }, 100);\n    })();\n  }\n\n  callReqManagementEmpty() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      let params = {\n        HR_REF_NO: '',\n        REPORT_REF_ID: 3\n      };\n      yield _this7.service.invokeService(\"GetFdHlRequestManagement\", params, _this7.namespace, true, false).then(res => {\n        _this7.Table12EmptyArr = res;\n      });\n      let params1 = {\n        HR_REF_NO: '',\n        REPORT_REF_ID: 4\n      };\n      yield _this7.service.invokeService(\"GetFdHlRequestManagement\", params1, _this7.namespace, true, false).then(res => {\n        _this7.chapter2EmptyArr = res;\n      });\n    })();\n  }\n\n  getFdHlRequestManagement() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.variantsArr.forEach(d => {\n        d.Table12Arr = [];\n\n        if (_this8.datavalidate(d.HRV_REF_NO) == '') {\n          _this8.Table12EmptyArr.forEach(d1 => {\n            d.Table12Arr.push({\n              ATTR_VALUE: d1.ATTR_VALUE,\n              ANNEXURE_EXT: d1.ANNEXURE_EXT,\n              ANNEXURE_NAME: d1.ANNEXURE_NAME,\n              ANNEXURE_PATH: d1.ANNEXURE_PATH,\n              ATTR_DESC: d1.ATTR_DESC,\n              ATTR_NAME: d1.ATTR_NAME,\n              ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n              ATTR_REF_ID: d1.ATTR_REF_ID[0],\n              AUDIT_TYPE: d1.AUDIT_TYPE,\n              CREATED_BY: d1.CREATED_BY[0],\n              CREATION_DATE: d1.CREATION_DATE[0],\n              DOUMENT_NAME: d1.DOUMENT_NAME,\n              HRM_REF_NO: d1.HRM_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              HR_REF_NO: d1.HR_REF_NO,\n              MANDATORY: d1.MANDATORY,\n              REPORT_NAME: d1.REPORT_NAME,\n              REPORT_REF_ID: d1.REPORT_REF_ID[0],\n              REPORT_VERSION: d1.REPORT_VERSION,\n              VISIBLE: d1.VISIBLE,\n              MODIFIED_BY: d1.MODIFIED_BY[0],\n              MODIFIED_DATE: d1.MODIFIED_DATE[0]\n            });\n          });\n        }\n\n        if (_this8.datavalidate(d.HRV_REF_NO) != '') {\n          _this8.Table12Arr.forEach(d1 => {\n            if (d.HRV_REF_NO == _this8.datavalidate(d1.HRV_REF_NO)) {\n              d.Table12Arr.push({\n                ATTR_VALUE: d1.ATTR_VALUE,\n                ANNEXURE_EXT: d1.ANNEXURE_EXT,\n                ANNEXURE_NAME: d1.ANNEXURE_NAME,\n                ANNEXURE_PATH: d1.ANNEXURE_PATH,\n                ATTR_DESC: d1.ATTR_DESC,\n                ATTR_NAME: d1.ATTR_NAME,\n                ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n                ATTR_REF_ID: d1.ATTR_REF_ID[0],\n                AUDIT_TYPE: d1.AUDIT_TYPE,\n                CREATED_BY: d1.CREATED_BY[0],\n                CREATION_DATE: d1.CREATION_DATE[0],\n                DOUMENT_NAME: d1.DOUMENT_NAME,\n                HRM_REF_NO: d1.HRM_REF_NO,\n                HRV_REF_NO: d1.HRV_REF_NO,\n                HR_REF_NO: d1.HR_REF_NO,\n                MANDATORY: d1.MANDATORY,\n                REPORT_NAME: d1.REPORT_NAME,\n                REPORT_REF_ID: d1.REPORT_REF_ID[0],\n                REPORT_VERSION: d1.REPORT_VERSION,\n                VISIBLE: d1.VISIBLE,\n                MODIFIED_BY: d1.MODIFIED_BY[0],\n                MODIFIED_DATE: d1.MODIFIED_DATE[0]\n              });\n            }\n          });\n        }\n      });\n    })();\n  }\n\n  getFdHlRequestManagement1() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      _this9.variantsArr1.forEach(d => {\n        d.Table12Arr1 = [];\n\n        if (_this9.datavalidate(d.HRV_REF_NO) == '') {\n          _this9.chapter2EmptyArr.forEach(d1 => {\n            d.Table12Arr1.push({\n              ATTR_VALUE: d1.ATTR_VALUE,\n              ANNEXURE_EXT: d1.ANNEXURE_EXT,\n              ANNEXURE_NAME: d1.ANNEXURE_NAME,\n              ANNEXURE_PATH: d1.ANNEXURE_PATH,\n              ATTR_DESC: d1.ATTR_DESC,\n              ATTR_NAME: d1.ATTR_NAME,\n              ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n              ATTR_REF_ID: d1.ATTR_REF_ID[0],\n              AUDIT_TYPE: d1.AUDIT_TYPE,\n              CREATED_BY: d1.CREATED_BY[0],\n              CREATION_DATE: d1.CREATION_DATE[0],\n              DOUMENT_NAME: d1.DOUMENT_NAME,\n              HRM_REF_NO: d1.HRM_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              HR_REF_NO: d1.HR_REF_NO,\n              MANDATORY: d1.MANDATORY,\n              REPORT_NAME: d1.REPORT_NAME,\n              REPORT_REF_ID: d1.REPORT_REF_ID[0],\n              REPORT_VERSION: d1.REPORT_VERSION,\n              VISIBLE: d1.VISIBLE,\n              MODIFIED_BY: d1.MODIFIED_BY[0],\n              MODIFIED_DATE: d1.MODIFIED_DATE[0]\n            });\n          });\n        }\n\n        if (_this9.datavalidate(d.HRV_REF_NO) != '') {\n          _this9.chapter2Arr.forEach(d1 => {\n            if (d.HRV_REF_NO == _this9.datavalidate(d1.HRV_REF_NO)) {\n              d.Table12Arr1.push({\n                ATTR_VALUE: d1.ATTR_VALUE,\n                ANNEXURE_EXT: d1.ANNEXURE_EXT,\n                ANNEXURE_NAME: d1.ANNEXURE_NAME,\n                ANNEXURE_PATH: d1.ANNEXURE_PATH,\n                ATTR_DESC: d1.ATTR_DESC,\n                ATTR_NAME: d1.ATTR_NAME,\n                ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n                ATTR_REF_ID: d1.ATTR_REF_ID[0],\n                AUDIT_TYPE: d1.AUDIT_TYPE,\n                CREATED_BY: d1.CREATED_BY[0],\n                CREATION_DATE: d1.CREATION_DATE[0],\n                DOUMENT_NAME: d1.DOUMENT_NAME,\n                HRM_REF_NO: d1.HRM_REF_NO,\n                HRV_REF_NO: d1.HRV_REF_NO,\n                HR_REF_NO: d1.HR_REF_NO,\n                MANDATORY: d1.MANDATORY,\n                REPORT_NAME: d1.REPORT_NAME,\n                REPORT_REF_ID: d1.REPORT_REF_ID[0],\n                REPORT_VERSION: d1.REPORT_VERSION,\n                VISIBLE: d1.VISIBLE,\n                MODIFIED_BY: d1.MODIFIED_BY[0],\n                MODIFIED_DATE: d1.MODIFIED_DATE[0]\n              });\n            }\n          });\n        }\n      });\n    })();\n  }\n\n  datavalidate(data) {\n    if (data != undefined && data != null && data != \"\") {\n      return data;\n    } else {\n      return \"\";\n    }\n  }\n\n};\n\n__decorate([ViewChild(CoveringLetterComponent)], CreateNewRequestComponent.prototype, \"covering\", void 0);\n\n__decorate([ViewChild(Table4gComponent)], CreateNewRequestComponent.prototype, \"table4g\", void 0);\n\n__decorate([ViewChild(Chapter2Component)], CreateNewRequestComponent.prototype, \"chapter2\", void 0);\n\n__decorate([ViewChild(Table12Component)], CreateNewRequestComponent.prototype, \"table12\", void 0);\n\n__decorate([Input()], CreateNewRequestComponent.prototype, \"requestIDClone\", void 0);\n\n__decorate([Input()], CreateNewRequestComponent.prototype, \"cloneHRNo\", void 0);\n\nCreateNewRequestComponent = __decorate([Component({\n  selector: 'app-create-new-request',\n  templateUrl: './create-new-request.component.html',\n  styleUrls: ['./create-new-request.component.css'],\n  providers: [ConfirmationService, MessageService]\n})], CreateNewRequestComponent);\nexport { CreateNewRequestComponent };","map":{"version":3,"sources":["D:/SVN Projects/FD_Homologation_LatesT/FD_Homologation/src/app/create-new-request/create-new-request.component.ts"],"names":["__decorate","Component","Input","ViewChild","Validators","ConfirmationService","MessageService","Chapter2Component","CoveringLetterComponent","Table12Component","Table4gComponent","CreateNewRequestComponent","constructor","service","datepipe","fb","activatedRoute","location","menuComp","router","confirmationService","namespace","displayPopup","DOC_REF_NO","loginUserID","isSubmitted","HR_REF_NO","REQUEST_NO","instance_id","taskId","openAs","actRole","actStage","AAHPopup","AAHArr","engineVarient","dis2","call_modal","documentsArr","checkedRows","maindocArr","ENGINE_FAMILY_NO_Arr","ReportName","isSubmitted1","routeName","CLONE_REQUEST_NO","remarks","remarkSubmit","loginUserName","anexureArr","reguTable12","reguCovering","reguTable4G","reguChapter2","OpenAs","parrentInd","childInd","coveringWordDoc","table12WordDoc","ARAITrue","engineFamilyDataArr","procesStatus","emisionComplaince","nameArr","variantsArr","variantsArr1","nameArrStr","table4gVar","chapter2Var","HRV_REF_NOArr","initValue","gridDocSize","mainDocSpinner","certdocumentsArr","certDocSize","certSpinner","repdocumentsArr","repDocSize","repSpinner","appdocumentsArr","appDocSize","appSpinner","dradocumentsArr","dragDocSize","dragSpinner","invdocumentsArr","invDocSize","invSpinner","docSubmit","createRequestForm","group","LOCATION","required","CERTIFICATION_TYPE","ENGINE_FAMILY_NO","WBS","COST_CENTER","ARAI","APEX","coverLetterObj","table12Obj","valid","saveType","isSaveSubm","newREQUEST_NO","Table12EmptyArr","chapter2EmptyArr","Table12Arr","chapter2Arr","getEngineFamily","loadPage","callReqManagementEmpty","lovMasaterList","subscribe","subscription","createPageEvents","call","saveDetails","completeTask","clear","next","sentToARAI","saveARAI","ngOnChanges","changes","datavalidate","currentValue","cloneHRNo","ngOnInit","getReportName","getFDHLReportNameAndVersion","url","urlSegments","path","invokeService","then","res","forEach","obj","REPORT_REF_ID","REPORT_VERSION","cloneFdHlRequest","CHR_REF_NO","_a","_b","_c","_d","covering","getFDHLCoveringLetterDetails","getFDHLCLEnClosureDetails","table12","getData","getFDHLRequestVariantDetails","Promise","all","getFDHLRequestDetails","callReqManagement1","setTimeout","data_send","text","active","getopenAs","routerName","window","href","split","length","includes","getFdHlAnnexureDetailsByFamily","refId","controls","value","anneUploadFile1","parrent","child","$","click","anneUploadFile1Doc1","e","fileName","fileExt","certfile","target","files","parseFloat","size","name","uploadFile","resDocPath","ANNEXURE_NAME","ANNEXURE_PATH","ANNEXURE_EXT","patchValue","HRV_REF_NO","table4g","VARIANT","chapter2","onButtonClick","event","type","stopPropagation","FDHL_DOC_TYPE","generateFDHlWordDocument","downloadFile","consolidate","generateFDHlConsolidateReport","ARAIValid","dataObj1","tuple","old","FD_HL_REQUEST_DETAILS","new","dataObj","from_User","to_User","mailType","stage","status","PROCESS_STATUS","ARAIFlag","getFD_HLHistoryDetailsByHR_RefNo","ENGINE_M_REF_ID","data","push","RefNo","ENGINE_F_REF_ID","EMISSION_COMPLIANCE","ngOnDestroy","unsubscribe","backBtnLink","validTypeApproval","text1","error","console","back","variable","menuHideFun","routeChange","workflowHistory","body","document","querySelector","style","overflow","closeWorkFlowDoc","HR_RefNo","arg","CURRENT_STAGE","REMARKS","ARAI_NO","APEX_NO","getFDHLEngineModelsByFamily","getFD_HLDocDetailsByHR_RefNo","filter","doc","DOC_TYPE","DOC_SIZE","d1","isChecked","d","isvarientCheck","check","queryParams","params","actStag","cordys","json","defaults","removeNamespacePrefix","workflow","getTaskDetails","done","tData","TaskData","ApplicationData","FD_HL_IP_SchemaFragment","ACT_ROLE","STAGE","varObj","roleStage","sharingData","taskPage","variantSelect","splice","indexOf","confirm","message","header","icon","accept","param","item","reject","temp","LOV_DESC","Measurment","Mode","innerArr","temp1","Table12Arr1","Set","toString","getFdHlRequestManagement","getFdHlRequestManagement1","HRV_REF_N","saveVariants","ParamTuple","ENGINE_MODEL_NO","paramsAll","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","updateFdHlCoveringLetter","updateFdHlClEnclosure","save","updateFdHlTable12","updateFdHlTab12SpecChanges","saveMode","saveMeasurment","saveDocuments","catch","REPORT_NAME","openDoc","closeDoc","DOC_NAME","DOC_PATH","checkAllCheckBox","ev","x","checked","isAllCheckBoxChecked","every","p","tdCheckbox","row","UploadFileDoc","file","record","find","transform","Date","fileUploadDoc","err","certUploadFile","certUploadFileDoc","certfileName","certfileUploadDoc","repUploadFile","repUploadFileDoc","repfile","repfileName","repfileUploadDoc","appUploadFile","appUploadFileDoc","appfile","appfileName","appfileUploadDoc","draUploadFile","draUploadFileDoc","drafile","drafileName","drafileUploadDoc","invUploadFile","invUploadFileDoc","invfile","invfileName","invfileUploadDoc","certDelete","i","gridDeleteFile","repDelete","appDelete","draDelete","invDelete","gridDocSave","concatArr","flat","undefined","UPLOADER_ID","gridDocSplit","log","FD_HL_DOC_DETAILS","ajaxResponse","gridDocValid","receiveData","receiveData1","isValid","enclosureArr","callTable4G","CL_CONTENT","CL_TO","CL_REGARDS","ENCLOSURE","specArr","MANUFACTURER","CMVR_CERTIFICATE_NO","CMVR_CERTIFICATE_DATE","SPECIFICATION_NO","EXTENSION_DATE","EXTENSION_SPEC_REV","NATURE_OF_CHANGE","ENGINE_MODEL_NAME","SPEC_NO","DESCRIPTION","PARAMETER_EARLIER","PARAMETER_NEW_EXTENSION","MANDATORY","ATTR_VALUE","obj1","obj2","ENGINE_SPEED","GROSS_POWER","saveValid","UPLOADERNAME","DOC_REMARKS","modal_from","from","msg","deleteFile","val","isRemarksValid","decision","openas","ApproverDecision","ApprovedBy","Remarks","titlest","_this","dataType","closeTask","navigate","close","params1","ATTR_DESC","ATTR_NAME","ATTR_CHARACTERISTICS","ATTR_REF_ID","AUDIT_TYPE","CREATED_BY","CREATION_DATE","DOUMENT_NAME","HRM_REF_NO","VISIBLE","MODIFIED_BY","MODIFIED_DATE","prototype","selector","templateUrl","styleUrls","providers"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,SAA3B,QAA4C,eAA5C;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,aAApD;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,uBAAT,QAAwC,6CAAxC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,IAAIC,yBAAyB,GAAG,MAAMA,yBAAN,CAAgC;AAC5DC,EAAAA,WAAW,CAACC,OAAD,EAAUC,QAAV,EAAoBC,EAApB,EAAwBC,cAAxB,EAAwCC,QAAxC,EAAkDC,QAAlD,EAA4DC,MAA5D,EAAoEC,mBAApE,EAAyF;AAChG,SAAKP,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACA,SAAKC,SAAL,GAAiB,2CAAjB;AACA,SAAKC,YAAL,GAAoB,MAApB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,MAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,IAAL,GAAY,KAAZ;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,oBAAL,GAA4B,EAA5B;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,MAAL,GAAc,EAAd,CA1CgG,CA2ChG;;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,mBAAL,GAA2B,EAA3B;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,iBAAL,GAAyB,EAAzB,CAnDgG,CAoDhG;;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,YAAL,GAAoB,EAApB,CAvDgG,CAwDhG;;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,iBAAL,GAAyB,KAAK1E,EAAL,CAAQ2E,KAAR,CAAc;AACnCC,MAAAA,QAAQ,EAAE,CAAC,UAAD,EAAavF,UAAU,CAACwF,QAAxB,CADyB;AAEnCC,MAAAA,kBAAkB,EAAE,CAAC,EAAD,EAAKzF,UAAU,CAACwF,QAAhB,CAFe;AAGnCE,MAAAA,gBAAgB,EAAE,CAAC,EAAD,EAAK1F,UAAU,CAACwF,QAAhB,CAHiB;AAInCG,MAAAA,GAAG,EAAE,CAAC,EAAD,EAAK3F,UAAU,CAACwF,QAAhB,CAJ8B;AAKnCI,MAAAA,WAAW,EAAE,CAAC,EAAD,EAAK5F,UAAU,CAACwF,QAAhB,CALsB;AAMnCK,MAAAA,IAAI,EAAE,CAAC,EAAD,CAN6B;AAOnCC,MAAAA,IAAI,EAAE,CAAC,EAAD;AAP6B,KAAd,CAAzB;AASA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,KAAL,GAAa,KAAb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,eAAL;AACA,SAAKC,QAAL;AACA,SAAKC,sBAAL;AACA,SAAKlG,OAAL,CAAamG,cAAb,CAA4BC,SAA5B,CAAuCD,cAAD,IAAoB,CACzD,CADD;AAEA,SAAKnG,OAAL,CAAaW,WAAb,CAAyByF,SAAzB,CAAoCzF,WAAD,IAAiB;AAChD,WAAKA,WAAL,GAAmBA,WAAnB;AACH,KAFD;AAGA,SAAKX,OAAL,CAAamC,aAAb,CAA2BiE,SAA3B,CAAsCjE,aAAD,IAAmB;AACpD,WAAKA,aAAL,GAAqBA,aAArB;AACH,KAFD;AAGA,SAAKkE,YAAL,GAAoB,KAAKrG,OAAL,CAAasG,gBAAb,CAA8BF,SAA9B,CAAyCG,IAAD,IAAU;AAClE,cAAQA,IAAR;AACI,aAAK,MAAL;AACI,eAAKC,WAAL,CAAiB,MAAjB;AACA;;AACJ,aAAK,QAAL;AACI,eAAKA,WAAL,CAAiB,QAAjB;AACA;;AACJ,aAAK,UAAL;AACI,eAAKC,YAAL,CAAkB,CAAlB,EAAqB,KAAKxF,MAA1B,EAAkC,EAAlC;AACA;;AACJ,aAAK,OAAL;AACI,eAAKyF,KAAL;AACA;;AACJ,aAAK,mBAAL;AACI,eAAK1G,OAAL,CAAayC,MAAb,CAAoBkE,IAApB,CAAyB,KAAzB;AACA,eAAKF,YAAL,CAAkB,CAAlB,EAAqB,KAAKxF,MAA1B,EAAkC,EAAlC;AACA;;AACJ,aAAK,QAAL;AACI,eAAKwF,YAAL,CAAkB,CAAlB,EAAqB,KAAKxF,MAA1B,EAAkC,EAAlC;AACA;;AACJ,aAAK,YAAL;AACI,eAAK2F,UAAL;AACA;;AACJ,aAAK,UAAL;AACI,eAAKC,QAAL,CAAc,UAAd;AACA;;AACJ,aAAK,SAAL;AACI,eAAKA,QAAL,CAAc,SAAd;AACA;;AACJ,aAAK,OAAL;AACI,eAAKL,WAAL,CAAiB,OAAjB;AACA;;AACJ;AACI;AAjCR;AAmCH,KApCmB,CAApB;AAqCH;;AACDM,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAK/E,gBAAL,GAAwB,KAAKgF,YAAL,CAAkBD,OAAO,CAAC,gBAAD,CAAP,CAA0BE,YAA1B,CAAuCnG,UAAzD,CAAxB;AACA,SAAKoG,SAAL,GAAiB,KAAKF,YAAL,CAAkBD,OAAO,CAAC,WAAD,CAAP,CAAqBE,YAAvC,CAAjB;AACH;;AACDE,EAAAA,QAAQ,GAAG;AACP,SAAKC,aAAL;AACA,SAAKC,2BAAL;AACA,SAAKlH,cAAL,CAAoBmH,GAApB,CAAwBlB,SAAxB,CAAmCmB,WAAD,IAAiB;AAC/C,WAAKxF,SAAL,GAAiBwF,WAAW,CAAC,CAAD,CAAX,CAAeC,IAAhC;AACH,KAFD;AAGH;;AACDH,EAAAA,2BAA2B,GAAG;AAC1B,SAAKrH,OAAL,CAAayH,aAAb,CAA2B,6BAA3B,EAA0D,IAA1D,EAAgE,KAAKjH,SAArE,EAAgF,IAAhF,EAAsF,KAAtF,EACKkH,IADL,CACWC,GAAD,IAAS;AACfA,MAAAA,GAAG,CAACC,OAAJ,CAAaC,GAAD,IAAS;AACjB,YAAIA,GAAG,CAACC,aAAJ,IAAqB,CAAzB,EAA4B;AACxB,eAAKzF,WAAL,GAAmBwF,GAAG,CAACE,cAAvB;AACH,SAFD,MAGK,IAAIF,GAAG,CAACC,aAAJ,IAAqB,CAAzB,EAA4B;AAC7B,eAAKxF,YAAL,GAAoBuF,GAAG,CAACE,cAAxB;AACH,SAFI,MAGA,IAAIF,GAAG,CAACC,aAAJ,IAAqB,CAAzB,EAA4B;AAC7B,eAAKvF,WAAL,GAAmBsF,GAAG,CAACE,cAAvB;AACH,SAFI,MAGA,IAAIF,GAAG,CAACC,aAAJ,IAAqB,CAAzB,EAA4B;AAC7B,eAAKtF,YAAL,GAAoBqF,GAAG,CAACE,cAAxB;AACH;AACJ,OAbD;AAcH,KAhBD;AAiBH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,SAAKxG,UAAL,GAAkB,KAAlB;AACA,QAAIqG,GAAG,GAAG;AACNhH,MAAAA,SAAS,EAAE,KAAKA,SADV;AAENoH,MAAAA,UAAU,EAAE,KAAKf,SAFX;AAGNlF,MAAAA,gBAAgB,EAAE,KAAKA;AAHjB,KAAV;AAKA,SAAKhC,OAAL,CAAayH,aAAb,CAA2B,kBAA3B,EAA+CI,GAA/C,EAAoD,KAAKrH,SAAzD,EAAoE,IAApE,EAA0E,KAA1E,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,UAAIO,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;AACA,WAAKrI,OAAL,CAAakH,SAAb,CAAuBP,IAAvB,CAA4B,KAAKO,SAAjC;AACA,OAACgB,EAAE,GAAG,KAAKI,QAAX,MAAyB,IAAzB,IAAiCJ,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACK,4BAAH,EAA1D;AACA,OAACJ,EAAE,GAAG,KAAKG,QAAX,MAAyB,IAAzB,IAAiCH,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACK,yBAAH,EAA1D;AACA,OAACJ,EAAE,GAAG,KAAKK,OAAX,MAAwB,IAAxB,IAAgCL,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACM,OAAH,EAAzD;AACA,OAACL,EAAE,GAAG,KAAKI,OAAX,MAAwB,IAAxB,IAAgCJ,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACM,4BAAH,EAAzD,CANe,CAOf;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,KAAKC,qBAAL,CAA2B,KAAKjI,SAAhC,CAAD,EAA6C,KAAKkI,kBAAL,CAAwB,KAAKlI,SAA7B,CAA7C,CAAZ,EAAmG6G,IAAnG,CAAyGC,GAAD,IAAS;AAC7G;AACA;AACA;AACAqB,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAG,kCAAT;AAA4C,qBAAU,YAAtD;AAAmE,qBAAU,GAAE,KAAKpI,UAAW,EAA/F;AAAkGqI,YAAAA,MAAM,EAAE,KAAK3H;AAA/G,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIH,OARD;AASH,KAnBD;AAoBH;;AACD4H,EAAAA,SAAS,GAAG;AACR,QAAIC,UAAU,GAAGC,MAAM,CAAClJ,QAAP,CAAgBmJ,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCF,MAAM,CAAClJ,QAAP,CAAgBmJ,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,MAAhC,GAAyC,CAAzE,CAAjB;;AACA,QAAIJ,UAAU,CAACK,QAAX,CAAoB,GAApB,CAAJ,EAA8B;AAC1B,WAAKjH,MAAL,GAAc4G,UAAU,CAACG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyBA,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,EAAuCA,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,CAAd;;AACA,UAAI,KAAK/G,MAAL,IAAe,iBAAf,IAAoC,KAAKtB,QAAL,IAAiB,GAArD,IAA4D,KAAKsB,MAAL,IAAe,WAA3E,IAA0F,KAAKA,MAAL,IAAe,WAA7G,EAA0H;AACtH,aAAKlB,IAAL,GAAY,IAAZ;AACA,aAAKvB,OAAL,CAAayC,MAAb,CAAoBkE,IAApB,CAAyB,IAAzB;AACH,OAHD,MAIK;AACD,aAAKpF,IAAL,GAAY,KAAZ;AACA,aAAKvB,OAAL,CAAayC,MAAb,CAAoBkE,IAApB,CAAyB,KAAzB;AACH;AACJ;AACJ;;AACDgD,EAAAA,8BAA8B,GAAG;AAC7B,QAAIC,KAAJ;;AACA,QAAI,KAAK3G,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACpE2G,MAAAA,KAAK,GAAG,CAAR;AACH,KAFD,MAGK,IAAI,KAAK3G,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACzE2G,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,QAAI/B,GAAG,GAAG;AACNhH,MAAAA,SAAS,EAAE,KAAKA,SADV;AAENiH,MAAAA,aAAa,EAAE8B,KAFT;AAGN3E,MAAAA,gBAAgB,EAAE,KAAKL,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC;AAHhE,KAAV;AAKA,SAAK9J,OAAL,CAAayH,aAAb,CAA2B,gCAA3B,EAA6DI,GAA7D,EAAkE,KAAKrH,SAAvE,EAAkF,IAAlF,EAAwF,KAAxF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAKvF,UAAL,GAAkBuF,GAAlB;AACH,KAHD;AAIH;;AACDoC,EAAAA,eAAe,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAC5B,SAAKvH,UAAL,GAAkBsH,OAAlB;AACA,SAAKrH,QAAL,GAAgBsH,KAAhB;AACAC,IAAAA,CAAC,CAAC,qBAAD,CAAD,CAAyBC,KAAzB;AACH;;AACDC,EAAAA,mBAAmB,CAACC,CAAD,EAAI;AACnB,SAAK7I,UAAL,GAAkB,KAAlB;AACA,QAAI8I,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,SAAKC,QAAL,GAAgBH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB;;AACA,QAAIC,UAAU,CAACN,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAnB,CAAV,GAAqC,IAArC,GAA4C,IAA5C,GAAmD,CAAvD,EAA0D;AACtD5B,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,8DAAR;AAAwEC,UAAAA,MAAM,EAAE,KAAK3H;AAArF,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA;AACH;;AACD8I,IAAAA,QAAQ,GAAGD,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAA7B;AACAN,IAAAA,OAAO,GAAGF,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAAlB,CAAuBrB,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAV;AACA,SAAKxJ,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAKN,QAApD,EAA8D,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAA9D,EAAsF,KAAKhK,SAA3F,EAAsG,KAAtG,EAA6G,KAA7G,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,WAAK5H,WAAL,CAAiB,KAAKT,UAAtB,EAAkCoD,UAAlC,CAA6C,KAAKnD,QAAlD,EAA4DqI,aAA5D,GAA4EV,QAA5E;AACA,WAAKnH,WAAL,CAAiB,KAAKT,UAAtB,EAAkCoD,UAAlC,CAA6C,KAAKnD,QAAlD,EAA4DsI,aAA5D,GAA4EF,UAA5E;AACA,WAAK5H,WAAL,CAAiB,KAAKT,UAAtB,EAAkCoD,UAAlC,CAA6C,KAAKnD,QAAlD,EAA4DuI,YAA5D,GAA2EX,OAA3E;AACH,KALD,EAdmB,CAoBnB;AACA;AACH;;AACD7D,EAAAA,KAAK,GAAG;AACJ,QAAIwB,EAAJ,EAAQC,EAAR;;AACA,QAAI,KAAKnB,YAAL,CAAkB,KAAKnG,SAAvB,KAAqC,EAAzC,EAA6C;AACzC,WAAK+D,iBAAL,CAAuBuG,UAAvB,CAAkC;AAC9BrG,QAAAA,QAAQ,EAAE,EADoB;AAE9BE,QAAAA,kBAAkB,EAAE,EAFU;AAG9BC,QAAAA,gBAAgB,EAAE,EAHY;AAI9BC,QAAAA,GAAG,EAAE,EAJyB;AAK9BC,QAAAA,WAAW,EAAE;AALiB,OAAlC;AAOA,WAAKlD,OAAL,GAAe,EAAf;AACA,WAAKkB,WAAL,GAAmB,EAAnB;AACA,WAAKD,OAAL,GAAe,EAAf;AACH,KAXD,MAYK;AACD,WAAK0B,iBAAL,CAAuBuG,UAAvB,CAAkC;AAC9BjG,QAAAA,GAAG,EAAE,EADyB;AAE9BC,QAAAA,WAAW,EAAE;AAFiB,OAAlC;AAIA,WAAKlD,OAAL,GAAe,EAAf;AACA,OAACiG,EAAE,GAAG,KAAKI,QAAX,MAAyB,IAAzB,IAAiCJ,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACxB,KAAH,EAA1D;AACA,OAACyB,EAAE,GAAG,KAAKM,OAAX,MAAwB,IAAxB,IAAgCN,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACzB,KAAH,EAAzD;AACA,WAAKpF,aAAL,CAAmBsG,OAAnB,CAA4BC,GAAD,IAAS;AAChC,YAAIK,EAAJ,EAAQC,EAAR;;AACA,YAAIN,GAAG,CAACuD,UAAJ,IAAkB,EAAtB,EAA0B;AACtB,cAAI,KAAKnI,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACpE,aAACiF,EAAE,GAAG,KAAKmD,OAAX,MAAwB,IAAxB,IAAgCnD,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACxB,KAAH,CAASmB,GAAG,CAACuD,UAAb,EAAyBvD,GAAG,CAACyD,OAA7B,CAAzD;AACH,WAFD,MAGK,IAAI,KAAKrI,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACzE,aAACkF,EAAE,GAAG,KAAKoD,QAAX,MAAyB,IAAzB,IAAiCpD,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACzB,KAAH,CAASmB,GAAG,CAACuD,UAAb,EAAyBvD,GAAG,CAACyD,OAA7B,CAA1D;AACH;AACJ;AACJ,OAVD;AAWH;AACJ;;AACDE,EAAAA,aAAa,CAACC,KAAD,EAAQC,IAAR,EAAc;AACvBD,IAAAA,KAAK,CAACE,eAAN,GADuB,CAEvB;;AACA,QAAI9D,GAAG,GAAG;AACN+D,MAAAA,aAAa,EAAEF,IADT;AAEN7K,MAAAA,SAAS,EAAE,KAAKA,SAFV;AAGNuK,MAAAA,UAAU,EAAE,EAHN;AAINtD,MAAAA,aAAa,EAAE;AAJT,KAAV;AAMA,SAAK9H,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDI,GAAvD,EAA4D,KAAKrH,SAAjE,EAA4E,IAA5E,EAAkF,KAAlF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAK/E,eAAL,GAAuB+E,GAAG,CAAC,CAAD,CAAH,CAAOkE,wBAA9B;AACA,WAAK7L,OAAL,CAAa8L,YAAb,CAA0B,kBAA1B,EAA8CnE,GAAG,CAAC,CAAD,CAAH,CAAOkE,wBAArD,EAA+ElE,GAAG,CAAC,CAAD,CAAH,CAAOkE,wBAAP,GAAkC,aAAjH,EAAgI,KAAKrL,SAArI,EAAgJ,IAAhJ,EAAsJ,KAAtJ;AACH,KAJD;AAKH;;AACDuL,EAAAA,WAAW,GAAG;AACV,QAAIL,IAAI,GAAG,EAAX;AACA,QAAI9B,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAK3G,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACpEyI,MAAAA,IAAI,GAAG,UAAP;AACA9B,MAAAA,KAAK,GAAG,CAAR;AACH,KAHD,MAIK,IAAI,KAAK3G,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACzEyI,MAAAA,IAAI,GAAG,WAAP;AACA9B,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,QAAI/B,GAAG,GAAG;AACN+D,MAAAA,aAAa,EAAEF,IADT;AAEN7K,MAAAA,SAAS,EAAE,KAAKA,SAFV;AAGNuK,MAAAA,UAAU,EAAE,EAHN;AAINtD,MAAAA,aAAa,EAAE8B;AAJT,KAAV;AAMA,SAAK5J,OAAL,CAAayH,aAAb,CAA2B,+BAA3B,EAA4DI,GAA5D,EAAiE,KAAKrH,SAAtE,EAAiF,IAAjF,EAAuF,KAAvF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAK3H,OAAL,CAAa8L,YAAb,CAA0B,kBAA1B,EAA8CnE,GAAG,CAAC,CAAD,CAAH,CAAOqE,6BAArD,EAAoFrE,GAAG,CAAC,CAAD,CAAH,CAAOqE,6BAAP,GAAuC,aAA3H,EAA0I,KAAKxL,SAA/I,EAA0J,IAA1J,EAAgK,KAAhK;AACH,KAHD;AAIH;;AACDyL,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKjF,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,MAAhC,EAAwCC,KAA1D,KAAoE,EAAxE,EAA4E;AACxE,WAAKhI,YAAL,GAAoB,IAApB;AACA,WAAKgB,QAAL,GAAgB,KAAhB;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACD8D,EAAAA,UAAU,GAAG;AACT,SAAKpF,UAAL,GAAkB,KAAlB;;AACA,QAAI,KAAKyK,SAAL,EAAJ,EAAsB;AAClBjD,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAE,kBAAQ,kCAAV;AAA8CE,UAAAA,MAAM,EAAE,KAAK3H;AAA3D,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA;AACH;;AACD,QAAI0K,QAAQ,GAAG,EAAf;;AACA,QAAI,KAAKlF,YAAL,CAAkB,KAAKnG,SAAvB,KAAqC,EAAzC,EAA6C;AACzCqL,MAAAA,QAAQ,GAAG;AACPC,QAAAA,KAAK,EAAE;AACHC,UAAAA,GAAG,EAAE;AACDC,YAAAA,qBAAqB,EAAE;AACnBxL,cAAAA,SAAS,EAAE,KAAKA;AADG;AADtB,WADF;AAMHyL,UAAAA,GAAG,EAAE;AACDD,YAAAA,qBAAqB,EAAE;AACnB,yBAAW,KAAKrF,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,MAAhC,EAAwCC,KAA1D,CADQ;AAEnB,+BAAiB,KAAK3I,QAFH;AAGnB,yBAAW,KAAKc;AAHG;AADtB;AANF;AADA,OAAX;AAgBH;;AACD,SAAKjC,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDyE,QAAvD,EAAiE,KAAK1L,SAAtE,EAAiF,IAAjF,EAAuF,KAAvF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,UAAI4E,OAAO,GAAG;AACV1L,QAAAA,SAAS,EAAE,KAAKA,SADN;AAEV2L,QAAAA,SAAS,EAAE,KAAK7L,WAFN;AAGV8L,QAAAA,OAAO,EAAE,EAHC;AAIVC,QAAAA,QAAQ,EAAE,cAJA;AAKVC,QAAAA,KAAK,EAAE,KAAKxL,QALF;AAMVyL,QAAAA,MAAM,EAAE,CANE;AAOV5L,QAAAA,MAAM,EAAE,KAAKA,MAPH;AAQViB,QAAAA,OAAO,EAAE,KAAKA;AARJ,OAAd;AAUA,WAAKjC,OAAL,CAAayH,aAAb,CAA2B,4BAA3B,EAAyD8E,OAAzD,EAAkE,KAAK/L,SAAvE,EAAkF,IAAlF,EAAwF,KAAxF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf;AACA,YAAI4E,OAAO,GAAG;AAAE1L,UAAAA,SAAS,EAAE,KAAKA;AAAlB,SAAd;AACA,aAAKb,OAAL,CAAayH,aAAb,CAA2B,uBAA3B,EAAoD8E,OAApD,EAA6D,KAAK/L,SAAlE,EAA6E,IAA7E,EAAmF,KAAnF,EAA0FkH,IAA1F,CAAgGC,GAAD,IAAS;AACpG,eAAK3E,YAAL,GAAoB2E,GAAG,CAAC,CAAD,CAAH,CAAOkF,cAA3B;AACA,eAAK7M,OAAL,CAAa8M,QAAb,CAAsBnG,IAAtB,CAA2B,KAAK3D,YAAhC;AACH,SAHD;AAIA,aAAK+J,gCAAL;AACA/D,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAE,oBAAQ,gCAAV;AAA4CE,YAAAA,MAAM,EAAE,KAAK3H;AAAzD,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIH,OAbD;AAcH,KA1BD;AA2BH;;AACDwE,EAAAA,eAAe,GAAG;AACd,QAAIuG,OAAO,GAAG;AAAES,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACA,SAAKhN,OAAL,CAAayH,aAAb,CAA2B,4BAA3B,EAAyD8E,OAAzD,EAAkE,KAAK/L,SAAvE,EAAkF,IAAlF,EAAwF,KAAxF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAK5E,mBAAL,GAA2B4E,GAA3B;AACAA,MAAAA,GAAG,CAACC,OAAJ,CAAaqF,IAAD,IAAU;AAClB,aAAKrL,oBAAL,CAA0BsL,IAA1B,CAA+B;AAAEC,UAAAA,KAAK,EAAEF,IAAI,CAACG,eAAd;AAA+BnI,UAAAA,gBAAgB,EAAEgI,IAAI,CAAChI,gBAAtD;AAAwEoI,UAAAA,mBAAmB,EAAEJ,IAAI,CAACI;AAAlG,SAA/B;AACH,OAFD;AAGH,KAND;AAOH;;AACDC,EAAAA,WAAW,GAAG;AACV,QAAIpF,EAAJ;;AACA,KAACA,EAAE,GAAG,KAAK7B,YAAX,MAA6B,IAA7B,IAAqC6B,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACqF,WAAH,EAA9D;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,QAAI,KAAK3M,SAAL,IAAkB,EAAlB,IAAyB,KAAKmG,YAAL,CAAkB,KAAK/F,MAAvB,KAAkC,EAA/D,EAAoE;AAChE,aAAO,IAAP;AACH;;AACD,QAAI,KAAKJ,SAAL,IAAkB,EAAtB,EAA0B;AACtB,aAAO,KAAP;AACH;;AACD,QAAI,KAAKA,SAAL,IAAkB,EAAlB,IAAyB,KAAKmG,YAAL,CAAkB,KAAK/F,MAAvB,KAAkC,EAA/D,EAAoE;AAChE,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACKwM,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,MAAA,MAAI,CAACjM,UAAL,GAAkB,KAAlB;AACA,UAAIwD,kBAAkB,GAAG,MAAI,CAACJ,iBAAL,CAAuBiF,QAAvB,CAAgC,oBAAhC,EAAsDC,KAA/E;AACA,UAAI7E,gBAAgB,GAAG,MAAI,CAACL,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC,KAA3E;AACA,UAAIjC,GAAG,GAAG;AAAE5C,QAAAA,gBAAgB,EAAE,MAAI,CAACL,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC;AAAxE,OAAV;;AACA,UAAI;AACA,YAAInC,GAAG,SAAS,MAAI,CAAC3H,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDI,GAAvD,EAA4D,MAAI,CAACrH,SAAjE,EAA4E,IAA5E,EAAkF,KAAlF,CAAhB;;AACA,YAAImH,GAAG,CAAC8B,MAAJ,IAAc,CAAlB,EAAqB;AACjB,cAAIzE,kBAAkB,IAAI,WAAtB,IAAqCC,gBAAgB,IAAI,EAA7D,EAAiE;AAC7D+D,YAAAA,UAAU,CAAC,MAAM;AACb,cAAA,MAAI,CAACxH,UAAL,GAAkB,IAAlB;AACA,cAAA,MAAI,CAACyH,SAAL,GAAiB;AAAEC,gBAAAA,IAAI,EAAE,qCAAR;AAA+CC,gBAAAA,MAAM,EAAE,MAAI,CAAC3H;AAA5D,eAAjB;AACA,cAAA,MAAI,CAACiE,QAAL,IAAiB,QAAjB,GAA4B,EAA5B,GAAiC,MAAI,CAACb,iBAAL,CAAuBuG,UAAvB,CAAkC;AAAEnG,gBAAAA,kBAAkB,EAAE;AAAtB,eAAlC,CAAjC;AACH,aAJS,EAIP,CAJO,CAAV;AAKA,mBAAO,IAAP;AACH;AACJ,SATD,MAUK;AACD,eAAK,IAAI6C,GAAT,IAAgBF,GAAhB,EAAqB;AACjB,gBAAI3C,kBAAkB,IAAI,UAAtB,KAAqC6C,GAAG,CAACgF,cAAJ,IAAsB,GAAtB,IAA6BhF,GAAG,CAACgF,cAAJ,IAAsB,GAAxF,KAAgGhF,GAAG,CAAC7C,kBAAJ,IAA0B,UAA9H,EAA0I;AACtIgE,cAAAA,UAAU,CAAC,MAAM;AACb,gBAAA,MAAI,CAACxH,UAAL,GAAkB,IAAlB;AACA,gBAAA,MAAI,CAACyH,SAAL,GAAiB;AACbC,kBAAAA,IAAI,EAAE,MAAI,CAAClC,YAAL,CAAkBa,GAAG,CAAC/G,UAAtB,IAAoC,qBAD7B;AAEb4M,kBAAAA,KAAK,EAAE,8CAA8CzI,gBAFxC;AAGbkE,kBAAAA,MAAM,EAAE,MAAI,CAAC3H;AAHA,iBAAjB;AAKA,gBAAA,MAAI,CAACiE,QAAL,IAAiB,QAAjB,GAA4B,EAA5B,GAAiC,MAAI,CAACb,iBAAL,CAAuBuG,UAAvB,CAAkC;AAAEnG,kBAAAA,kBAAkB,EAAE;AAAtB,iBAAlC,CAAjC;AACH,eARS,EAQP,CARO,CAAV;AASA,qBAAO,IAAP;AACH,aAXD,MAYK,IAAIA,kBAAkB,IAAI,WAAtB,IAAqC6C,GAAG,CAACgF,cAAJ,IAAsB,GAA3D,IAAkEhF,GAAG,CAAC7C,kBAAJ,IAA0B,WAAhG,EAA6G;AAC9GgE,cAAAA,UAAU,CAAC,MAAM;AACb,gBAAA,MAAI,CAACxH,UAAL,GAAkB,IAAlB;AACA,gBAAA,MAAI,CAACyH,SAAL,GAAiB;AACbC,kBAAAA,IAAI,EAAE,2BADO;AAEbwE,kBAAAA,KAAK,EAAE,qBAAqB7F,GAAG,CAAC/G,UAFnB;AAGbqI,kBAAAA,MAAM,EAAE,MAAI,CAAC3H;AAHA,iBAAjB;AAKA,gBAAA,MAAI,CAACiE,QAAL,IAAiB,QAAjB,GAA4B,EAA5B,GAAiC,MAAI,CAACb,iBAAL,CAAuBuG,UAAvB,CAAkC;AAAEnG,kBAAAA,kBAAkB,EAAE;AAAtB,iBAAlC,CAAjC;AACH,eARS,EAQP,CARO,CAAV;AASA,qBAAO,IAAP;AACH;AACJ;AACJ;AACJ,OAxCD,CAyCA,OAAO2I,KAAP,EAAc;AACVC,QAAAA,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH;;AACD,aAAO,KAAP;AAjDsB;AAkDzB;;AACDE,EAAAA,IAAI,GAAG;AACH,QAAIC,QAAQ,GAAG,KAAKrL,MAAL,IAAe,OAAf,GAAyB,OAAzB,GACX,KAAKA,MAAL,IAAe,iBAAf,GAAmC,OAAnC,GAA6C,KAAKA,MAAL,IAAe,WAAf,GAA6B,gBAA7B,GAAgD,EADjG;AAEA,SAAKpC,QAAL,CAAc0N,WAAd;AACA,SAAK3N,QAAL,CAAcyN,IAAd,GAJG,CAKH;;AACA,SAAK7N,OAAL,CAAagO,WAAb,CAAyBrH,IAAzB,CAA8BmH,QAA9B;AACA,SAAK9N,OAAL,CAAasG,gBAAb,CAA8BK,IAA9B,CAAmC,EAAnC;AACA,SAAK3G,OAAL,CAAayC,MAAb,CAAoBkE,IAApB,CAAyB,KAAzB;AACH;;AACDsH,EAAAA,eAAe,GAAG;AACd,SAAK7M,QAAL,GAAgB,OAAhB;AACA,UAAM8M,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,QAAtB;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,SAAKnN,QAAL,GAAgB,MAAhB;AACA,UAAM8M,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,MAAtB;AACH;;AACDvB,EAAAA,gCAAgC,GAAG;AAC/B,QAAIR,OAAO,GAAG;AAAEiC,MAAAA,QAAQ,EAAE,KAAK3N;AAAjB,KAAd;AACA,SAAKb,OAAL,CAAayH,aAAb,CAA2B,kCAA3B,EAA+D8E,OAA/D,EAAwE,KAAK/L,SAA7E,EAAwF,IAAxF,EAA8F,KAA9F,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAKtG,MAAL,GAAcsG,GAAd;AACH,KAHD;AAIH;;AACKmB,EAAAA,qBAAqB,CAAC2F,GAAD,EAAM;AAAA;;AAAA;AAC7B,UAAIlC,OAAO,GAAG;AAAE1L,QAAAA,SAAS,EAAE4N;AAAb,OAAd;AACA,YAAM,MAAI,CAACzO,OAAL,CAAayH,aAAb,CAA2B,uBAA3B,EAAoD8E,OAApD,EAA6D,MAAI,CAAC/L,SAAlE,EAA6E,IAA7E,EAAmF,KAAnF,EACDkH,IADC,CACKC,GAAD,IAAS;AACf;AACA,QAAA,MAAI,CAAC7G,UAAL,GAAkB6G,GAAG,CAAC,CAAD,CAAH,CAAO7G,UAAzB;AACA,QAAA,MAAI,CAACkC,YAAL,GAAoB2E,GAAG,CAAC,CAAD,CAAH,CAAOkF,cAA3B;AACA,QAAA,MAAI,CAAC5K,OAAL,GAAe,MAAI,CAAC+E,YAAL,CAAkB,MAAI,CAAC7F,QAAvB,KAAoC,MAAI,CAAC6F,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAO+G,aAAzB,CAApC,GAA8E/G,GAAG,CAAC,CAAD,CAAH,CAAOgH,OAArF,GAA+F,EAA9G;;AACA,QAAA,MAAI,CAAC/J,iBAAL,CAAuBuG,UAAvB,CAAkC;AAC9BrG,UAAAA,QAAQ,EAAE,MAAI,CAACkC,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAO7C,QAAzB,CADoB;AAE9BE,UAAAA,kBAAkB,EAAE,MAAI,CAACgC,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAO3C,kBAAzB,CAFU;AAG9BC,UAAAA,gBAAgB,EAAE,MAAI,CAAC+B,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAO1C,gBAAzB,CAHY;AAI9BC,UAAAA,GAAG,EAAE,MAAI,CAAC8B,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAOzC,GAAzB,CAJyB;AAK9BC,UAAAA,WAAW,EAAE,MAAI,CAAC6B,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAOxC,WAAzB,CALiB;AAM9BC,UAAAA,IAAI,EAAE,MAAI,CAAC4B,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAOiH,OAAzB,CANwB;AAO9BvJ,UAAAA,IAAI,EAAE,MAAI,CAAC2B,YAAL,CAAkBW,GAAG,CAAC,CAAD,CAAH,CAAOkH,OAAzB;AAPwB,SAAlC,EALe,CAcf;;;AACA,QAAA,MAAI,CAACC,2BAAL;;AACA,QAAA,MAAI,CAAC9O,OAAL,CAAa8M,QAAb,CAAsBnG,IAAtB,CAA2B,MAAI,CAAC3D,YAAhC,EAhBe,CAiBf;;AACH,OAnBK,CAAN;AAF6B;AAsBhC;;AACD+L,EAAAA,4BAA4B,CAACN,GAAD,EAAM;AAC9B,SAAKhN,YAAL,GAAoB,EAApB;AACA,SAAKmC,gBAAL,GAAwB,EAAxB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKf,SAAL,GAAiB,CAAjB;AACA,SAAKI,WAAL,GAAmB,CAAnB;AACA,SAAKG,UAAL,GAAkB,CAAlB;AACA,SAAKG,UAAL,GAAkB,CAAlB;AACA,SAAKG,WAAL,GAAmB,CAAnB;AACA,SAAKG,UAAL,GAAkB,CAAlB;AACA,QAAI8H,OAAO,GAAG;AAAEiC,MAAAA,QAAQ,EAAEC;AAAZ,KAAd;AACA,SAAKzO,OAAL,CAAayH,aAAb,CAA2B,8BAA3B,EAA2D8E,OAA3D,EAAoE,KAAK/L,SAAzE,EAAoF,IAApF,EAA0F,KAA1F,EACKkH,IADL,CACWC,GAAD,IAAS;AACfA,MAAAA,GAAG,CAACqH,MAAJ,CAAYC,GAAD,IAAS;AAChB,gBAAQA,GAAG,CAACC,QAAZ;AACI,eAAK,MAAL;AACI,iBAAKzN,YAAL,CAAkByL,IAAlB,CAAuB+B,GAAvB;AACA,iBAAKxL,SAAL,IAAkBkH,UAAU,CAACsE,GAAG,CAACE,QAAL,CAA5B;AACA;;AACJ,eAAK,cAAL;AACI,iBAAKvL,gBAAL,CAAsBsJ,IAAtB,CAA2B+B,GAA3B;AACA,iBAAKpL,WAAL,IAAoB8G,UAAU,CAACsE,GAAG,CAACE,QAAL,CAA9B;AACA;;AACJ,eAAK,SAAL;AACI,iBAAKpL,eAAL,CAAqBmJ,IAArB,CAA0B+B,GAA1B;AACA,iBAAKjL,UAAL,IAAmB2G,UAAU,CAACsE,GAAG,CAACE,QAAL,CAA7B;AACA;;AACJ,eAAK,UAAL;AACI,iBAAKjL,eAAL,CAAqBgJ,IAArB,CAA0B+B,GAA1B;AACA,iBAAK9K,UAAL,IAAmBwG,UAAU,CAACsE,GAAG,CAACE,QAAL,CAA7B;AACA;;AACJ,eAAK,UAAL;AACI,iBAAK9K,eAAL,CAAqB6I,IAArB,CAA0B+B,GAA1B;AACA,iBAAK3K,WAAL,IAAoBqG,UAAU,CAACsE,GAAG,CAACE,QAAL,CAA9B;AACA;;AACJ,eAAK,SAAL;AACI,iBAAK3K,eAAL,CAAqB0I,IAArB,CAA0B+B,GAA1B;AACA,iBAAKxK,UAAL,IAAmBkG,UAAU,CAACsE,GAAG,CAACE,QAAL,CAA7B;AACA;;AACJ;AACI;AA1BR;AA4BH,OA7BD;AA8BH,KAhCD;AAiCH;;AACDL,EAAAA,2BAA2B,GAAG;AAC1B,SAAKtN,UAAL,GAAkB,KAAlB;AACA,SAAK2B,WAAL,GAAmB,EAAnB;AACA,SAAKC,YAAL,GAAoB,EAApB;;AACA,QAAI,KAAK4D,YAAL,CAAkB,KAAKnG,SAAvB,KAAqC,EAAzC,EAA6C;AACzC,WAAKkI,kBAAL,CAAwB,KAAKlI,SAA7B;AACH;;AACD,QAAI0L,OAAO,GAAG;AAAEtH,MAAAA,gBAAgB,EAAE,KAAKL,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC;AAAxE,KAAd;AACA,SAAK9J,OAAL,CAAayH,aAAb,CAA2B,6BAA3B,EAA0D8E,OAA1D,EAAmE,KAAK/L,SAAxE,EAAmF,IAAnF,EAAyF,KAAzF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAKrG,aAAL,GAAqBqG,GAArB;AACA,WAAKrG,aAAL,CAAmBsG,OAAnB,CAA4BwH,EAAD,IAAQ;AAC/BA,QAAAA,EAAE,CAAChE,UAAH,GAAgB,EAAhB;AACAgE,QAAAA,EAAE,CAACC,SAAH,GAAe,KAAf;AACH,OAHD;AAIA,WAAKzN,oBAAL,CAA0BgG,OAA1B,CAAmC0H,CAAD,IAAO;AACrC,YAAIA,CAAC,CAACrK,gBAAF,IAAsB,KAAKL,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC,KAA9E,EAAqF;AACjF,eAAK7G,iBAAL,GAAyBqM,CAAC,CAACjC,mBAA3B;AACH;AACJ,OAJD;;AAKA,UAAI,KAAKrG,YAAL,CAAkB,KAAK/F,MAAvB,KAAkC,EAAtC,EAA0C;AACtC,aAAKwM,iBAAL;AACH;;AACD,WAAK8B,cAAL;AACA,WAAK5F,8BAAL;AACH,KAjBD;AAkBH;;AACD4F,EAAAA,cAAc,GAAG;AACb,QAAIC,KAAK,GAAG,KAAZ;;AACA,QAAI,KAAKlO,aAAL,IAAsB,CAA1B,EAA6B;AACzB0H,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,oCAAR;AAA8CC,UAAAA,MAAM,EAAE,KAAK3H;AAA3D,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIAgO,MAAAA,KAAK,GAAG,IAAR;AACH;;AACD,WAAOA,KAAP;AACH;;AACKvJ,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,MAAA,MAAI,CAAC9F,cAAL,CAAoBsP,WAApB,CAAgCrJ,SAAhC;AAAA,qCAA0C,WAAOsJ,MAAP,EAAkB;AACxD,UAAA,MAAI,CAAC7O,SAAL,GAAiB6O,MAAM,CAAC7O,SAAxB;AACA,UAAA,MAAI,CAACG,MAAL,GAAc0O,MAAM,CAAC,QAAD,CAApB;AACA,UAAA,MAAI,CAACzO,MAAL,GAAcyO,MAAM,CAAC,QAAD,CAApB;;AACA,UAAA,MAAI,CAAC1P,OAAL,CAAa2P,OAAb,CAAqBhJ,IAArB,CAA0B,EAA1B;;AACA,cAAI,MAAI,CAAC3F,MAAT,EAAiB;AACbkJ,YAAAA,CAAC,CAAC0F,MAAF,CAASC,IAAT,CAAcC,QAAd,CAAuBC,qBAAvB,GAA+C,IAA/C;AACA,kBAAM7F,CAAC,CAAC0F,MAAF,CAASI,QAAT,CAAkBC,cAAlB,CAAiC,MAAI,CAACjP,MAAtC,EAA8CkP,IAA9C,CAAoDC,KAAD,IAAW;AAChE;AACA,cAAA,MAAI,CAACtP,SAAL,GAAiBsP,KAAK,CAACC,QAAN,CAAeC,eAAf,CAA+BC,uBAA/B,CAAuDzP,SAAxE;AACA,cAAA,MAAI,CAACK,OAAL,GAAeiP,KAAK,CAACC,QAAN,CAAeC,eAAf,CAA+BC,uBAA/B,CAAuDC,QAAtE;AACA,cAAA,MAAI,CAACpP,QAAL,GAAgBgP,KAAK,CAACC,QAAN,CAAeC,eAAf,CAA+BC,uBAA/B,CAAuDE,KAAvE;AACA,kBAAIC,MAAM,GAAG,MAAI,CAACvP,OAAL,GAAe,GAAf,GAAqB,MAAI,CAACC,QAAvC;;AACA,cAAA,MAAI,CAACnB,OAAL,CAAa0Q,SAAb,CAAuB/J,IAAvB,CAA4B8J,MAA5B;;AACA,cAAA,MAAI,CAACzQ,OAAL,CAAa2P,OAAb,CAAqBhJ,IAArB,CAA0B,MAAI,CAACxF,QAA/B;;AACA,cAAA,MAAI,CAACiI,SAAL;AACH,aATK,CAAN;AAUH;;AACD,cAAI,MAAI,CAACpC,YAAL,CAAkB,MAAI,CAACnG,SAAvB,KAAqC,EAAzC,EAA6C;AACzC,gBAAIgH,GAAG,GAAG;AAAE,2BAAa,MAAI,CAAChH,SAApB;AAA+B,yBAAW,MAAI,CAACK,OAA/C;AAAwD,0BAAY,MAAI,CAACC;AAAzE,aAAV;;AACA,YAAA,MAAI,CAACnB,OAAL,CAAa2Q,WAAb,CAAyB9I,GAAzB,EAA8B,WAA9B;;AACA,YAAA,MAAI,CAAC7H,OAAL,CAAa4Q,QAAb,CAAsBjK,IAAtB,CAA2B,IAA3B;;AACA,YAAA,MAAI,CAACmC,qBAAL,CAA2B,MAAI,CAACjI,SAAhC;;AACA,YAAA,MAAI,CAACkI,kBAAL,CAAwB,MAAI,CAAClI,SAA7B;;AACA,YAAA,MAAI,CAACkO,4BAAL,CAAkC,MAAI,CAAClO,SAAvC;;AACA,YAAA,MAAI,CAACkM,gCAAL;AACH;AACJ,SA3BD;;AAAA;AAAA;AAAA;AAAA;;AA4BA,MAAA,MAAI,CAAC3D,SAAL;AA7Ba;AA8BhB;;AACDyH,EAAAA,aAAa,CAAChJ,GAAD,EAAM;AACf,QAAI,CAACA,GAAG,CAACwH,SAAT,EAAoB;AAChB;AACA,WAAKnM,OAAL,CAAa4N,MAAb,CAAoB,KAAK5N,OAAL,CAAa6N,OAAb,CAAqBlJ,GAAG,CAACyD,OAAzB,CAApB,EAAuD,CAAvD;;AACA,UAAI,KAAKtE,YAAL,CAAkBa,GAAG,CAACuD,UAAtB,KAAqC,EAAzC,EAA6C,CAC5C,CADD,MAEK;AACD,aAAK7K,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,UAAAA,OAAO,EAAE,wDADoB;AACsCC,UAAAA,MAAM,EAAE,cAD9C;AAC8DC,UAAAA,IAAI,EAAE,4BADpE;AAE7BC,UAAAA,MAAM,EAAE,MAAM;AACV,gBAAIC,KAAK,GAAG;AACR,4BAAcxJ,GAAG,CAACuD,UADV;AAER,2BAAa,KAAKvK;AAFV,aAAZ;AAIA,iBAAKb,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuD4J,KAAvD,EAA8D,KAAK7Q,SAAnE,EAA8E,IAA9E,EAAoF,KAApF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,mBAAK,IAAI2J,IAAT,IAAiB,KAAKhQ,aAAtB,EAAqC;AACjC,oBAAIgQ,IAAI,CAAClG,UAAL,IAAmBvD,GAAG,CAACuD,UAAvB,IAAqCvD,GAAG,CAACuD,UAAJ,IAAkB,EAA3D,EAA+D;AAC3D,uBAAK5H,aAAL,CAAmBsN,MAAnB,CAA0B,KAAKtN,aAAL,CAAmBuN,OAAnB,CAA2BlJ,GAAG,CAACuD,UAA/B,CAA1B,EAAsE,CAAtE;AACAkG,kBAAAA,IAAI,CAAClG,UAAL,GAAkB,EAAlB;AACAkG,kBAAAA,IAAI,CAACjC,SAAL,GAAiB,KAAjB;AACH;AACJ;AACJ,aATD;AAUH,WAjB4B;AAkB7BkC,UAAAA,MAAM,EAAE,MAAM;AACV1J,YAAAA,GAAG,CAACwH,SAAJ,GAAgB,IAAhB;AACA,iBAAKnM,OAAL,CAAagK,IAAb,CAAkBrF,GAAG,CAACyD,OAAtB;AACA,gBAAIkG,IAAI,GAAG;AAAEpG,cAAAA,UAAU,EAAEvD,GAAG,CAACuD,UAAlB;AAA8BqG,cAAAA,QAAQ,EAAE5J,GAAG,CAACyD,OAA5C;AAAqDxF,cAAAA,UAAU,EAAE,EAAjE;AAAqE4L,cAAAA,UAAU,EAAE,EAAjF;AAAqFC,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAD;AAA3F,aAAX;AACA,gBAAIC,KAAK,GAAG;AAAEzG,cAAAA,UAAU,EAAEvD,GAAG,CAACuD,UAAlB;AAA8BqG,cAAAA,QAAQ,EAAE5J,GAAG,CAACyD,OAA5C;AAAqDwG,cAAAA,WAAW,EAAE,EAAlE;AAAsEJ,cAAAA,UAAU,EAAE,EAAlF;AAAsFC,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAD;AAA5F,aAAZ;AACA,iBAAKzO,WAAL,CAAiB+J,IAAjB,CAAsBsE,IAAtB;AACA,iBAAKpO,YAAL,CAAkB8J,IAAlB,CAAuB2E,KAAvB;AACA,iBAAKxO,UAAL,GAAkB,CAAC,GAAG,IAAI0O,GAAJ,CAAQ,KAAK7O,OAAb,CAAJ,EAA2B8O,QAA3B,EAAlB;AACA,iBAAK7O,WAAL,GAAmB,CAAC,GAAG,IAAI4O,GAAJ,CAAQ,KAAK5O,WAAb,CAAJ,CAAnB;AACA,iBAAKC,YAAL,GAAoB,CAAC,GAAG,IAAI2O,GAAJ,CAAQ,KAAK3O,YAAb,CAAJ,CAApB;AACA4F,YAAAA,UAAU,CAAC,MAAM;AACb,mBAAKiJ,wBAAL;AACA,mBAAKC,yBAAL;AACH,aAHS,EAGP,CAHO,CAAV;AAIH;AAhC4B,SAAjC;AAkCH;;AACD,WAAK/O,WAAL,CAAiByE,OAAjB,CAA0B0H,CAAD,IAAO;AAC5B,YAAIA,CAAC,CAACmC,QAAF,IAAc5J,GAAG,CAACyD,OAAtB,EAA+B;AAC3B,eAAKnI,WAAL,CAAiB2N,MAAjB,CAAwB,KAAK3N,WAAL,CAAiB4N,OAAjB,CAAyBzB,CAAzB,CAAxB,EAAqD,CAArD;AACH;AACJ,OAJD;AAKA,WAAKlM,YAAL,CAAkBwE,OAAlB,CAA2BwH,EAAD,IAAQ;AAC9B,YAAIA,EAAE,CAACqC,QAAH,IAAe5J,GAAG,CAACyD,OAAvB,EAAgC;AAC5B,eAAKlI,YAAL,CAAkB0N,MAAlB,CAAyB,KAAK1N,YAAL,CAAkB2N,OAAlB,CAA0B3B,EAA1B,CAAzB,EAAwD,CAAxD;AACH;AACJ,OAJD;AAKH,KAnDD,MAoDK;AACD;AACA,WAAKlM,OAAL,CAAagK,IAAb,CAAkBrF,GAAG,CAACyD,OAAtB;AACA,UAAIkG,IAAI,GAAG;AAAEpG,QAAAA,UAAU,EAAEvD,GAAG,CAACsK,SAAlB;AAA6BV,QAAAA,QAAQ,EAAE5J,GAAG,CAACyD,OAA3C;AAAoDxF,QAAAA,UAAU,EAAE,EAAhE;AAAoE4L,QAAAA,UAAU,EAAE,EAAhF;AAAoFC,QAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAD;AAA1F,OAAX;AACA,UAAIC,KAAK,GAAG;AAAEzG,QAAAA,UAAU,EAAEvD,GAAG,CAACuD,UAAlB;AAA8BqG,QAAAA,QAAQ,EAAE5J,GAAG,CAACyD,OAA5C;AAAqDwG,QAAAA,WAAW,EAAE,EAAlE;AAAsEJ,QAAAA,UAAU,EAAE,EAAlF;AAAsFC,QAAAA,IAAI,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAD;AAA5F,OAAZ;AACA,WAAKzO,WAAL,CAAiB+J,IAAjB,CAAsBsE,IAAtB;AACA,WAAKpO,YAAL,CAAkB8J,IAAlB,CAAuB2E,KAAvB;AACH,KA5Dc,CA6Df;;;AACA,SAAKxO,UAAL,GAAkB,CAAC,GAAG,IAAI0O,GAAJ,CAAQ,KAAK7O,OAAb,CAAJ,EAA2B8O,QAA3B,EAAlB;AACA,SAAK7O,WAAL,GAAmB,CAAC,GAAG,IAAI4O,GAAJ,CAAQ,KAAK5O,WAAb,CAAJ,CAAnB;AACA,SAAKC,YAAL,GAAoB,CAAC,GAAG,IAAI2O,GAAJ,CAAQ,KAAK3O,YAAb,CAAJ,CAApB;AACA,SAAK6O,wBAAL;AACA,SAAKC,yBAAL;AACH;;AACDvJ,EAAAA,4BAA4B,CAAC8F,GAAD,EAAM;AAC9B,SAAKjL,aAAL,GAAqB,EAArB;AACA,SAAKN,OAAL,GAAe,EAAf;AACA,QAAImO,KAAK,GAAG;AAAExQ,MAAAA,SAAS,EAAE4N;AAAb,KAAZ;AACA,SAAKzO,OAAL,CAAayH,aAAb,CAA2B,8BAA3B,EAA2D4J,KAA3D,EAAkE,KAAK7Q,SAAvE,EAAkF,IAAlF,EAAwF,KAAxF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAKrG,aAAL,CAAmB0N,MAAnB,CAA2BM,CAAD,IAAO;AAC7B3H,QAAAA,GAAG,CAACC,OAAJ,CAAawH,EAAD,IAAQ;AAChB,cAAIE,CAAC,CAAChE,OAAF,IAAa8D,EAAE,CAAC9D,OAApB,EAA6B;AACzBgE,YAAAA,CAAC,CAAClE,UAAF,GAAegE,EAAE,CAAChE,UAAlB;AACA,iBAAK5H,aAAL,CAAmB0J,IAAnB,CAAwBkC,EAAE,CAAChE,UAA3B;AACA,iBAAKlI,OAAL,CAAagK,IAAb,CAAkBkC,EAAE,CAAC9D,OAArB;AACAgE,YAAAA,CAAC,CAACD,SAAF,GAAc,IAAd;AACA,iBAAKlM,WAAL,CAAiB+J,IAAjB,CAAsB;AAAErM,cAAAA,SAAS,EAAEuO,EAAE,CAACvO,SAAhB;AAA2BuK,cAAAA,UAAU,EAAEgE,EAAE,CAAChE,UAA1C;AAAsDqG,cAAAA,QAAQ,EAAEnC,CAAC,CAAChE,OAAlE;AAA2ExF,cAAAA,UAAU,EAAE,EAAvF;AAA2F4L,cAAAA,UAAU,EAAE,EAAvG;AAA2GC,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAD;AAAjH,aAAtB;AACA,iBAAKxO,YAAL,CAAkB8J,IAAlB,CAAuB;AAAErM,cAAAA,SAAS,EAAEuO,EAAE,CAACvO,SAAhB;AAA2BuK,cAAAA,UAAU,EAAEgE,EAAE,CAAChE,UAA1C;AAAsDqG,cAAAA,QAAQ,EAAEnC,CAAC,CAAChE,OAAlE;AAA2EwG,cAAAA,WAAW,EAAE,EAAxF;AAA4FJ,cAAAA,UAAU,EAAE,EAAxG;AAA4GC,cAAAA,IAAI,EAAE,CAAC;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAD;AAAlH,aAAvB;AACH;AACJ,SATD;AAUH,OAXD;AAYA,WAAKK,wBAAL;AACA,WAAKC,yBAAL;AACH,KAhBD;AAiBH;;AACDE,EAAAA,YAAY,GAAG;AACX,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAI3C,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI7H,GAAT,IAAgB,KAAKvG,aAArB,EAAoC;AAChC;AACA,UAAI,KAAK0F,YAAL,CAAkBa,GAAG,CAACuD,UAAtB,KAAqC,EAAzC,EAA6C;AACzCsE,QAAAA,MAAM,GAAG;AACL,iBAAO;AACH,sCAA0B;AACtB,2BAAa,KAAK7O,SADI;AAEtB,yBAAW,KAAKmG,YAAL,CAAkBa,GAAG,CAACyD,OAAtB,CAFW;AAGtB,iCAAmB,KAAKtE,YAAL,CAAkBa,GAAG,CAACyK,eAAtB;AAHG;AADvB;AADF,SAAT;AASH,OAVD,MAWK;AACD5C,QAAAA,MAAM,GAAG;AACL,iBAAO;AACH,sCAA0B;AACtB,4BAAc7H,GAAG,CAACuD;AADI;AADvB,WADF;AAML,iBAAO;AACH,sCAA0B;AACtB,2BAAa,KAAKvK,SADI;AAEtB,yBAAW,KAAKmG,YAAL,CAAkBa,GAAG,CAACyD,OAAtB,CAFW;AAGtB,iCAAmB,KAAKtE,YAAL,CAAkBa,GAAG,CAACyK,eAAtB;AAHG;AADvB;AANF,SAAT;AAcH,OA5B+B,CA6BhC;;;AACA,UAAIzK,GAAG,CAACwH,SAAR,EAAmB;AACfgD,QAAAA,UAAU,CAACnF,IAAX,CAAgBwC,MAAhB;AACH;AACJ;;AACD,QAAI6C,SAAS,GAAG;AAAE,eAASF;AAAX,KAAhB;AACA,SAAKrS,OAAL,CAAayH,aAAb,CAA2B,2BAA3B,EAAwD8K,SAAxD,EAAmE,KAAK/R,SAAxE,EAAmF,IAAnF,EAAyF,KAAzF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,UAAIO,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBmK,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,EAAxC,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoDC,EAApD,EAAwDC,EAAxD,EAA4DC,EAA5D,EAAgEC,EAAhE,EAAoEC,EAApE,EAAwEC,EAAxE;;AACA1L,MAAAA,GAAG,CAACC,OAAJ,CAAaC,GAAD,IAAS;AACjB,aAAKrE,aAAL,CAAmB0J,IAAnB,CAAwBrF,GAAG,CAACuD,UAA5B;AACH,OAFD;AAGA,WAAK9J,aAAL,CAAmB0N,MAAnB,CAA2BM,CAAD,IAAO;AAC7B3H,QAAAA,GAAG,CAACC,OAAJ,CAAawH,EAAD,IAAQ;AAChB,cAAIE,CAAC,CAAChE,OAAF,IAAa8D,EAAE,CAAC9D,OAApB,EAA6B;AACzBgE,YAAAA,CAAC,CAAClE,UAAF,GAAegE,EAAE,CAAChE,UAAlB;AACH;AACJ,SAJD;AAKH,OAND,EALe,CAYf;AACA;AACA;AACA;;AACA,UAAI,KAAK3F,QAAL,IAAiB,OAArB,EAA8B;AAC1B,YAAI,KAAKxC,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACpE2F,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAACX,EAAE,GAAG,KAAKI,QAAX,MAAyB,IAAzB,IAAiCJ,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACoL,wBAAH,EAA3D,EAA0F,CAACnL,EAAE,GAAG,KAAKG,QAAX,MAAyB,IAAzB,IAAiCH,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACoL,qBAAH,EAApJ,EAAgL,CAACnL,EAAE,GAAG,KAAKiD,OAAX,MAAwB,IAAxB,IAAgCjD,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACoL,IAAH,EAAzO,EAAoP,CAACnL,EAAE,GAAG,KAAKI,OAAX,MAAwB,IAAxB,IAAgCJ,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACoL,iBAAH,EAA7S,EAAqU,CAACjB,EAAE,GAAG,KAAK/J,OAAX,MAAwB,IAAxB,IAAgC+J,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACkB,0BAAH,EAA9X,EAA+Z,CAACjB,EAAE,GAAG,KAAKpH,OAAX,MAAwB,IAAxB,IAAgCoH,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACkB,QAAH,EAAxd,EAAue,CAACjB,EAAE,GAAG,KAAKrH,OAAX,MAAwB,IAAxB,IAAgCqH,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACkB,cAAH,EAAhiB,CAAZ,EAAkkBlM,IAAlkB,CAAwkBC,GAAD,IAAS;AAC5kB,iBAAKkM,aAAL;AACH,WAFD,EAEGC,KAFH,CAESnG,KAAK,IAAI,CACd;AACH,WAJD;AAKH,SAND,MAOK,IAAI,KAAK1K,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAjE,EAAwE;AACzE2F,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAAC8J,EAAE,GAAG,KAAKrK,QAAX,MAAyB,IAAzB,IAAiCqK,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACW,wBAAH,EAA3D,EAA0F,CAACV,EAAE,GAAG,KAAKtK,QAAX,MAAyB,IAAzB,IAAiCsK,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACW,qBAAH,EAApJ,EAAgL,CAACV,EAAE,GAAG,KAAKtH,QAAX,MAAyB,IAAzB,IAAiCsH,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACW,IAAH,EAA1O,EAAqP,CAACV,EAAE,GAAG,KAAKrK,OAAX,MAAwB,IAAxB,IAAgCqK,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACW,iBAAH,EAA9S,EAAsU,CAACV,EAAE,GAAG,KAAKtK,OAAX,MAAwB,IAAxB,IAAgCsK,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACW,0BAAH,EAA/X,EAAga,CAACV,EAAE,GAAG,KAAKzH,QAAX,MAAyB,IAAzB,IAAiCyH,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACW,QAAH,EAA1d,EAAye,CAACV,EAAE,GAAG,KAAK1H,QAAX,MAAyB,IAAzB,IAAiC0H,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACW,cAAH,EAAniB,CAAZ,EAAqkBlM,IAArkB,CAA2kBC,GAAD,IAAS;AAC/kB,iBAAKkM,aAAL;AACH,WAFD,EAEGC,KAFH,CAESnG,KAAK,IAAI,CACd;AACH,WAJD;AAKH,SANI,MAOA;AACD/E,UAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,CAACqK,EAAE,GAAG,KAAK5K,QAAX,MAAyB,IAAzB,IAAiC4K,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACI,wBAAH,EAA3D,EAA0F,CAACH,EAAE,GAAG,KAAK7K,QAAX,MAAyB,IAAzB,IAAiC6K,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACI,qBAAH,EAApJ,EAAgL,CAACH,EAAE,GAAG,KAAK3K,OAAX,MAAwB,IAAxB,IAAgC2K,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACK,iBAAH,EAAzO,EAAiQ,CAACJ,EAAE,GAAG,KAAK5K,OAAX,MAAwB,IAAxB,IAAgC4K,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACK,0BAAH,EAA1T,CAAZ,EACKhM,IADL,CACWC,GAAD,IAAS;AACf,iBAAKkM,aAAL;AACH,WAHD,EAGGC,KAHH,CAGSnG,KAAK,IAAI,CACd;AACH,WALD;AAMH;AACJ,OAvBD,MAwBK;AACD,aAAK3F,gBAAL;AACH;AACJ,KA5CD;AA6CH;;AACDZ,EAAAA,aAAa,GAAG;AACZ,SAAKpH,OAAL,CAAayH,aAAb,CAA2B,oBAA3B,EAAiD,IAAjD,EAAuD,KAAKjH,SAA5D,EAAuE,IAAvE,EAA6E,KAA7E,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAK9F,UAAL,GAAkB8F,GAAlB;AACAA,MAAAA,GAAG,CAACC,OAAJ,CAAa0H,CAAD,IAAO;AACf,YAAIA,CAAC,CAACyE,WAAF,IAAiB,UAArB,EAAiC;AAC7B,eAAKzQ,UAAL,CAAgB4J,IAAhB,CAAqBoC,CAArB;AACH,SAFD,MAGK,IAAIA,CAAC,CAACyE,WAAF,IAAiB,WAArB,EAAkC;AACnC,eAAKxQ,WAAL,CAAiB2J,IAAjB,CAAsBoC,CAAtB;AACH;AACJ,OAPD;AAQH,KAXD;AAYH;;AACD0E,EAAAA,OAAO,GAAG;AACN,SAAKvT,YAAL,GAAoB,OAApB;AACA,UAAMyN,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,QAAtB,CAHM,CAIN;AACH;;AACD2F,EAAAA,QAAQ,GAAG;AACP,SAAKxT,YAAL,GAAoB,MAApB;AACA,UAAMyN,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,KAAL,CAAWC,QAAX,GAAsB,MAAtB,CAHO,CAIP;AACH;;AACDxC,EAAAA,YAAY,CAACmD,GAAD,EAAM;AACd,SAAKjP,OAAL,CAAa8L,YAAb,CAA0B,kBAA1B,EAA8CmD,GAAG,CAACiF,QAAlD,EAA4DjF,GAAG,CAACkF,QAAhE,EAA0E,KAAK3T,SAA/E;AACH;;AACD4T,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,SAAK5S,YAAL,CAAkBmG,OAAlB,CAA2B0M,CAAD,IAAOA,CAAC,CAACC,OAAF,GAAYF,EAAE,CAAC5J,MAAH,CAAU8J,OAAvD;AACAF,IAAAA,EAAE,CAAC5J,MAAH,CAAU8J,OAAV,GAAoB,KAAK9S,YAAL,CAAkBmG,OAAlB,CAA2B0M,CAAD,IAAO;AACjD,WAAK5S,WAAL,CAAiBwL,IAAjB,CAAsBoH,CAAtB;AACH,KAFmB,CAApB,GAEK,KAAK5S,WAAL,GAAmB,EAFxB;AAGH;;AACD8S,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAK/S,YAAL,CAAkBgT,KAAlB,CAAyBC,CAAD,IAAOA,CAAC,CAACH,OAAjC,CAAP;AACH;;AACDI,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZA,IAAAA,GAAG,CAACL,OAAJ,IAAe,IAAf,GAAsB,KAAK7S,WAAL,CAAiBwL,IAAjB,CAAsB0H,GAAtB,CAAtB,GAAmD,KAAKlT,WAAL,CAAiBoP,MAAjB,CAAwB,KAAKpP,WAAL,CAAiBqP,OAAjB,CAAyB6D,GAAzB,CAAxB,EAAuD,CAAvD,CAAnD;AACH;;AACD9J,EAAAA,UAAU,GAAG;AACTZ,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBC,KAApB;AACH;;AACD0K,EAAAA,aAAa,CAACxK,CAAD,EAAI;AACb,SAAK1G,cAAL,GAAsB,IAAtB;AACA,SAAKnC,UAAL,GAAkB,KAAlB;AACA,SAAKsT,IAAL,GAAYzK,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACA,SAAKJ,QAAL,GAAgBD,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAAlC;AACA,UAAMkK,MAAM,GAAG,KAAKtT,YAAL,CAAkBuT,IAAlB,CAAwB1D,IAAD,IAAU;AAC5C,aAAOA,IAAI,CAAC4C,QAAL,IAAiB,KAAK5J,QAA7B;AACH,KAFc,CAAf;;AAGA,QAAIyK,MAAJ,EAAY;AACR/L,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA,WAAKmC,cAAL,GAAsB,KAAtB;AACH,KAND,MAOK;AACD,UAAI,KAAKF,SAAL,GAAiBkH,UAAU,CAAC,KAAKmK,IAAL,CAAUlK,IAAX,CAAV,GAA6B,IAA7B,GAAoC,IAArD,GAA4D,EAAhE,EAAoE;AAChE5B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE,+DAAR;AAAyEC,YAAAA,MAAM,EAAE,KAAK3H;AAAtF,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA,aAAKmC,cAAL,GAAsB,KAAtB;AACA;AACH,OAPD,MAQK;AACD,aAAK3D,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAKgK,IAApD,EAA0D,EAA1D,EAA8D,KAAKtU,SAAnE,EAA8E,KAA9E,EAAqF,KAArF,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,eAAKpH,cAAL,GAAsB,KAAtB;AACA,eAAKF,SAAL,GAAiB,KAAKA,SAAL,GAAiBkH,UAAU,CAAC,KAAKmK,IAAL,CAAUlK,IAAX,CAAV,GAA6B,IAA7B,GAAoC,IAAtE;AACA,eAAKnJ,YAAL,CAAkByL,IAAlB,CAAuB;AACnB,0BAAc,EADK;AAEnB,wBAAY,KAAKlN,OAAL,CAAagH,YAAb,CAA0B,KAAKsD,QAA/B,CAFO;AAGnB,wBAAYS,UAHO;AAInB,wBAAY,MAJO;AAKnB,4BAAgB,KAAKpK,WALF;AAMnB,2BAAe,KAAKV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CANI;AAOnB,wBAAY7K,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAzB,GAAgC;AAPzB,WAAvB;AASA,eAAKuK,aAAL,GAAqB,EAArB;AACH,SAdD,EAcGrB,KAdH,CAcUsB,GAAD,IAAS;AACd,eAAKzR,cAAL,GAAsB,KAAtB;AACH,SAhBD;AAiBH;AACJ;AACJ;;AACD0R,EAAAA,cAAc,GAAG;AACbnL,IAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBC,KAAxB;AACH;;AACDmL,EAAAA,iBAAiB,CAACjL,CAAD,EAAI;AACjB,SAAKvG,WAAL,GAAmB,IAAnB;AACA,SAAKtC,UAAL,GAAkB,KAAlB;AACA,SAAKgJ,QAAL,GAAgBH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB;AACA,SAAK6K,YAAL,GAAoBlL,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAAtC;AACA,UAAMkK,MAAM,GAAG,KAAKnR,gBAAL,CAAsBoR,IAAtB,CAA4B1D,IAAD,IAAU;AAChD,aAAOA,IAAI,CAAC4C,QAAL,IAAiB,KAAKqB,YAA7B;AACH,KAFc,CAAf;;AAGA,QAAIR,MAAJ,EAAY;AACR/L,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA,WAAKsC,WAAL,GAAmB,KAAnB;AACH,KAND,MAOK;AACD,UAAI,KAAKD,WAAL,GAAmB8G,UAAU,CAAC,KAAKH,QAAL,CAAcI,IAAf,CAAV,GAAiC,IAAjC,GAAwC,IAA3D,GAAkE,EAAtE,EAA0E;AACtE5B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE,+DAAR;AAAyEC,YAAAA,MAAM,EAAE,KAAK3H;AAAtF,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA,aAAKsC,WAAL,GAAmB,KAAnB;AACA;AACH;;AACD,WAAK9D,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAKN,QAApD,EAA8D,EAA9D,EAAkE,KAAKhK,SAAvE,EAAkF,KAAlF,EAAyF,KAAzF,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,aAAKjH,WAAL,GAAmB,KAAnB;AACA,aAAKD,WAAL,GAAmB,KAAKA,WAAL,GAAmB8G,UAAU,CAAC,KAAKH,QAAL,CAAcI,IAAf,CAAV,GAAiC,IAAjC,GAAwC,IAA9E;AACA,aAAKhH,gBAAL,CAAsBsJ,IAAtB,CAA2B;AACvB,sBAAY,KAAKlN,OAAL,CAAagH,YAAb,CAA0B,KAAKuO,YAA/B,CADW;AAEvB,sBAAYxK,UAFW;AAGvB,yBAAe,KAAKpK,WAHG;AAIvB,yBAAe,KAAKV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CAJQ;AAKvB,sBAAY,cALW;AAMvB,sBAAY7K,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAzB,GAAgC;AANrB,SAA3B;AAQA,aAAK4K,iBAAL,GAAyB,EAAzB;AACH,OAbD,EAaG1B,KAbH,CAaSnG,KAAK,IAAI;AACd,aAAK7J,WAAL,GAAmB,KAAnB;AACH,OAfD;AAgBH;AACJ;;AACD2R,EAAAA,aAAa,GAAG;AACZvL,IAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuBC,KAAvB;AACH;;AACDuL,EAAAA,gBAAgB,CAACrL,CAAD,EAAI;AAChB,SAAKpG,UAAL,GAAkB,IAAlB;AACA,SAAKzC,UAAL,GAAkB,KAAlB;AACA,SAAKmU,OAAL,GAAetL,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACA,SAAKkL,WAAL,GAAmBvL,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAArC;AACA,UAAMkK,MAAM,GAAG,KAAKhR,eAAL,CAAqBiR,IAArB,CAA2B1D,IAAD,IAAU;AAC/C,aAAOA,IAAI,CAAC4C,QAAL,IAAiB,KAAK0B,WAA7B;AACH,KAFc,CAAf;;AAGA,QAAIb,MAAJ,EAAY;AACR/L,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA,WAAKyC,UAAL,GAAkB,KAAlB;AACH,KAND,MAOK;AACD,UAAI,KAAKD,UAAL,GAAkB2G,UAAU,CAAC,KAAKgL,OAAL,CAAa/K,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAAzD,GAAgE,EAApE,EAAwE;AACpE5B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE,+DAAR;AAAyEC,YAAAA,MAAM,EAAE,KAAK3H;AAAtF,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA,aAAKyC,UAAL,GAAkB,KAAlB;AACA;AACH;;AACD,WAAKjE,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAK6K,OAApD,EAA6D,EAA7D,EAAiE,KAAKnV,SAAtE,EAAiF,KAAjF,EAAwF,KAAxF,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,aAAK9G,UAAL,GAAkB,KAAlB;AACA,aAAKD,UAAL,GAAkB,KAAKA,UAAL,GAAkB2G,UAAU,CAAC,KAAKgL,OAAL,CAAa/K,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAA3E;AACA,aAAK7G,eAAL,CAAqBmJ,IAArB,CAA0B;AACtB,sBAAY,KAAKlN,OAAL,CAAagH,YAAb,CAA0B,KAAK4O,WAA/B,CADU;AAEtB,sBAAY7K,UAFU;AAGtB,yBAAe,KAAKpK,WAHE;AAItB,yBAAe,KAAKV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CAJO;AAKtB,sBAAY,SALU;AAMtB,sBAAY7K,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAzB,GAAgC;AANtB,SAA1B;AAQA,aAAKiL,gBAAL,GAAwB,EAAxB;AACH,OAbD,EAaG/B,KAbH,CAaUsB,GAAD,IAAS;AACd,aAAKnR,UAAL,GAAkB,KAAlB;AACH,OAfD;AAgBH;AACJ;;AACD6R,EAAAA,aAAa,GAAG;AACZ5L,IAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuBC,KAAvB;AACH;;AACD4L,EAAAA,gBAAgB,CAAC1L,CAAD,EAAI;AAChB,SAAKjG,UAAL,GAAkB,IAAlB;AACA,SAAK5C,UAAL,GAAkB,KAAlB;AACA,SAAKwU,OAAL,GAAe3L,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACA,SAAKuL,WAAL,GAAmB5L,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAArC;AACA,UAAMkK,MAAM,GAAG,KAAK7Q,eAAL,CAAqB8Q,IAArB,CAA2B1D,IAAD,IAAU;AAC/C,aAAOA,IAAI,CAAC4C,QAAL,IAAiB,KAAK+B,WAA7B;AACH,KAFc,CAAf;;AAGA,QAAIlB,MAAJ,EAAY;AACR/L,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA,WAAK4C,UAAL,GAAkB,KAAlB;AACH,KAND,MAOK;AACD,UAAI,KAAKD,UAAL,GAAkBwG,UAAU,CAAC,KAAKqL,OAAL,CAAapL,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAAzD,GAAgE,EAApE,EAAwE;AACpE5B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE,+DAAR;AAAyEC,YAAAA,MAAM,EAAE,KAAK3H;AAAtF,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA,aAAK4C,UAAL,GAAkB,KAAlB;AACA;AACH;;AACD,WAAKpE,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAKkL,OAApD,EAA6D,EAA7D,EAAiE,KAAKxV,SAAtE,EAAiF,KAAjF,EAAwF,KAAxF,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,aAAK3G,UAAL,GAAkB,KAAlB;AACA,aAAKD,UAAL,GAAkB,KAAKA,UAAL,GAAkBwG,UAAU,CAAC,KAAKqL,OAAL,CAAapL,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAA3E;AACA,aAAK1G,eAAL,CAAqBgJ,IAArB,CAA0B;AACtB,sBAAY,KAAKlN,OAAL,CAAagH,YAAb,CAA0B,KAAKiP,WAA/B,CADU;AAEtB,sBAAYlL,UAFU;AAGtB,yBAAe,KAAKpK,WAHE;AAItB,yBAAe,KAAKV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CAJO;AAKtB,sBAAY,UALU;AAMtB,sBAAY7K,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAzB,GAAgC;AANtB,SAA1B;AAQA,aAAKsL,gBAAL,GAAwB,EAAxB;AACH,OAbD,EAaGpC,KAbH,CAaUsB,GAAD,IAAS;AACd,aAAKhR,UAAL,GAAkB,KAAlB;AACH,OAfD;AAgBH;AACJ;;AACD+R,EAAAA,aAAa,GAAG;AACZjM,IAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuBC,KAAvB;AACH;;AACDiM,EAAAA,gBAAgB,CAAC/L,CAAD,EAAI;AAChB,SAAK9F,WAAL,GAAmB,IAAnB;AACA,SAAK/C,UAAL,GAAkB,KAAlB;AACA,SAAK6U,OAAL,GAAehM,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACA,SAAK4L,WAAL,GAAmBjM,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAArC;AACA,UAAMkK,MAAM,GAAG,KAAK1Q,eAAL,CAAqB2Q,IAArB,CAA2B1D,IAAD,IAAU;AAC/C,aAAOA,IAAI,CAAC4C,QAAL,IAAiB,KAAKoC,WAA7B;AACH,KAFc,CAAf;;AAGA,QAAIvB,MAAJ,EAAY;AACR/L,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA,WAAK+C,WAAL,GAAmB,KAAnB;AACH,KAND,MAOK;AACD,UAAI,KAAKD,WAAL,GAAmBqG,UAAU,CAAC,KAAK0L,OAAL,CAAazL,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAA1D,GAAiE,EAArE,EAAyE;AACrE5B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE,+DAAR;AAAyEC,YAAAA,MAAM,EAAE,KAAK3H;AAAtF,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA,aAAK+C,WAAL,GAAmB,KAAnB;AACA;AACH;;AACD,WAAKvE,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAKuL,OAApD,EAA6D,EAA7D,EAAiE,KAAK7V,SAAtE,EAAiF,KAAjF,EAAwF,KAAxF,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,aAAKxG,WAAL,GAAmB,KAAnB;AACA,aAAKD,WAAL,GAAmB,KAAKA,WAAL,GAAmBqG,UAAU,CAAC,KAAK0L,OAAL,CAAazL,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAA7E;AACA,aAAKvG,eAAL,CAAqB6I,IAArB,CAA0B;AACtB,sBAAY,KAAKlN,OAAL,CAAagH,YAAb,CAA0B,KAAKsP,WAA/B,CADU;AAEtB,sBAAYvL,UAFU;AAGtB,yBAAe,KAAKpK,WAHE;AAItB,yBAAe,KAAKV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CAJO;AAKtB,sBAAY,UALU;AAMtB,sBAAY7K,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAzB,GAAgC;AANtB,SAA1B;AAQA,aAAK2L,gBAAL,GAAwB,EAAxB;AACH,OAbD,EAaGzC,KAbH,CAaUsB,GAAD,IAAS;AACd,aAAK7Q,WAAL,GAAmB,KAAnB;AACH,OAfD;AAgBH;AACJ;;AACDiS,EAAAA,aAAa,GAAG;AACZtM,IAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuBC,KAAvB;AACH;;AACDsM,EAAAA,gBAAgB,CAACpM,CAAD,EAAI;AAChB,SAAK3F,UAAL,GAAkB,IAAlB;AACA,SAAKlD,UAAL,GAAkB,KAAlB;AACA,SAAKkV,OAAL,GAAerM,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf;AACA,SAAKiM,WAAL,GAAmBtM,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAArC;AACA,UAAMkK,MAAM,GAAG,KAAKvQ,eAAL,CAAqBwQ,IAArB,CAA2B1D,IAAD,IAAU;AAC/C,aAAOA,IAAI,CAAC4C,QAAL,IAAiB,KAAKyC,WAA7B;AACH,KAFc,CAAf;;AAGA,QAAI5B,MAAJ,EAAY;AACR/L,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA,WAAKkD,UAAL,GAAkB,KAAlB;AACH,KAND,MAOK;AACD,UAAI,KAAKD,UAAL,GAAkBkG,UAAU,CAAC,KAAK+L,OAAL,CAAa9L,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAAzD,GAAgE,EAApE,EAAwE;AACpE5B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE,+DAAR;AAAyEC,YAAAA,MAAM,EAAE,KAAK3H;AAAtF,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA,aAAKkD,UAAL,GAAkB,KAAlB;AACA;AACH;;AACD,WAAK1E,OAAL,CAAa8K,UAAb,CAAwB,qBAAxB,EAA+C,KAAK4L,OAApD,EAA6D,EAA7D,EAAiE,KAAKlW,SAAtE,EAAiF,KAAjF,EAAwF,KAAxF,EACKkH,IADL,CACWqD,UAAD,IAAgB;AACtB,aAAKrG,UAAL,GAAkB,KAAlB;AACA,aAAKD,UAAL,GAAkB,KAAKA,UAAL,GAAkBkG,UAAU,CAAC,KAAK+L,OAAL,CAAa9L,IAAd,CAAV,GAAgC,IAAhC,GAAuC,IAA3E;AACA,aAAKpG,eAAL,CAAqB0I,IAArB,CAA0B;AACtB,sBAAY,KAAKlN,OAAL,CAAagH,YAAb,CAA0B,KAAK2P,WAA/B,CADU;AAEtB,sBAAY5L,UAFU;AAGtB,yBAAe,KAAKpK,WAHE;AAItB,yBAAe,KAAKV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CAJO;AAKtB,sBAAY,SALU;AAMtB,sBAAY7K,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAlB,GAAyB,IAAzB,GAAgC;AANtB,SAA1B;AAQA,aAAKgM,gBAAL,GAAwB,EAAxB;AACH,OAbD,EAaG9C,KAbH,CAaUsB,GAAD,IAAS;AACd,aAAK1Q,UAAL,GAAkB,KAAlB;AACH,OAfD;AAgBH;AACJ;;AACDmS,EAAAA,UAAU,CAACC,CAAD,EAAI;AACV,QAAI,KAAK9P,YAAL,CAAkB,KAAKpD,gBAAL,CAAsBkT,CAAtB,EAAyBpW,UAA3C,KAA0D,EAA9D,EAAkE;AAC9D,WAAKH,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,QAAAA,OAAO,EAAE,iDADoB;AAC+BC,QAAAA,MAAM,EAAE,cADvC;AACuDC,QAAAA,IAAI,EAAE,4BAD7D;AAE7BC,QAAAA,MAAM,EAAE,MAAM;AACV,eAAK2F,cAAL,CAAoB,KAAKnT,gBAAL,CAAsBkT,CAAtB,EAAyBpW,UAA7C;AACA,eAAKmD,WAAL,GAAmB,KAAKA,WAAL,GAAmB8G,UAAU,CAAC,KAAK/G,gBAAL,CAAsBkT,CAAtB,EAAyB3H,QAA1B,CAAhD;AACA,eAAKvL,gBAAL,CAAsBkN,MAAtB,CAA6BgG,CAA7B,EAAgC,CAAhC;AACH,SAN4B;AAO7BvF,QAAAA,MAAM,EAAE,MAAM,CAAG;AAPY,OAAjC;AASH,KAVD,MAWK;AACD,WAAK1N,WAAL,GAAmB,KAAKA,WAAL,GAAmB8G,UAAU,CAAC,KAAK/G,gBAAL,CAAsBkT,CAAtB,EAAyB3H,QAA1B,CAAhD;AACA,WAAKvL,gBAAL,CAAsBkN,MAAtB,CAA6BgG,CAA7B,EAAgC,CAAhC;AACH;AACJ;;AACDE,EAAAA,SAAS,CAACF,CAAD,EAAI;AACT,QAAI,KAAK9P,YAAL,CAAkB,KAAKjD,eAAL,CAAqB+S,CAArB,EAAwBpW,UAA1C,KAAyD,EAA7D,EAAiE;AAC7D,WAAKH,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,QAAAA,OAAO,EAAE,iDADoB;AAC+BC,QAAAA,MAAM,EAAE,cADvC;AACuDC,QAAAA,IAAI,EAAE,4BAD7D;AAE7BC,QAAAA,MAAM,EAAE,MAAM;AACV,eAAK2F,cAAL,CAAoB,KAAKhT,eAAL,CAAqB+S,CAArB,EAAwBpW,UAA5C;AACA,eAAKsD,UAAL,GAAkB,KAAKA,UAAL,GAAkB2G,UAAU,CAAC,KAAK5G,eAAL,CAAqB+S,CAArB,EAAwB3H,QAAzB,CAA9C;AACA,eAAKpL,eAAL,CAAqB+M,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH,SAN4B;AAO7BvF,QAAAA,MAAM,EAAE,MAAM,CAAG;AAPY,OAAjC;AASH,KAVD,MAWK;AACD,WAAKvN,UAAL,GAAkB,KAAKA,UAAL,GAAkB2G,UAAU,CAAC,KAAK5G,eAAL,CAAqB+S,CAArB,EAAwB3H,QAAzB,CAA9C;AACA,WAAKpL,eAAL,CAAqB+M,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH;AACJ;;AACDG,EAAAA,SAAS,CAACH,CAAD,EAAI;AACT,QAAI,KAAK9P,YAAL,CAAkB,KAAK9C,eAAL,CAAqB4S,CAArB,EAAwBpW,UAA1C,KAAyD,EAA7D,EAAiE;AAC7D,WAAKH,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,QAAAA,OAAO,EAAE,iDADoB;AAC+BC,QAAAA,MAAM,EAAE,cADvC;AACuDC,QAAAA,IAAI,EAAE,4BAD7D;AAE7BC,QAAAA,MAAM,EAAE,MAAM;AACV,eAAK2F,cAAL,CAAoB,KAAK7S,eAAL,CAAqB4S,CAArB,EAAwBpW,UAA5C;AACA,eAAKyD,UAAL,GAAkB,KAAKA,UAAL,GAAkBwG,UAAU,CAAC,KAAKzG,eAAL,CAAqB4S,CAArB,EAAwB3H,QAAzB,CAA9C;AACA,eAAKjL,eAAL,CAAqB4M,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH,SAN4B;AAO7BvF,QAAAA,MAAM,EAAE,MAAM,CAAG;AAPY,OAAjC;AASH,KAVD,MAWK;AACD,WAAKpN,UAAL,GAAkB,KAAKA,UAAL,GAAkBwG,UAAU,CAAC,KAAKzG,eAAL,CAAqB4S,CAArB,EAAwB3H,QAAzB,CAA9C;AACA,WAAKjL,eAAL,CAAqB4M,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH;AACJ;;AACDI,EAAAA,SAAS,CAACJ,CAAD,EAAI;AACT,QAAI,KAAK9P,YAAL,CAAkB,KAAK3C,eAAL,CAAqByS,CAArB,EAAwBpW,UAA1C,KAAyD,EAA7D,EAAiE;AAC7D,WAAKH,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,QAAAA,OAAO,EAAE,iDADoB;AAC+BC,QAAAA,MAAM,EAAE,cADvC;AACuDC,QAAAA,IAAI,EAAE,4BAD7D;AAE7BC,QAAAA,MAAM,EAAE,MAAM;AACV,eAAK2F,cAAL,CAAoB,KAAK1S,eAAL,CAAqByS,CAArB,EAAwBpW,UAA5C;AACA,eAAK4D,WAAL,GAAmB,KAAKA,WAAL,GAAmBqG,UAAU,CAAC,KAAKtG,eAAL,CAAqByS,CAArB,EAAwB3H,QAAzB,CAAhD;AACA,eAAK9K,eAAL,CAAqByM,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH,SAN4B;AAO7BvF,QAAAA,MAAM,EAAE,MAAM,CAAG;AAPY,OAAjC;AASH,KAVD,MAWK;AACD,WAAKjN,WAAL,GAAmB,KAAKA,WAAL,GAAmBqG,UAAU,CAAC,KAAKtG,eAAL,CAAqByS,CAArB,EAAwB3H,QAAzB,CAAhD;AACA,WAAK9K,eAAL,CAAqByM,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH;AACJ;;AACDK,EAAAA,SAAS,CAACL,CAAD,EAAI;AACT,QAAI,KAAK9P,YAAL,CAAkB,KAAKxC,eAAL,CAAqBsS,CAArB,EAAwBpW,UAA1C,KAAyD,EAA7D,EAAiE;AAC7D,WAAKH,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,QAAAA,OAAO,EAAE,iDADoB;AAC+BC,QAAAA,MAAM,EAAE,cADvC;AACuDC,QAAAA,IAAI,EAAE,4BAD7D;AAE7BC,QAAAA,MAAM,EAAE,MAAM;AACV,eAAK2F,cAAL,CAAoB,KAAKvS,eAAL,CAAqBsS,CAArB,EAAwBpW,UAA5C;AACA,eAAK+D,UAAL,GAAkB,KAAKA,UAAL,GAAkBkG,UAAU,CAAC,KAAKnG,eAAL,CAAqBsS,CAArB,EAAwB3H,QAAzB,CAA9C;AACA,eAAK3K,eAAL,CAAqBsM,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH,SAN4B;AAO7BvF,QAAAA,MAAM,EAAE,MAAM,CAAG;AAPY,OAAjC;AASH,KAVD,MAWK;AACD,WAAK9M,UAAL,GAAkB,KAAKA,UAAL,GAAkBkG,UAAU,CAAC,KAAKnG,eAAL,CAAqBsS,CAArB,EAAwB3H,QAAzB,CAA9C;AACA,WAAK3K,eAAL,CAAqBsM,MAArB,CAA4BgG,CAA5B,EAA+B,CAA/B;AACH;AACJ;;AACDM,EAAAA,WAAW,CAAC3I,GAAD,EAAM;AACb,SAAKjN,UAAL,GAAkB,KAAlB;AACA,UAAM6V,SAAS,GAAG,CAAC,KAAKzT,gBAAN,EAAwB,KAAKG,eAA7B,EAA8C,KAAKG,eAAnD,EAAoE,KAAKG,eAAzE,EAA0F,KAAKG,eAA/F,EAAgH8S,IAAhH,EAAlB;AACA,QAAIjF,UAAU,GAAG,EAAjB;AACA,QAAI3C,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI8D,IAAT,IAAiB6D,SAAjB,EAA4B;AACxB,UAAI7D,IAAI,CAAC9S,UAAL,IAAmB6W,SAAnB,IAAgC/D,IAAI,CAAC9S,UAAL,IAAmB,EAAvD,EAA2D;AACvDgP,QAAAA,MAAM,GAAG;AACL,iBAAO;AACH,iCAAqB;AACjB,2BAAa,KAAK7O,SADD;AAEjB,0BAAY,KAAKmG,YAAL,CAAkBwM,IAAI,CAACU,QAAvB,CAFK;AAGjB,0BAAY,KAAKlN,YAAL,CAAkBwM,IAAI,CAACW,QAAvB,CAHK;AAIjB,6BAAeX,IAAI,CAACgE,WAJH;AAKjB,0BAAYhE,IAAI,CAACtE,QALA;AAMjB,0BAAYsE,IAAI,CAACrE;AANA;AADlB;AADF,SAAT;AAYH,OAbD,MAcK;AACDO,QAAAA,MAAM,GAAG;AACL,iBAAO;AACH,iCAAqB;AACjB,4BAAc8D,IAAI,CAAC9S;AADF;AADlB,WADF;AAML,iBAAO;AACH,iCAAqB;AACjB,0BAAY,KAAKsG,YAAL,CAAkBwM,IAAI,CAACU,QAAvB,CADK;AAEjB,0BAAY,KAAKlN,YAAL,CAAkBwM,IAAI,CAACW,QAAvB,CAFK;AAGjB,0BAAYX,IAAI,CAACtE,QAHA;AAIjB,0BAAYsE,IAAI,CAACrE;AAJA;AADlB;AANF,SAAT;AAeH;;AACDkD,MAAAA,UAAU,CAACnF,IAAX,CAAgBwC,MAAhB;AACH;;AACD,QAAI6C,SAAS,GAAG;AAAE,eAASF;AAAX,KAAhB;AACA,SAAKrS,OAAL,CAAayH,aAAb,CAA2B,sBAA3B,EAAmD8K,SAAnD,EAA8D,KAAK/R,SAAnE,EAA8E,IAA9E,EAAoF,KAApF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAK8P,YAAL,CAAkB9P,GAAlB;;AACA,UAAI8G,GAAG,IAAI,UAAX,EAAuB;AACnB,aAAKhI,YAAL,CAAkB,CAAlB,EAAqB,KAAKxF,MAA1B,EAAkC,EAAlC;AACH,OAFD,MAGK;AACD+H,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKxH,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAE,oBAAS,qBAAX;AAAiCE,YAAAA,MAAM,EAAE,KAAK3H;AAA9C,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIH;AACJ,KAZD,EAYI4T,GAAD,IAAS;AACRxH,MAAAA,OAAO,CAAC8J,GAAR,CAAY,qCAAZ;AACH,KAdD;AAeH;;AACDD,EAAAA,YAAY,CAACxI,GAAD,EAAM;AACd,SAAKrL,gBAAL,GAAwB,EAAxB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACA,SAAKG,eAAL,GAAuB,EAAvB;AACAyK,IAAAA,GAAG,CAACrH,OAAJ,CAAaC,GAAD,IAAS;AACjB,cAAQA,GAAG,CAACqH,QAAZ;AACI,aAAK,cAAL;AACI,eAAKtL,gBAAL,CAAsBsJ,IAAtB,CAA2BrF,GAA3B;AACA;;AACJ,aAAK,SAAL;AACI,eAAK9D,eAAL,CAAqBmJ,IAArB,CAA0BrF,GAA1B;AACA;;AACJ,aAAK,UAAL;AACI,eAAK3D,eAAL,CAAqBgJ,IAArB,CAA0BrF,GAA1B;AACA;;AACJ,aAAK,UAAL;AACI,eAAKxD,eAAL,CAAqB6I,IAArB,CAA0BrF,GAA1B;AACA;;AACJ,aAAK,SAAL;AACI,eAAKrD,eAAL,CAAqB0I,IAArB,CAA0BrF,GAA1B;AACA;;AACJ;AACI;AAjBR;AAmBH,KApBD;AAqBH;;AACDkP,EAAAA,cAAc,CAACD,CAAD,EAAI;AACd,SAAKtV,UAAL,GAAkB,KAAlB;AACA,QAAI+K,OAAO,GAAG;AACVJ,MAAAA,KAAK,EAAE;AACHC,QAAAA,GAAG,EAAE;AACDuL,UAAAA,iBAAiB,EAAE;AACfjX,YAAAA,UAAU,EAAEoW;AADG;AADlB;AADF;AADG,KAAd;AASA,SAAK9W,OAAL,CAAayH,aAAb,CAA2B,sBAA3B,EAAmD8E,OAAnD,EAA4D,KAAK/L,SAAjE,EAA4E,IAA5E,EAAkF,KAAlF,EACIkH,IADJ,CACUkQ,YAAD,IAAkB;AACvB;AACA5O,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,0BAAR;AAAoCC,UAAAA,MAAM,EAAE,KAAK3H;AAAjD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIH,KAPD;AAQH;;AACDqW,EAAAA,YAAY,CAACpJ,GAAD,EAAM;AACd,QAAIA,GAAG,IAAI,SAAX,EAAsB;AAClB,WAAK9J,SAAL,GAAiB,IAAjB;;AACA,UAAI,KAAKqC,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,MAAhC,EAAwCC,KAA1D,KAAoE,EAApE,IAA0E,KAAK9C,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,MAAhC,EAAwCC,KAA1D,KAAoE,EAAlJ,EAAsJ;AAClJ,eAAO,IAAP;AACH;;AACD,UAAI,KAAKlG,gBAAL,CAAsB6F,MAAtB,IAAgC,CAAhC,IAAqC,KAAK1F,eAAL,CAAqB0F,MAArB,IAA+B,CAApE,IAAyE,KAAKvF,eAAL,CAAqBuF,MAArB,IAA+B,CAAxG,IAA6G,KAAKpF,eAAL,CAAqBoF,MAArB,IAA+B,CAA5I,IAAiJ,KAAKjF,eAAL,CAAqBiF,MAArB,IAA+B,CAApL,EAAuL;AACnL,eAAO,IAAP;AACH;AACJ;;AACD,WAAO,KAAP;AACH;;AACD5C,EAAAA,QAAQ,CAAC4H,GAAD,EAAM;AACV,SAAK3L,QAAL,GAAgB,IAAhB,CADU,CAEV;;AACA,SAAKtB,UAAL,GAAkB,KAAlB;;AACA,QAAI,KAAKqW,YAAL,CAAkBpJ,GAAlB,CAAJ,EAA4B;AACxBzF,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,mCAAR;AAA6CC,UAAAA,MAAM,EAAE,KAAK3H;AAA1D,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA;AACH;;AACD,QAAI+K,OAAO,GAAG,EAAd;;AACA,QAAI,KAAKvF,YAAL,CAAkB,KAAKnG,SAAvB,KAAqC,EAAzC,EAA6C;AACzC0L,MAAAA,OAAO,GAAG;AACNJ,QAAAA,KAAK,EAAE;AACHC,UAAAA,GAAG,EAAE;AACDC,YAAAA,qBAAqB,EAAE;AACnBxL,cAAAA,SAAS,EAAE,KAAKA;AADG;AADtB,WADF;AAMHyL,UAAAA,GAAG,EAAE;AACDD,YAAAA,qBAAqB,EAAE;AACnB,yBAAW,KAAKrF,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,MAAhC,EAAwCC,KAA1D,CADQ;AAEnB,yBAAW,KAAK9C,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,MAAhC,EAAwCC,KAA1D,CAFQ;AAGnB,+BAAiB,KAAK3I,QAHH;AAInB,yBAAW,KAAKc;AAJG;AADtB;AANF;AADD,OAAV;AAiBH;;AACD,SAAKjC,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuD8E,OAAvD,EAAgE,KAAK/L,SAArE,EAAgF,IAAhF,EAAsF,KAAtF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,WAAKyP,WAAL,CAAiB3I,GAAjB;AACH,KAHD;AAIH;;AACDqJ,EAAAA,WAAW,CAACjQ,GAAD,EAAM;AACb,SAAKvC,cAAL,GAAsBuC,GAAtB;AACH;;AACDkQ,EAAAA,YAAY,CAAClQ,GAAD,EAAM;AACd,SAAKtC,UAAL,GAAkBsC,GAAlB;AACH;;AACDmQ,EAAAA,OAAO,GAAG;AACN,SAAKxS,KAAL,GAAa,KAAb;;AACA,QAAI,IAAJ,EAAU;AACN,UAAI,KAAKwB,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,KAAhC,EAAuCC,KAAzD,KAAmE,EAAnE,IAAyE,KAAKrE,QAAL,IAAiB,OAA1F,IACA,KAAKuB,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,aAAhC,EAA+CC,KAAjE,KAA2E,EAA3E,IAAiF,KAAKrE,QAAL,IAAiB,OADtG,EAC+G;AAC3G,aAAKD,KAAL,GAAa,IAAb;AACH;;AACD,UAAI,KAAKzD,SAAL,IAAkB,OAAlB,IAA6B,KAAKC,gBAAL,IAAyB,EAA1D,EAA8D;AAC1D,aAAKwD,KAAL,GAAa,IAAb;AACH;;AACD,UAAI,KAAKC,QAAL,IAAiB,OAArB,EAA8B;AAC1B,YAAI,KAAKH,cAAL,CAAoB2S,YAApB,CAAiCxO,MAAjC,IAA2C,CAA/C,EAAkD;AAC9C,eAAKjE,KAAL,GAAa,IAAb;AACA,eAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,UAA9B;AACH,SAHD,MAIK;AACD,eAAK,IAAIkB,GAAT,IAAgB,KAAKvC,cAAL,CAAoB2S,YAApC,EAAkD;AAC9C,gBAAI,KAAKjR,YAAL,CAAkB,KAAK1B,cAAL,CAAoB6S,UAAtC,KAAqD,EAArD,IAA2D,KAAK7S,cAAL,CAAoB8S,KAApB,IAA6B,EAAxF,IAA8F,KAAKpR,YAAL,CAAkB,KAAK1B,cAAL,CAAoB+S,UAAtC,KAAqD,EAAnJ,IACA,KAAKrR,YAAL,CAAkB,KAAK1B,cAAL,CAAoB4P,IAAtC,KAA+C,EAD/C,IACqD,KAAKlO,YAAL,CAAkBa,GAAG,CAACyQ,SAAtB,KAAoC,EAD7F,EACiG;AAC7F,mBAAK9S,KAAL,GAAa,IAAb;AACA,mBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,UAA9B;AACH;AACJ;AACJ;AACJ;;AACD,UAAI,KAAKlB,QAAL,IAAiB,OAAjB,IAA4B,KAAKuB,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,oBAAhC,EAAsDC,KAAxE,KAAkF,UAAlH,EAA8H;AAC1H,YAAI,KAAKvE,UAAL,CAAgBgT,OAAhB,CAAwB9O,MAAxB,IAAkC,CAAtC,EAAyC;AACrC,eAAKjE,KAAL,GAAa,IAAb;AACA,eAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,SAA9B;AACH,SAHD,MAIK;AACD,cAAI,KAAKK,YAAL,CAAkB,KAAKzB,UAAL,CAAgBiT,YAAlC,KAAmD,EAAnD,IAAyD,KAAKjT,UAAL,CAAgBkT,mBAAhB,IAAuC,EAAhG,IAAsG,KAAKzR,YAAL,CAAkB,KAAKzB,UAAL,CAAgBmT,qBAAlC,KAA4D,EAAlK,IACA,KAAK1R,YAAL,CAAkB,KAAKzB,UAAL,CAAgBoT,gBAAlC,KAAuD,EADvD,IAC6D,KAAK3R,YAAL,CAAkB,KAAKzB,UAAL,CAAgBqT,cAAlC,KAAqD,EADlH,IACwH,KAAK5R,YAAL,CAAkB,KAAKzB,UAAL,CAAgBsT,kBAAlC,KAAyD,EADjL,IAEG,KAAK7R,YAAL,CAAkB,KAAKzB,UAAL,CAAgBuT,gBAAlC,KAAuD,EAF9D,EAEkE;AAC9D,iBAAKtT,KAAL,GAAa,IAAb;AACA,iBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,SAA9B;AACH,WALD,MAMK;AACD,iBAAK,IAAIkB,GAAT,IAAgB,KAAKtC,UAAL,CAAgBgT,OAAhC,EAAyC;AACrC,kBAAI,KAAKvR,YAAL,CAAkBa,GAAG,CAACkR,iBAAtB,KAA4C,EAA5C,IAAkD,KAAK/R,YAAL,CAAkBa,GAAG,CAACmR,OAAtB,KAAkC,EAApF,IAA0F,KAAKhS,YAAL,CAAkBa,GAAG,CAACoR,WAAtB,KAAsC,EAAhI,IAAsI,KAAKjS,YAAL,CAAkBa,GAAG,CAACqR,iBAAtB,KAA4C,EAAlL,IAAwL,KAAKlS,YAAL,CAAkBa,GAAG,CAACsR,uBAAtB,KAAkD,EAA9O,EAAkP;AAC9O,qBAAK3T,KAAL,GAAa,IAAb;AACA,qBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,SAA9B;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,UAAI,KAAKlB,QAAL,IAAiB,OAAjB,KAA6B,KAAKxC,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAA1F,CAAJ,EAAsG;AAClG,aAAK,IAAI6T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3T,WAAL,CAAiBsG,MAArC,EAA6CqN,CAAC,EAA9C,EAAkD;AAC9C,eAAK,IAAIjP,GAAT,IAAgB,KAAK1E,WAAL,CAAiB2T,CAAjB,EAAoBhR,UAApC,EAAgD;AAC5C,gBAAI+B,GAAG,CAACuR,SAAJ,IAAiB,KAAjB,IAA2B,KAAKpS,YAAL,CAAkBa,GAAG,CAACwR,UAAtB,KAAqC,EAArC,IAA2C,KAAKrS,YAAL,CAAkBa,GAAG,CAACoD,aAAtB,KAAwC,EAAnF,KAA0F,KAAKhI,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAvJ,CAA/B,EAA+L;AAC3L,mBAAKuC,KAAL,GAAa,IAAb;AACA,mBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,SAA9B;AACH;AACJ;;AACD,eAAK,IAAI2S,IAAT,IAAiB,KAAKnW,WAAL,CAAiB2T,CAAjB,EAAoBnF,IAArC,EAA2C;AACvC,iBAAK,IAAI4H,IAAT,IAAiBD,IAAI,CAAC1H,QAAtB,EAAgC;AAC5B,kBAAI,KAAK5K,YAAL,CAAkBuS,IAAI,CAACC,YAAvB,KAAwC,EAAxC,IAA8C,KAAKxS,YAAL,CAAkBuS,IAAI,CAACE,WAAvB,KAAuC,EAAzF,EAA6F;AACzF,qBAAKjU,KAAL,GAAa,IAAb;AACA,qBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,SAA9B;AACH;AACJ;AACJ;AACJ;AACJ;;AACD,UAAI,KAAKlB,QAAL,IAAiB,OAAjB,KAA6B,KAAKxC,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAA1F,CAAJ,EAAsG;AAClG,aAAK,IAAI6T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1T,YAAL,CAAkBqG,MAAtC,EAA8CqN,CAAC,EAA/C,EAAmD;AAC/C,eAAK,IAAIjP,GAAT,IAAgB,KAAKzE,YAAL,CAAkB0T,CAAlB,EAAqBhF,WAArC,EAAkD;AAC9C,gBAAIjK,GAAG,CAACuR,SAAJ,IAAiB,KAAjB,IAA2B,KAAKpS,YAAL,CAAkBa,GAAG,CAACwR,UAAtB,KAAqC,EAArC,IAA2C,KAAKrS,YAAL,CAAkBa,GAAG,CAACoD,aAAtB,KAAwC,EAAnF,KAA0F,KAAKhI,iBAAL,IAA0B,KAA1B,IAAmC,KAAKA,iBAAL,IAA0B,KAAvJ,CAA/B,EAA+L;AAC3L,mBAAKuC,KAAL,GAAa,IAAb;AACA,mBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,UAA9B,EAF2L,CAG3L;AACH;AACJ;;AACD,eAAK,IAAI2S,IAAT,IAAiB,KAAKlW,YAAL,CAAkB0T,CAAlB,EAAqBpF,UAAtC,EAAkD;AAC9C,gBAAI,KAAK1K,YAAL,CAAkBsS,IAAI,CAACE,YAAvB,KAAwC,EAAxC,IAA8C,KAAKxS,YAAL,CAAkBsS,IAAI,CAACG,WAAvB,KAAuC,EAAzF,EAA6F;AACzF,mBAAKjU,KAAL,GAAa,IAAb;AACA,mBAAKxF,OAAL,CAAakY,WAAb,CAAyBvR,IAAzB,CAA8B,UAA9B;AACH;AACJ;AACJ;AACJ;AACJ,KAhFD,MAiFK;AACD,WAAKnB,KAAL,GAAa,KAAb;AACH;;AACD,WAAO,KAAKA,KAAZ;AACH;;AACDkU,EAAAA,SAAS,GAAG;AACR,QAAI,KAAK1S,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,UAAhC,EAA4CC,KAA9D,KAAwE,EAAxE,IAA8E,KAAK9C,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,oBAAhC,EAAsDC,KAAxE,KAAkF,EAAhK,IACA,KAAK9C,YAAL,CAAkB,KAAKpC,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC,KAAtE,KAAgF,EADhF,IACsF,KAAK3G,WAAL,CAAiBsG,MAAjB,IAA2B,CADrH,EACwH;AACpH,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACKjD,EAAAA,WAAW,CAACiI,GAAD,EAAM;AAAA;;AAAA;AACnB,MAAA,MAAI,CAAChJ,QAAL,GAAgBgJ,GAAhB;AACA,UAAIlC,OAAO,GAAG,EAAd;AACA,MAAA,MAAI,CAAC/K,UAAL,GAAkB,KAAlB;;AACA,UAAI,MAAI,CAAC+N,cAAL,MAAyB,MAAI,CAAC3K,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC,KAAjF,EAAwF;AACpF;AACH;;AACD,UAAI,MAAI,CAAC4P,SAAL,EAAJ,EAAsB;AAClB,QAAA,MAAI,CAAChU,UAAL,GAAkB,IAAlB;AACAsD,QAAAA,UAAU,CAAC,MAAM;AACb,UAAA,MAAI,CAACxH,UAAL,GAAkB,IAAlB;AACA,UAAA,MAAI,CAACyH,SAAL,GAAiB;AAAE,oBAAQ,mCAAV;AAA+CE,YAAAA,MAAM,EAAE,MAAI,CAAC3H;AAA5D,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA;AACH;;AACD,UAAI,MAAI,CAACC,YAAL,CAAkBgI,MAAlB,IAA4B,CAA5B,IAAiCgF,GAAG,IAAI,QAA5C,EAAsD;AAClDzF,QAAAA,UAAU,CAAC,MAAM;AACb,UAAA,MAAI,CAACxH,UAAL,GAAkB,IAAlB;AACA,UAAA,MAAI,CAACyH,SAAL,GAAiB;AAAE,oBAAQ,qCAAV;AAAiDE,YAAAA,MAAM,EAAE,MAAI,CAAC3H;AAA9D,WAAjB;AACH,SAHS,EAGP,CAHO,CAAV;AAIA;AACH;;AACD,UAAIiN,GAAG,IAAI,QAAP,IAAmBA,GAAG,IAAI,OAA9B,EAAuC;AACnC,QAAA,MAAI,CAAC7N,WAAL,GAAmB6N,GAAG,IAAI,QAAP,GAAkB,IAAlB,GAAyB,KAA5C;;AACA,kBAAU,MAAI,CAAChB,iBAAL,EAAV,EAAoC;AAChC;AACH;;AACD,YAAI,MAAI,CAACuK,OAAL,EAAJ,EAAoB;AAChBhP,UAAAA,UAAU,CAAC,MAAM;AACb,YAAA,MAAI,CAACxH,UAAL,GAAkB,IAAlB;AACA,YAAA,MAAI,CAACyH,SAAL,GAAiB;AAAE,sBAAQ,mCAAV;AAA+CE,cAAAA,MAAM,EAAE,MAAI,CAAC3H;AAA5D,aAAjB;AACH,WAHS,EAGP,CAHO,CAAV;AAIA;AACH;AACJ;;AACD,UAAI,MAAI,CAACwF,YAAL,CAAkB,MAAI,CAACnG,SAAvB,KAAqC,EAAzC,EAA6C;AACzC0L,QAAAA,OAAO,GAAG;AACNJ,UAAAA,KAAK,EAAE;AACHC,YAAAA,GAAG,EAAE;AACDC,cAAAA,qBAAqB,EAAE;AACnBxL,gBAAAA,SAAS,EAAE,MAAI,CAACA;AADG;AADtB,aADF;AAMHyL,YAAAA,GAAG,EAAE;AACDD,cAAAA,qBAAqB,EAAE;AACnB,4BAAY,MAAI,CAACrF,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,UAAhC,EAA4CC,KAA9D,CADO;AAEnB,sCAAsB,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,oBAAhC,EAAsDC,KAAxE,CAFH;AAGnB,oCAAoB,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC,KAAtE,CAHD;AAInB,uBAAO,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,KAAhC,EAAuCC,KAAzD,CAJY;AAKnB,+BAAe,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,aAAhC,EAA+CC,KAAjE,CALI;AAMnB,8BAAc,MAAI,CAAC/H,SAAL,IAAkB,OAAlB,GAA4B,MAAI,CAAC4D,aAAjC,GAAiD,MAAI,CAAC7E,UANjD;AAOnB,oCAAoB,MAAI,CAACiB,SAAL,IAAkB,OAAlB,GAA4B,MAAI,CAACC,gBAAjC,GAAoD,EAPrD;AAQnB,2BAAW,MAAI,CAACC,OARG;AASnB,iCAAiB,MAAI,CAACd;AATH;AADtB;AANF;AADD,SAAV;AAsBH,OAvBD,MAwBK;AACDoL,QAAAA,OAAO,GAAG;AACNJ,UAAAA,KAAK,EAAE;AACHG,YAAAA,GAAG,EAAE;AACDD,cAAAA,qBAAqB,EAAE;AACnB,6BAAa,EADM;AAEnB,4BAAY,MAAI,CAACrF,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,UAAhC,EAA4CC,KAA9D,CAFO;AAGnB,sCAAsB,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,oBAAhC,EAAsDC,KAAxE,CAHH;AAInB,oCAAoB,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,kBAAhC,EAAoDC,KAAtE,CAJD;AAKnB,uBAAO,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,KAAhC,EAAuCC,KAAzD,CALY;AAMnB,+BAAe,MAAI,CAAC9C,YAAL,CAAkB,MAAI,CAACpC,iBAAL,CAAuBiF,QAAvB,CAAgC,aAAhC,EAA+CC,KAAjE,CANI;AAOnB,gCAAgB,MAAI,CAACnJ,WAPF;AAQnB,mCAAmB,MAAI,CAACV,QAAL,CAAcgV,SAAd,CAAwB,IAAIC,IAAJ,EAAxB,EAAoC,YAApC,CARA;AASnB,kCAAkB,GATC;AAUnB,oCAAoB,MAAI,CAACnT,SAAL,IAAkB,OAAlB,GAA4B,MAAI,CAACC,gBAAjC,GAAoD,EAVrD;AAWnB,2BAAW,MAAI,CAACC,OAXG;AAYnB,qCAAqB,MAAI,CAACO,YAZP;AAanB,+BAAe,MAAI,CAACF,YAbD;AAcnB,oCAAoB,MAAI,CAACC,WAdN;AAenB,oCAAoB,MAAI,CAACF,WAfN;AAgBnB,iCAAiB,MAAI,CAAClB;AAhBH;AADtB;AADF;AADD,SAAV;AAwBH;;AACD,MAAA,MAAI,CAACnB,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuD8E,OAAvD,EAAgE,MAAI,CAAC/L,SAArE,EAAgF,IAAhF,EAAsF,KAAtF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,QAAA,MAAI,CAAC9G,SAAL,GAAiB8G,GAAG,CAAC,CAAD,CAAH,CAAO9G,SAAxB;AACA,YAAIgH,GAAG,GAAG;AAAE,uBAAa,MAAI,CAAChH,SAApB;AAA+B,qBAAW,MAAI,CAACK,OAA/C;AAAwD,sBAAY,MAAI,CAACC;AAAzE,SAAV;;AACA,QAAA,MAAI,CAACnB,OAAL,CAAa2Q,WAAb,CAAyB9I,GAAzB,EAA8B,WAA9B;;AACA,QAAA,MAAI,CAAC7H,OAAL,CAAasG,gBAAb,CAA8BK,IAA9B,CAAmC,EAAnC;;AACA,QAAA,MAAI,CAAC7F,UAAL,GAAkB6G,GAAG,CAAC,CAAD,CAAH,CAAO7G,UAAzB;AACA,QAAA,MAAI,CAAC6E,aAAL,GAAqBgC,GAAG,CAAC,CAAD,CAAH,CAAO7G,UAA5B;;AACA,QAAA,MAAI,CAACsR,YAAL;AACH,OATD,EASIgD,GAAD,IAAS;AACRxH,QAAAA,OAAO,CAAC8J,GAAR,CAAY,sCAAZ;AACH,OAXD;AArFmB;AAiGtB;;AACD7D,EAAAA,aAAa,GAAG;AACZ,QAAIxB,UAAU,GAAG,EAAjB;AACA,QAAI3C,MAAM,GAAG,EAAb;;AACA,SAAK,IAAI8D,IAAT,IAAiB,KAAK/R,YAAtB,EAAoC;AAChC,UAAI+R,IAAI,CAAC9S,UAAL,IAAmB6W,SAAnB,IAAgC/D,IAAI,CAAC9S,UAAL,IAAmB,EAAvD,EAA2D;AACvDgP,QAAAA,MAAM,GAAG;AACL,iBAAO;AACH,iCAAqB;AACjB,2BAAa,KAAK7O,SADD;AAEjB,0BAAY,KAAKmG,YAAL,CAAkBwM,IAAI,CAACU,QAAvB,CAFK;AAGjB,0BAAY,KAAKlN,YAAL,CAAkBwM,IAAI,CAACW,QAAvB,CAHK;AAIjB,6BAAeX,IAAI,CAACmG,YAJH;AAKjB,6BAAenG,IAAI,CAACoG,WALH;AAMjB,0BAAYpG,IAAI,CAACtE,QANA;AAOjB,0BAAYsE,IAAI,CAACrE;AAPA;AADlB;AADF,SAAT;AAaH,OAdD,MAeK;AACDO,QAAAA,MAAM,GAAG;AACL,iBAAO;AACH,iCAAqB;AACjB,4BAAc8D,IAAI,CAAC9S;AADF;AADlB,WADF;AAML,iBAAO;AACH,iCAAqB;AACjB,0BAAY,KAAKsG,YAAL,CAAkBwM,IAAI,CAACU,QAAvB,CADK;AAEjB,0BAAY,KAAKlN,YAAL,CAAkBwM,IAAI,CAACW,QAAvB,CAFK;AAGjB;AACA,6BAAeX,IAAI,CAACoG,WAJH;AAKjB,0BAAYpG,IAAI,CAACtE,QALA;AAMjB,0BAAYsE,IAAI,CAACrE;AANA;AADlB;AANF,SAAT;AAiBH;;AACDkD,MAAAA,UAAU,CAACnF,IAAX,CAAgBwC,MAAhB;AACH;;AACD,QAAI6C,SAAS,GAAG;AAAE,eAASF;AAAX,KAAhB;AACA,SAAKrS,OAAL,CAAayH,aAAb,CAA2B,sBAA3B,EAAmD8K,SAAnD,EAA8D,KAAK/R,SAAnE,EAA8E,IAA9E,EAAoF,KAApF,EACKkH,IADL,CACWC,GAAD,IAAS;AACf,UAAI,KAAKlC,QAAL,IAAiB,QAArB,EAA+B;AAC3B,YAAI,KAAKuB,YAAL,CAAkB,KAAKhG,MAAvB,KAAkC,EAAtC,EAA0C;AACtC,cAAIqQ,KAAK,GAAG;AACR,yBAAa,KAAKxQ,SADV;AAER,4BAAgB,KAAKF,WAFb;AAGR,uBAAW,KAAKsB;AAHR,WAAZ;AAKA,eAAKjC,OAAL,CAAayH,aAAb,CAA2B,mBAA3B,EAAgD4J,KAAhD,EAAuD,mCAAvD,EAA4F,IAA5F,EAAkG,KAAlG,EACI3J,IADJ,CACUC,GAAD,IAAS;AACd;AACA;AACA;AACA;AACAqB,YAAAA,UAAU,CAAC,MAAM;AACb,kBAAI6Q,UAAU,GAAG,KAAKpU,QAAL,IAAiB,MAAjB,GAA0B,EAA1B,GAA+B,KAAKA,QAAL,IAAiB,QAAjB,GAA4B,MAA5B,GAAqC,EAArF;AACA,mBAAKjE,UAAL,GAAkB,IAAlB;AACA,mBAAKyH,SAAL,GAAiB;AAAEC,gBAAAA,IAAI,EAAG,gCAAT;AAA0C,yBAAU,YAApD;AAAiE,yBAAU,GAAE,KAAKpI,UAAW,EAA7F;AAAgGqI,gBAAAA,MAAM,EAAE,KAAK3H,UAA7G;AAAyHsY,gBAAAA,IAAI,EAAED;AAA/H,eAAjB;AACH,aAJS,EAIP,CAJO,CAAV;AAKH,WAXD;AAYH,SAlBD,MAmBK;AACD,eAAKpT,YAAL,CAAkB,CAAlB,EAAqB,KAAKxF,MAA1B,EAAkC,EAAlC;AACH;AACJ,OAvBD,MAwBK,IAAI,KAAKwE,QAAL,IAAiB,MAArB,EAA6B;AAC9B,YAAIsU,GAAJ;AACAA,QAAAA,GAAG,GAAG,KAAK/S,YAAL,CAAkB,KAAK/F,MAAvB,KAAkC,EAAlC,GAAuC,kCAAvC,GAA4E,8BAAlF;AACA+H,QAAAA,UAAU,CAAC,MAAM;AACb,cAAI6Q,UAAU,GAAG,KAAKpU,QAAL,IAAiB,MAAjB,GAA0B,EAA1B,GAA+B,KAAKA,QAAL,IAAiB,QAAjB,GAA4B,MAA5B,GAAqC,EAArF;AACA,eAAKjE,UAAL,GAAkB,IAAlB;AACA,eAAKyH,SAAL,GAAiB;AAAEC,YAAAA,IAAI,EAAE6Q,GAAR;AAAa,qBAAU,YAAvB;AAAoC,qBAAU,GAAE,KAAKjZ,UAAW,EAAhE;AAAmEqI,YAAAA,MAAM,EAAE,KAAK3H,UAAhF;AAA4FsY,YAAAA,IAAI,EAAED;AAAlG,WAAjB;AACH,SAJS,EAIP,CAJO,CAAV;AAKH;;AACD,UAAIlS,GAAJ,EAAS;AACL,aAAKlG,YAAL,GAAoB,EAApB;AACA,aAAKsN,4BAAL,CAAkC,KAAKlO,SAAvC;AACH;AACJ,KAvCD,EAuCIuU,GAAD,IAAS;AACRxH,MAAAA,OAAO,CAAC8J,GAAR,CAAY,qCAAZ;AACH,KAzCD;AA0CH;;AACDsC,EAAAA,UAAU,GAAG;AACT,SAAKxY,UAAL,GAAkB,KAAlB;AACA,SAAKjB,mBAAL,CAAyByQ,OAAzB,CAAiC;AAC7BC,MAAAA,OAAO,EAAE,iDADoB;AAC+BC,MAAAA,MAAM,EAAE,cADvC;AACuDC,MAAAA,IAAI,EAAE,4BAD7D;AAE7BC,MAAAA,MAAM,EAAE,MAAM;AACV,aAAK,IAAI0F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpV,WAAL,CAAiB+H,MAArC,EAA6CqN,CAAC,EAA9C,EAAkD;AAC9C,eAAKrT,SAAL,GAAiB,KAAKA,SAAL,GAAiBkH,UAAU,CAAC,KAAKjJ,WAAL,CAAiBoV,CAAjB,EAAoB3H,QAArB,CAA5C;;AACA,cAAI,KAAKnP,OAAL,CAAagH,YAAb,CAA0B,KAAKtF,WAAL,CAAiBoV,CAAjB,EAAoBpW,UAA9C,KAA6D,EAAjE,EAAqE;AACjE,gBAAI6L,OAAO,GAAG;AACVJ,cAAAA,KAAK,EAAE;AACHC,gBAAAA,GAAG,EAAE;AACDuL,kBAAAA,iBAAiB,EAAE;AACfjX,oBAAAA,UAAU,EAAE,KAAKgB,WAAL,CAAiBoV,CAAjB,EAAoBpW;AADjB;AADlB;AADF;AADG,aAAd;AASA,iBAAKV,OAAL,CAAayH,aAAb,CAA2B,sBAA3B,EAAmD8E,OAAnD,EAA4D,KAAK/L,SAAjE,EAA4E,IAA5E,EAAkF,KAAlF,EACIkH,IADJ,CACUkQ,YAAD,IAAkB;AACvB,mBAAKnW,YAAL,GAAoB,KAAKA,YAAL,CAAkBuN,MAAlB,CAA0BiL,GAAD,IAAS;AAClD,uBAAO,KAAKvY,WAAL,CAAiBqP,OAAjB,CAAyBkJ,GAAzB,MAAkC,CAAC,CAA1C;AACH,eAFmB,CAApB;AAGA,mBAAKvY,WAAL,GAAmB,EAAnB;AACAsH,cAAAA,UAAU,CAAC,MAAM;AACb,qBAAKxH,UAAL,GAAkB,IAAlB;AACA,qBAAKyH,SAAL,GAAiB;AAAEC,kBAAAA,IAAI,EAAE,0BAAR;AAAoCC,kBAAAA,MAAM,EAAE,KAAK3H;AAAjD,iBAAjB;AACH,eAHS,EAGP,CAHO,CAAV;AAIH,aAVD;AAWH,WArBD,MAsBK;AACD,iBAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBuN,MAAlB,CAA0BiL,GAAD,IAAS;AAClD,qBAAO,KAAKvY,WAAL,CAAiBqP,OAAjB,CAAyBkJ,GAAzB,MAAkC,CAAC,CAA1C;AACH,aAFmB,CAApB;AAGA,iBAAKvY,WAAL,CAAiBkG,OAAjB,CAA0B0H,CAAD,IAAO;AAC5B,kBAAIA,CAAC,CAAC5O,UAAF,IAAgB,EAApB,EAAwB;AACpB,qBAAKgB,WAAL,CAAiBoP,MAAjB,CAAwB,KAAKpP,WAAL,CAAiBqP,OAAjB,CAAyBzB,CAAzB,CAAxB,EAAqD,CAArD;AACH;AACJ,aAJD;AAKH;AACJ;AACJ,OAtC4B;AAuC7BiC,MAAAA,MAAM,EAAE,MAAM,CAAG;AAvCY,KAAjC;AAyCH;;AACD2I,EAAAA,cAAc,CAACzL,GAAD,EAAM;AAChB,QAAIA,GAAG,IAAI,CAAP,IAAY,KAAKxM,OAAL,IAAgB,EAA5B,IAAkCwM,GAAG,IAAI,CAAP,IAAY,KAAKxM,OAAL,IAAgB,EAA9D,IAAoEwM,GAAG,IAAI,CAAP,IAAY,KAAKxM,OAAL,IAAgB,EAAhG,IAAsGwM,GAAG,IAAI,CAAP,IAAY,KAAKxM,OAAL,IAAgB,EAAtI,EAA0I;AACtI,WAAKC,YAAL,GAAoB,IAApB;AACA,aAAO,IAAP;AACH,KAHD,MAIK;AACD,aAAO,KAAP;AACH;AACJ;;AACDuE,EAAAA,YAAY,CAAC0T,QAAD,EAAWC,MAAX,EAAmBnY,OAAnB,EAA4B;AACpC,SAAKT,UAAL,GAAkB,KAAlB;;AACA,QAAI,KAAK0Y,cAAL,CAAoBC,QAApB,CAAJ,EAAmC;AAC/BnR,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAE,sBAAR;AAAgCC,UAAAA,MAAM,EAAE,KAAK3H;AAA7C,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV;AAIA;AACH;;AACD,QAAIyL,IAAI,GAAG;AACP,gCAA0B;AACtBoN,QAAAA,gBAAgB,EAAEF,QADI;AAEtBG,QAAAA,UAAU,EAAE,KAAK3Z,WAFK;AAGtB4Z,QAAAA,OAAO,EAAE,KAAKtY;AAHQ;AADnB,KAAX;AAOA,SAAKT,UAAL,GAAkB,KAAlB;AACA,QAAIgZ,OAAO,GAAGL,QAAQ,IAAI,CAAZ,GAAgB,6BAAhB,GAAgDA,QAAQ,IAAI,CAAZ,GAAgB,sCAAhB,GAC1DA,QAAQ,IAAI,CAAZ,GAAgB,6BAAhB,GAAgDA,QAAQ,IAAI,CAAZ,GAAgB,6BAAhB,GAAgDA,QAAQ,IAAI,CAAZ,GAAgB,4BAAhB,GAA+C,EADnJ;;AAEA,QAAIM,KAAK,GAAG,IAAZ;;AACAvQ,IAAAA,CAAC,CAAC0F,MAAF,CAASI,QAAT,CAAkBvJ,YAAlB,CAA+B,KAAKzF,MAApC,EAA4CiM,IAA5C,EAAkD;AAAEyN,MAAAA,QAAQ,EAAE;AAAZ,KAAlD,EAAuExK,IAAvE,CAA4E,MAAM;AAC9ElH,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKxH,UAAL,GAAkB,IAAlB;AACA,aAAKyH,SAAL,GAAiB;AAAEC,UAAAA,IAAI,EAAEsR,OAAR;AAAiBrR,UAAAA,MAAM,EAAE,KAAK3H,UAA9B;AAA0CsY,UAAAA,IAAI,EAAE;AAAhD,SAAjB;AACH,OAHS,EAGP,CAHO,CAAV,CAD8E,CAK9E;AACH,KAND;AAOH;;AACDa,EAAAA,SAAS,CAACP,MAAD,EAAS;AACd,SAAKjZ,QAAL,GAAgB,MAAhB;;AACA,QAAIiZ,MAAM,IAAI,iBAAd,EAAiC;AAC7B,WAAK9Z,MAAL,CAAYsa,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACH,KAFD,MAGK,IAAIR,MAAM,IAAI,MAAd,EAAsB;AACvB9Q,MAAAA,MAAM,CAACuR,KAAP;AACH,KAFI,MAGA,CACJ;AACJ;;AACK9R,EAAAA,kBAAkB,CAAC0F,GAAD,EAAM;AAAA;;AAAA;AAC1B,UAAIiB,MAAM,GAAG;AAAE7O,QAAAA,SAAS,EAAE4N,GAAb;AAAkB3G,QAAAA,aAAa,EAAE;AAAjC,OAAb;AACA,YAAM,MAAI,CAAC9H,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDiI,MAAvD,EAA+D,MAAI,CAAClP,SAApE,EAA+E,IAA/E,EAAqF,KAArF,EACDkH,IADC,CACKC,GAAD,IAAS;AACf,QAAA,MAAI,CAAC7B,UAAL,GAAkB6B,GAAlB;AACH,OAHK,CAAN;AAIA,UAAImT,OAAO,GAAG;AAAEja,QAAAA,SAAS,EAAE4N,GAAb;AAAkB3G,QAAAA,aAAa,EAAE;AAAjC,OAAd;AACA,YAAM,MAAI,CAAC9H,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDqT,OAAvD,EAAgE,MAAI,CAACta,SAArE,EAAgF,IAAhF,EAAsF,KAAtF,EACDkH,IADC,CACKC,GAAD,IAAS;AACf,QAAA,MAAI,CAAC5B,WAAL,GAAmB4B,GAAnB;AACH,OAHK,CAAN;AAIAqB,MAAAA,UAAU,CAAC,MAAM;AACb,QAAA,MAAI,CAACL,4BAAL,CAAkC8F,GAAlC;AACH,OAFS,EAEP,GAFO,CAAV;AAX0B;AAc7B;;AACKvI,EAAAA,sBAAsB,GAAG;AAAA;;AAAA;AAC3B,UAAIwJ,MAAM,GAAG;AAAE7O,QAAAA,SAAS,EAAE,EAAb;AAAiBiH,QAAAA,aAAa,EAAE;AAAhC,OAAb;AACA,YAAM,MAAI,CAAC9H,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDiI,MAAvD,EAA+D,MAAI,CAAClP,SAApE,EAA+E,IAA/E,EAAqF,KAArF,EACDkH,IADC,CACKC,GAAD,IAAS;AACf,QAAA,MAAI,CAAC/B,eAAL,GAAuB+B,GAAvB;AACH,OAHK,CAAN;AAIA,UAAImT,OAAO,GAAG;AAAEja,QAAAA,SAAS,EAAE,EAAb;AAAiBiH,QAAAA,aAAa,EAAE;AAAhC,OAAd;AACA,YAAM,MAAI,CAAC9H,OAAL,CAAayH,aAAb,CAA2B,0BAA3B,EAAuDqT,OAAvD,EAAgE,MAAI,CAACta,SAArE,EAAgF,IAAhF,EAAsF,KAAtF,EACDkH,IADC,CACKC,GAAD,IAAS;AACf,QAAA,MAAI,CAAC9B,gBAAL,GAAwB8B,GAAxB;AACH,OAHK,CAAN;AAP2B;AAW9B;;AACKsK,EAAAA,wBAAwB,GAAG;AAAA;;AAAA;AAC7B,MAAA,MAAI,CAAC9O,WAAL,CAAiByE,OAAjB,CAA0B0H,CAAD,IAAO;AAC5BA,QAAAA,CAAC,CAACxJ,UAAF,GAAe,EAAf;;AACA,YAAI,MAAI,CAACkB,YAAL,CAAkBsI,CAAC,CAAClE,UAApB,KAAmC,EAAvC,EAA2C;AACvC,UAAA,MAAI,CAACxF,eAAL,CAAqBgC,OAArB,CAA8BwH,EAAD,IAAQ;AACjCE,YAAAA,CAAC,CAACxJ,UAAF,CAAaoH,IAAb,CAAkB;AACdmM,cAAAA,UAAU,EAAEjK,EAAE,CAACiK,UADD;AACanO,cAAAA,YAAY,EAAEkE,EAAE,CAAClE,YAD9B;AAC4CF,cAAAA,aAAa,EAAEoE,EAAE,CAACpE,aAD9D;AAC6EC,cAAAA,aAAa,EAAEmE,EAAE,CAACnE,aAD/F;AAC8G8P,cAAAA,SAAS,EAAE3L,EAAE,CAAC2L,SAD5H;AAEdC,cAAAA,SAAS,EAAE5L,EAAE,CAAC4L,SAFA;AAEWC,cAAAA,oBAAoB,EAAE7L,EAAE,CAAC6L,oBAFpC;AAE0DC,cAAAA,WAAW,EAAE9L,EAAE,CAAC8L,WAAH,CAAe,CAAf,CAFvE;AAE0FC,cAAAA,UAAU,EAAE/L,EAAE,CAAC+L,UAFzG;AAEqHC,cAAAA,UAAU,EAAEhM,EAAE,CAACgM,UAAH,CAAc,CAAd,CAFjI;AAGdC,cAAAA,aAAa,EAAEjM,EAAE,CAACiM,aAAH,CAAiB,CAAjB,CAHD;AAGsBC,cAAAA,YAAY,EAAElM,EAAE,CAACkM,YAHvC;AAGqDC,cAAAA,UAAU,EAAEnM,EAAE,CAACmM,UAHpE;AAGgFnQ,cAAAA,UAAU,EAAEgE,EAAE,CAAChE,UAH/F;AAG2GvK,cAAAA,SAAS,EAAEuO,EAAE,CAACvO,SAHzH;AAGoIuY,cAAAA,SAAS,EAAEhK,EAAE,CAACgK,SAHlJ;AAIdrF,cAAAA,WAAW,EAAE3E,EAAE,CAAC2E,WAJF;AAIejM,cAAAA,aAAa,EAAEsH,EAAE,CAACtH,aAAH,CAAiB,CAAjB,CAJ9B;AAImDC,cAAAA,cAAc,EAAEqH,EAAE,CAACrH,cAJtE;AAIsFyT,cAAAA,OAAO,EAAEpM,EAAE,CAACoM,OAJlG;AAI2GC,cAAAA,WAAW,EAAErM,EAAE,CAACqM,WAAH,CAAe,CAAf,CAJxH;AAI2IC,cAAAA,aAAa,EAAEtM,EAAE,CAACsM,aAAH,CAAiB,CAAjB;AAJ1J,aAAlB;AAMH,WAPD;AAQH;;AACD,YAAI,MAAI,CAAC1U,YAAL,CAAkBsI,CAAC,CAAClE,UAApB,KAAmC,EAAvC,EAA2C;AACvC,UAAA,MAAI,CAACtF,UAAL,CAAgB8B,OAAhB,CAAyBwH,EAAD,IAAQ;AAC5B,gBAAIE,CAAC,CAAClE,UAAF,IAAgB,MAAI,CAACpE,YAAL,CAAkBoI,EAAE,CAAChE,UAArB,CAApB,EAAsD;AAClDkE,cAAAA,CAAC,CAACxJ,UAAF,CAAaoH,IAAb,CAAkB;AACdmM,gBAAAA,UAAU,EAAEjK,EAAE,CAACiK,UADD;AACanO,gBAAAA,YAAY,EAAEkE,EAAE,CAAClE,YAD9B;AAC4CF,gBAAAA,aAAa,EAAEoE,EAAE,CAACpE,aAD9D;AAC6EC,gBAAAA,aAAa,EAAEmE,EAAE,CAACnE,aAD/F;AAC8G8P,gBAAAA,SAAS,EAAE3L,EAAE,CAAC2L,SAD5H;AAEdC,gBAAAA,SAAS,EAAE5L,EAAE,CAAC4L,SAFA;AAEWC,gBAAAA,oBAAoB,EAAE7L,EAAE,CAAC6L,oBAFpC;AAE0DC,gBAAAA,WAAW,EAAE9L,EAAE,CAAC8L,WAAH,CAAe,CAAf,CAFvE;AAE0FC,gBAAAA,UAAU,EAAE/L,EAAE,CAAC+L,UAFzG;AAEqHC,gBAAAA,UAAU,EAAEhM,EAAE,CAACgM,UAAH,CAAc,CAAd,CAFjI;AAGdC,gBAAAA,aAAa,EAAEjM,EAAE,CAACiM,aAAH,CAAiB,CAAjB,CAHD;AAGsBC,gBAAAA,YAAY,EAAElM,EAAE,CAACkM,YAHvC;AAGqDC,gBAAAA,UAAU,EAAEnM,EAAE,CAACmM,UAHpE;AAGgFnQ,gBAAAA,UAAU,EAAEgE,EAAE,CAAChE,UAH/F;AAG2GvK,gBAAAA,SAAS,EAAEuO,EAAE,CAACvO,SAHzH;AAGoIuY,gBAAAA,SAAS,EAAEhK,EAAE,CAACgK,SAHlJ;AAIdrF,gBAAAA,WAAW,EAAE3E,EAAE,CAAC2E,WAJF;AAIejM,gBAAAA,aAAa,EAAEsH,EAAE,CAACtH,aAAH,CAAiB,CAAjB,CAJ9B;AAImDC,gBAAAA,cAAc,EAAEqH,EAAE,CAACrH,cAJtE;AAIsFyT,gBAAAA,OAAO,EAAEpM,EAAE,CAACoM,OAJlG;AAI2GC,gBAAAA,WAAW,EAAErM,EAAE,CAACqM,WAAH,CAAe,CAAf,CAJxH;AAI2IC,gBAAAA,aAAa,EAAEtM,EAAE,CAACsM,aAAH,CAAiB,CAAjB;AAJ1J,eAAlB;AAMH;AACJ,WATD;AAUH;AACJ,OAxBD;AAD6B;AA0BhC;;AACKxJ,EAAAA,yBAAyB,GAAG;AAAA;;AAAA;AAC9B,MAAA,MAAI,CAAC9O,YAAL,CAAkBwE,OAAlB,CAA2B0H,CAAD,IAAO;AAC7BA,QAAAA,CAAC,CAACwC,WAAF,GAAgB,EAAhB;;AACA,YAAI,MAAI,CAAC9K,YAAL,CAAkBsI,CAAC,CAAClE,UAApB,KAAmC,EAAvC,EAA2C;AACvC,UAAA,MAAI,CAACvF,gBAAL,CAAsB+B,OAAtB,CAA+BwH,EAAD,IAAQ;AAClCE,YAAAA,CAAC,CAACwC,WAAF,CAAc5E,IAAd,CAAmB;AACfmM,cAAAA,UAAU,EAAEjK,EAAE,CAACiK,UADA;AACYnO,cAAAA,YAAY,EAAEkE,EAAE,CAAClE,YAD7B;AAC2CF,cAAAA,aAAa,EAAEoE,EAAE,CAACpE,aAD7D;AAC4EC,cAAAA,aAAa,EAAEmE,EAAE,CAACnE,aAD9F;AAC6G8P,cAAAA,SAAS,EAAE3L,EAAE,CAAC2L,SAD3H;AAEfC,cAAAA,SAAS,EAAE5L,EAAE,CAAC4L,SAFC;AAEUC,cAAAA,oBAAoB,EAAE7L,EAAE,CAAC6L,oBAFnC;AAEyDC,cAAAA,WAAW,EAAE9L,EAAE,CAAC8L,WAAH,CAAe,CAAf,CAFtE;AAEyFC,cAAAA,UAAU,EAAE/L,EAAE,CAAC+L,UAFxG;AAEoHC,cAAAA,UAAU,EAAEhM,EAAE,CAACgM,UAAH,CAAc,CAAd,CAFhI;AAGfC,cAAAA,aAAa,EAAEjM,EAAE,CAACiM,aAAH,CAAiB,CAAjB,CAHA;AAGqBC,cAAAA,YAAY,EAAElM,EAAE,CAACkM,YAHtC;AAGoDC,cAAAA,UAAU,EAAEnM,EAAE,CAACmM,UAHnE;AAG+EnQ,cAAAA,UAAU,EAAEgE,EAAE,CAAChE,UAH9F;AAG0GvK,cAAAA,SAAS,EAAEuO,EAAE,CAACvO,SAHxH;AAGmIuY,cAAAA,SAAS,EAAEhK,EAAE,CAACgK,SAHjJ;AAIfrF,cAAAA,WAAW,EAAE3E,EAAE,CAAC2E,WAJD;AAIcjM,cAAAA,aAAa,EAAEsH,EAAE,CAACtH,aAAH,CAAiB,CAAjB,CAJ7B;AAIkDC,cAAAA,cAAc,EAAEqH,EAAE,CAACrH,cAJrE;AAIqFyT,cAAAA,OAAO,EAAEpM,EAAE,CAACoM,OAJjG;AAI0GC,cAAAA,WAAW,EAAErM,EAAE,CAACqM,WAAH,CAAe,CAAf,CAJvH;AAI0IC,cAAAA,aAAa,EAAEtM,EAAE,CAACsM,aAAH,CAAiB,CAAjB;AAJzJ,aAAnB;AAMH,WAPD;AAQH;;AACD,YAAI,MAAI,CAAC1U,YAAL,CAAkBsI,CAAC,CAAClE,UAApB,KAAmC,EAAvC,EAA2C;AACvC,UAAA,MAAI,CAACrF,WAAL,CAAiB6B,OAAjB,CAA0BwH,EAAD,IAAQ;AAC7B,gBAAIE,CAAC,CAAClE,UAAF,IAAgB,MAAI,CAACpE,YAAL,CAAkBoI,EAAE,CAAChE,UAArB,CAApB,EAAsD;AAClDkE,cAAAA,CAAC,CAACwC,WAAF,CAAc5E,IAAd,CAAmB;AACfmM,gBAAAA,UAAU,EAAEjK,EAAE,CAACiK,UADA;AACYnO,gBAAAA,YAAY,EAAEkE,EAAE,CAAClE,YAD7B;AAC2CF,gBAAAA,aAAa,EAAEoE,EAAE,CAACpE,aAD7D;AAC4EC,gBAAAA,aAAa,EAAEmE,EAAE,CAACnE,aAD9F;AAC6G8P,gBAAAA,SAAS,EAAE3L,EAAE,CAAC2L,SAD3H;AAEfC,gBAAAA,SAAS,EAAE5L,EAAE,CAAC4L,SAFC;AAEUC,gBAAAA,oBAAoB,EAAE7L,EAAE,CAAC6L,oBAFnC;AAEyDC,gBAAAA,WAAW,EAAE9L,EAAE,CAAC8L,WAAH,CAAe,CAAf,CAFtE;AAEyFC,gBAAAA,UAAU,EAAE/L,EAAE,CAAC+L,UAFxG;AAEoHC,gBAAAA,UAAU,EAAEhM,EAAE,CAACgM,UAAH,CAAc,CAAd,CAFhI;AAGfC,gBAAAA,aAAa,EAAEjM,EAAE,CAACiM,aAAH,CAAiB,CAAjB,CAHA;AAGqBC,gBAAAA,YAAY,EAAElM,EAAE,CAACkM,YAHtC;AAGoDC,gBAAAA,UAAU,EAAEnM,EAAE,CAACmM,UAHnE;AAG+EnQ,gBAAAA,UAAU,EAAEgE,EAAE,CAAChE,UAH9F;AAG0GvK,gBAAAA,SAAS,EAAEuO,EAAE,CAACvO,SAHxH;AAGmIuY,gBAAAA,SAAS,EAAEhK,EAAE,CAACgK,SAHjJ;AAIfrF,gBAAAA,WAAW,EAAE3E,EAAE,CAAC2E,WAJD;AAIcjM,gBAAAA,aAAa,EAAEsH,EAAE,CAACtH,aAAH,CAAiB,CAAjB,CAJ7B;AAIkDC,gBAAAA,cAAc,EAAEqH,EAAE,CAACrH,cAJrE;AAIqFyT,gBAAAA,OAAO,EAAEpM,EAAE,CAACoM,OAJjG;AAI0GC,gBAAAA,WAAW,EAAErM,EAAE,CAACqM,WAAH,CAAe,CAAf,CAJvH;AAI0IC,gBAAAA,aAAa,EAAEtM,EAAE,CAACsM,aAAH,CAAiB,CAAjB;AAJzJ,eAAnB;AAMH;AACJ,WATD;AAUH;AACJ,OAxBD;AAD8B;AA0BjC;;AACD1U,EAAAA,YAAY,CAACiG,IAAD,EAAO;AACf,QAAIA,IAAI,IAAIsK,SAAR,IAAqBtK,IAAI,IAAI,IAA7B,IAAqCA,IAAI,IAAI,EAAjD,EAAqD;AACjD,aAAOA,IAAP;AACH,KAFD,MAGK;AACD,aAAO,EAAP;AACH;AACJ;;AA3yD2D,CAAhE;;AA6yDA9N,UAAU,CAAC,CACPG,SAAS,CAACK,uBAAD,CADF,CAAD,EAEPG,yBAAyB,CAAC6b,SAFnB,EAE8B,UAF9B,EAE0C,KAAK,CAF/C,CAAV;;AAGAxc,UAAU,CAAC,CACPG,SAAS,CAACO,gBAAD,CADF,CAAD,EAEPC,yBAAyB,CAAC6b,SAFnB,EAE8B,SAF9B,EAEyC,KAAK,CAF9C,CAAV;;AAGAxc,UAAU,CAAC,CACPG,SAAS,CAACI,iBAAD,CADF,CAAD,EAEPI,yBAAyB,CAAC6b,SAFnB,EAE8B,UAF9B,EAE0C,KAAK,CAF/C,CAAV;;AAGAxc,UAAU,CAAC,CACPG,SAAS,CAACM,gBAAD,CADF,CAAD,EAEPE,yBAAyB,CAAC6b,SAFnB,EAE8B,SAF9B,EAEyC,KAAK,CAF9C,CAAV;;AAGAxc,UAAU,CAAC,CACPE,KAAK,EADE,CAAD,EAEPS,yBAAyB,CAAC6b,SAFnB,EAE8B,gBAF9B,EAEgD,KAAK,CAFrD,CAAV;;AAGAxc,UAAU,CAAC,CACPE,KAAK,EADE,CAAD,EAEPS,yBAAyB,CAAC6b,SAFnB,EAE8B,WAF9B,EAE2C,KAAK,CAFhD,CAAV;;AAGA7b,yBAAyB,GAAGX,UAAU,CAAC,CACnCC,SAAS,CAAC;AACNwc,EAAAA,QAAQ,EAAE,wBADJ;AAENC,EAAAA,WAAW,EAAE,qCAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,oCAAD,CAHL;AAINC,EAAAA,SAAS,EAAE,CAACvc,mBAAD,EAAsBC,cAAtB;AAJL,CAAD,CAD0B,CAAD,EAOnCK,yBAPmC,CAAtC;AAQA,SAASA,yBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, Input, ViewChild } from '@angular/core';\r\nimport { Validators } from '@angular/forms';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { Chapter2Component } from './chapter2/chapter2.component';\r\nimport { CoveringLetterComponent } from './covering-letter/covering-letter.component';\r\nimport { Table12Component } from './table12/table12.component';\r\nimport { Table4gComponent } from './table4g/table4g.component';\r\nlet CreateNewRequestComponent = class CreateNewRequestComponent {\r\n    constructor(service, datepipe, fb, activatedRoute, location, menuComp, router, confirmationService) {\r\n        this.service = service;\r\n        this.datepipe = datepipe;\r\n        this.fb = fb;\r\n        this.activatedRoute = activatedRoute;\r\n        this.location = location;\r\n        this.menuComp = menuComp;\r\n        this.router = router;\r\n        this.confirmationService = confirmationService;\r\n        this.namespace = \"http://schemas.cordys.com/FD_HL_WSPackage\";\r\n        this.displayPopup = 'none';\r\n        this.DOC_REF_NO = '';\r\n        this.loginUserID = '';\r\n        this.isSubmitted = false;\r\n        this.HR_REF_NO = '';\r\n        this.REQUEST_NO = '';\r\n        this.instance_id = '';\r\n        this.taskId = '';\r\n        this.openAs = '';\r\n        this.actRole = '';\r\n        this.actStage = '';\r\n        this.AAHPopup = 'none';\r\n        this.AAHArr = [];\r\n        this.engineVarient = [];\r\n        this.dis2 = false;\r\n        this.call_modal = false;\r\n        this.documentsArr = [];\r\n        this.checkedRows = [];\r\n        this.maindocArr = [];\r\n        this.ENGINE_FAMILY_NO_Arr = [];\r\n        this.ReportName = [];\r\n        this.isSubmitted1 = false;\r\n        this.routeName = '';\r\n        this.CLONE_REQUEST_NO = '';\r\n        this.remarks = '';\r\n        this.remarkSubmit = false;\r\n        this.loginUserName = '';\r\n        this.anexureArr = [];\r\n        this.reguTable12 = '';\r\n        this.reguCovering = '';\r\n        this.reguTable4G = '';\r\n        this.reguChapter2 = '';\r\n        this.OpenAs = '';\r\n        // certfileUploadDoc1: any;\r\n        this.parrentInd = 0;\r\n        this.childInd = 0;\r\n        this.coveringWordDoc = '';\r\n        this.table12WordDoc = '';\r\n        this.ARAITrue = true;\r\n        this.engineFamilyDataArr = [];\r\n        this.procesStatus = '';\r\n        this.emisionComplaince = '';\r\n        // idArr: any = [];\r\n        this.nameArr = [];\r\n        this.variantsArr = [];\r\n        this.variantsArr1 = [];\r\n        // idArrStr: string = ''\r\n        this.nameArrStr = '';\r\n        this.table4gVar = [];\r\n        this.chapter2Var = [];\r\n        this.HRV_REF_NOArr = [];\r\n        this.initValue = 0;\r\n        this.gridDocSize = 0;\r\n        this.mainDocSpinner = false;\r\n        this.certdocumentsArr = [];\r\n        this.certDocSize = 0;\r\n        this.certSpinner = false;\r\n        this.repdocumentsArr = [];\r\n        this.repDocSize = 0;\r\n        this.repSpinner = false;\r\n        this.appdocumentsArr = [];\r\n        this.appDocSize = 0;\r\n        this.appSpinner = false;\r\n        this.dradocumentsArr = [];\r\n        this.dragDocSize = 0;\r\n        this.dragSpinner = false;\r\n        this.invdocumentsArr = [];\r\n        this.invDocSize = 0;\r\n        this.invSpinner = false;\r\n        this.docSubmit = false;\r\n        this.createRequestForm = this.fb.group({\r\n            LOCATION: ['Domestic', Validators.required],\r\n            CERTIFICATION_TYPE: ['', Validators.required],\r\n            ENGINE_FAMILY_NO: ['', Validators.required],\r\n            WBS: ['', Validators.required],\r\n            COST_CENTER: ['', Validators.required],\r\n            ARAI: [''],\r\n            APEX: ['']\r\n        });\r\n        this.coverLetterObj = {};\r\n        this.table12Obj = {};\r\n        this.valid = false;\r\n        this.saveType = '';\r\n        this.isSaveSubm = false;\r\n        this.newREQUEST_NO = '';\r\n        this.Table12EmptyArr = [];\r\n        this.chapter2EmptyArr = [];\r\n        this.Table12Arr = [];\r\n        this.chapter2Arr = [];\r\n        this.getEngineFamily();\r\n        this.loadPage();\r\n        this.callReqManagementEmpty();\r\n        this.service.lovMasaterList.subscribe((lovMasaterList) => {\r\n        });\r\n        this.service.loginUserID.subscribe((loginUserID) => {\r\n            this.loginUserID = loginUserID;\r\n        });\r\n        this.service.loginUserName.subscribe((loginUserName) => {\r\n            this.loginUserName = loginUserName;\r\n        });\r\n        this.subscription = this.service.createPageEvents.subscribe((call) => {\r\n            switch (call) {\r\n                case 'save':\r\n                    this.saveDetails('save');\r\n                    break;\r\n                case 'submit':\r\n                    this.saveDetails('submit');\r\n                    break;\r\n                case 'obsolete':\r\n                    this.completeTask(4, this.openAs, '');\r\n                    break;\r\n                case 'clear':\r\n                    this.clear();\r\n                    break;\r\n                case 'seekClarification':\r\n                    this.service.OpenAs.next(false);\r\n                    this.completeTask(0, this.openAs, '');\r\n                    break;\r\n                case 'reject':\r\n                    this.completeTask(3, this.openAs, '');\r\n                    break;\r\n                case 'sentToARAI':\r\n                    this.sentToARAI();\r\n                    break;\r\n                case 'complete':\r\n                    this.saveARAI('complete');\r\n                    break;\r\n                case 'docSave':\r\n                    this.saveARAI('docsave');\r\n                    break;\r\n                case 'clone':\r\n                    this.saveDetails('clone');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.CLONE_REQUEST_NO = this.datavalidate(changes['requestIDClone'].currentValue.REQUEST_NO);\r\n        this.cloneHRNo = this.datavalidate(changes['cloneHRNo'].currentValue);\r\n    }\r\n    ngOnInit() {\r\n        this.getReportName();\r\n        this.getFDHLReportNameAndVersion();\r\n        this.activatedRoute.url.subscribe((urlSegments) => {\r\n            this.routeName = urlSegments[0].path;\r\n        });\r\n    }\r\n    getFDHLReportNameAndVersion() {\r\n        this.service.invokeService(\"GetFDHLReportNameAndVersion\", null, this.namespace, true, false)\r\n            .then((res) => {\r\n            res.forEach((obj) => {\r\n                if (obj.REPORT_REF_ID == 1) {\r\n                    this.reguTable12 = obj.REPORT_VERSION;\r\n                }\r\n                else if (obj.REPORT_REF_ID == 2) {\r\n                    this.reguCovering = obj.REPORT_VERSION;\r\n                }\r\n                else if (obj.REPORT_REF_ID == 3) {\r\n                    this.reguTable4G = obj.REPORT_VERSION;\r\n                }\r\n                else if (obj.REPORT_REF_ID == 4) {\r\n                    this.reguChapter2 = obj.REPORT_VERSION;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    cloneFdHlRequest() {\r\n        this.call_modal = false;\r\n        let obj = {\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            CHR_REF_NO: this.cloneHRNo,\r\n            CLONE_REQUEST_NO: this.CLONE_REQUEST_NO\r\n        };\r\n        this.service.invokeService(\"CloneFdHlRequest\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            var _a, _b, _c, _d;\r\n            this.service.cloneHRNo.next(this.cloneHRNo);\r\n            (_a = this.covering) === null || _a === void 0 ? void 0 : _a.getFDHLCoveringLetterDetails();\r\n            (_b = this.covering) === null || _b === void 0 ? void 0 : _b.getFDHLCLEnClosureDetails();\r\n            (_c = this.table12) === null || _c === void 0 ? void 0 : _c.getData();\r\n            (_d = this.table12) === null || _d === void 0 ? void 0 : _d.getFDHLRequestVariantDetails();\r\n            // this.getFDHLEngineModelsByFamily();\r\n            // this.getFDHLRequestVariantDetails(this.HR_REF_NO);\r\n            Promise.all([this.getFDHLRequestDetails(this.HR_REF_NO), this.callReqManagement1(this.HR_REF_NO)]).then((res) => {\r\n                // this.table4g?.getData();\r\n                // this.table4g?.getMesurment();\r\n                // this.table4g?.getMode();\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: `New Request Created Successfully`, 'text1': `Request ID`, 'text2': `${this.REQUEST_NO}`, active: this.call_modal };\r\n                }, 0);\r\n            });\r\n        });\r\n    }\r\n    getopenAs() {\r\n        let routerName = window.location.href.split('/')[window.location.href.split('/').length - 1];\r\n        if (routerName.includes('?')) {\r\n            this.OpenAs = routerName.split('?')[1].split('&')[1].split('=')[1];\r\n            if (this.OpenAs == 'customInboxTask' && this.actStage == '2' || this.OpenAs == 'completed' || this.OpenAs == 'dashboard') {\r\n                this.dis2 = true;\r\n                this.service.OpenAs.next(true);\r\n            }\r\n            else {\r\n                this.dis2 = false;\r\n                this.service.OpenAs.next(false);\r\n            }\r\n        }\r\n    }\r\n    getFdHlAnnexureDetailsByFamily() {\r\n        let refId;\r\n        if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\r\n            refId = 3;\r\n        }\r\n        else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\r\n            refId = 4;\r\n        }\r\n        let obj = {\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            REPORT_REF_ID: refId,\r\n            ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value\r\n        };\r\n        this.service.invokeService(\"GetFdHlAnnexureDetailsByFamily\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.anexureArr = res;\r\n        });\r\n    }\r\n    anneUploadFile1(parrent, child) {\r\n        this.parrentInd = parrent;\r\n        this.childInd = child;\r\n        $(\"#certfileUploadDoc1\").click();\r\n    }\r\n    anneUploadFile1Doc1(e) {\r\n        this.call_modal = false;\r\n        let fileName = '';\r\n        let fileExt = '';\r\n        this.certfile = e.target.files[0];\r\n        if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 5) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 5MB !', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        fileName = e.target.files[0].name;\r\n        fileExt = e.target.files[0].name.split('.')[1];\r\n        this.service.uploadFile(\"UploadFDHLDocumnets\", this.certfile, ['png', 'jpg', 'jpeg'], this.namespace, false, false)\r\n            .then((resDocPath) => {\r\n            this.variantsArr[this.parrentInd].Table12Arr[this.childInd].ANNEXURE_NAME = fileName;\r\n            this.variantsArr[this.parrentInd].Table12Arr[this.childInd].ANNEXURE_PATH = resDocPath;\r\n            this.variantsArr[this.parrentInd].Table12Arr[this.childInd].ANNEXURE_EXT = fileExt;\r\n        });\r\n        // this.certfileUploadDoc1=''\r\n        // }\r\n    }\r\n    clear() {\r\n        var _a, _b;\r\n        if (this.datavalidate(this.HR_REF_NO) == '') {\r\n            this.createRequestForm.patchValue({\r\n                LOCATION: '',\r\n                CERTIFICATION_TYPE: '',\r\n                ENGINE_FAMILY_NO: '',\r\n                WBS: '',\r\n                COST_CENTER: ''\r\n            });\r\n            this.remarks = '';\r\n            this.variantsArr = [];\r\n            this.nameArr = [];\r\n        }\r\n        else {\r\n            this.createRequestForm.patchValue({\r\n                WBS: '',\r\n                COST_CENTER: ''\r\n            });\r\n            this.remarks = '';\r\n            (_a = this.covering) === null || _a === void 0 ? void 0 : _a.clear();\r\n            (_b = this.table12) === null || _b === void 0 ? void 0 : _b.clear();\r\n            this.engineVarient.forEach((obj) => {\r\n                var _a, _b;\r\n                if (obj.HRV_REF_NO != '') {\r\n                    if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\r\n                        (_a = this.table4g) === null || _a === void 0 ? void 0 : _a.clear(obj.HRV_REF_NO, obj.VARIANT);\r\n                    }\r\n                    else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\r\n                        (_b = this.chapter2) === null || _b === void 0 ? void 0 : _b.clear(obj.HRV_REF_NO, obj.VARIANT);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onButtonClick(event, type) {\r\n        event.stopPropagation();\r\n        //  if(type='covering'){\r\n        let obj = {\r\n            FDHL_DOC_TYPE: type,\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            HRV_REF_NO: '',\r\n            REPORT_REF_ID: ''\r\n        };\r\n        this.service.invokeService(\"GenerateFDHlWordDocument\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.coveringWordDoc = res[0].generateFDHlWordDocument;\r\n            this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlWordDocument, res[0].generateFDHlWordDocument + \";reportpath\", this.namespace, true, false);\r\n        });\r\n    }\r\n    consolidate() {\r\n        let type = '';\r\n        let refId = 0;\r\n        if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\r\n            type = 'Table 4G';\r\n            refId = 3;\r\n        }\r\n        else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\r\n            type = 'Chapter 2';\r\n            refId = 4;\r\n        }\r\n        let obj = {\r\n            FDHL_DOC_TYPE: type,\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            HRV_REF_NO: '',\r\n            REPORT_REF_ID: refId\r\n        };\r\n        this.service.invokeService(\"GenerateFDHlConsolidateReport\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlConsolidateReport, res[0].generateFDHlConsolidateReport + \";reportpath\", this.namespace, true, false);\r\n        });\r\n    }\r\n    ARAIValid() {\r\n        if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '') {\r\n            this.isSubmitted1 = true;\r\n            this.ARAITrue = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    sentToARAI() {\r\n        this.call_modal = false;\r\n        if (this.ARAIValid()) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { 'text': 'Please Enter ARAI Request Number', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        let dataObj1 = {};\r\n        if (this.datavalidate(this.HR_REF_NO) != '') {\r\n            dataObj1 = {\r\n                tuple: {\r\n                    old: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            HR_REF_NO: this.HR_REF_NO\r\n                        }\r\n                    },\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value),\r\n                            'CURRENT_STAGE': this.actStage,\r\n                            'REMARKS': this.remarks\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj1, this.namespace, true, false)\r\n            .then((res) => {\r\n            let dataObj = {\r\n                HR_REF_NO: this.HR_REF_NO,\r\n                from_User: this.loginUserID,\r\n                to_User: '',\r\n                mailType: 'Send to ARAI',\r\n                stage: this.actStage,\r\n                status: 5,\r\n                taskId: this.taskId,\r\n                remarks: this.remarks\r\n            };\r\n            this.service.invokeService(\"SendFD_HLCustomMailWrapper\", dataObj, this.namespace, true, false)\r\n                .then((res) => {\r\n                // this.ARAIFlag = res[0].sendFD_HLCustomMailWrapper;\r\n                let dataObj = { HR_REF_NO: this.HR_REF_NO };\r\n                this.service.invokeService(\"GetFDHLRequestDetails\", dataObj, this.namespace, true, false).then((res) => {\r\n                    this.procesStatus = res[0].PROCESS_STATUS;\r\n                    this.service.ARAIFlag.next(this.procesStatus);\r\n                });\r\n                this.getFD_HLHistoryDetailsByHR_RefNo();\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { 'text': 'Task Sent to ARAI Successfully', active: this.call_modal };\r\n                }, 0);\r\n            });\r\n        });\r\n    }\r\n    getEngineFamily() {\r\n        let dataObj = { ENGINE_M_REF_ID: '' };\r\n        this.service.invokeService(\"GetFDHLEngineFamilyDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineFamilyDataArr = res;\r\n            res.forEach((data) => {\r\n                this.ENGINE_FAMILY_NO_Arr.push({ RefNo: data.ENGINE_F_REF_ID, ENGINE_FAMILY_NO: data.ENGINE_FAMILY_NO, EMISSION_COMPLIANCE: data.EMISSION_COMPLIANCE });\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a;\r\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\r\n    }\r\n    backBtnLink() {\r\n        if (this.HR_REF_NO != '' && (this.datavalidate(this.openAs) != '')) {\r\n            return true;\r\n        }\r\n        if (this.HR_REF_NO == '') {\r\n            return false;\r\n        }\r\n        if (this.HR_REF_NO != '' && (this.datavalidate(this.openAs) == '')) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    async validTypeApproval() {\r\n        this.call_modal = false;\r\n        var CERTIFICATION_TYPE = this.createRequestForm.controls['CERTIFICATION_TYPE'].value;\r\n        var ENGINE_FAMILY_NO = this.createRequestForm.controls['ENGINE_FAMILY_NO'].value;\r\n        let obj = { ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value };\r\n        try {\r\n            let res = await this.service.invokeService(\"GetFDHLApprovalRequestNo\", obj, this.namespace, true, false);\r\n            if (res.length == 0) {\r\n                if (CERTIFICATION_TYPE == 'Amendment' && ENGINE_FAMILY_NO != '') {\r\n                    setTimeout(() => {\r\n                        this.call_modal = true;\r\n                        this.data_send = { text: 'Please Create Type Approval Request', active: this.call_modal };\r\n                        this.saveType == 'submit' ? '' : this.createRequestForm.patchValue({ CERTIFICATION_TYPE: '' });\r\n                    }, 0);\r\n                    return true;\r\n                }\r\n            }\r\n            else {\r\n                for (let obj of res) {\r\n                    if (CERTIFICATION_TYPE == 'Approval' && (obj.PROCESS_STATUS == '1' || obj.PROCESS_STATUS == '2') && obj.CERTIFICATION_TYPE == 'Approval') {\r\n                        setTimeout(() => {\r\n                            this.call_modal = true;\r\n                            this.data_send = {\r\n                                text: this.datavalidate(obj.REQUEST_NO) + ' is already created',\r\n                                text1: 'For Type Approval with Engine Family No. ' + ENGINE_FAMILY_NO,\r\n                                active: this.call_modal\r\n                            };\r\n                            this.saveType == 'submit' ? '' : this.createRequestForm.patchValue({ CERTIFICATION_TYPE: '' });\r\n                        }, 0);\r\n                        return true;\r\n                    }\r\n                    else if (CERTIFICATION_TYPE == 'Amendment' && obj.PROCESS_STATUS == '2' && obj.CERTIFICATION_TYPE == 'Amendment') {\r\n                        setTimeout(() => {\r\n                            this.call_modal = true;\r\n                            this.data_send = {\r\n                                text: 'Type Amendment is already',\r\n                                text1: 'Inprogress with ' + obj.REQUEST_NO,\r\n                                active: this.call_modal\r\n                            };\r\n                            this.saveType == 'submit' ? '' : this.createRequestForm.patchValue({ CERTIFICATION_TYPE: '' });\r\n                        }, 0);\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n        return false;\r\n    }\r\n    back() {\r\n        let variable = this.OpenAs == 'saved' ? 'saved' :\r\n            this.OpenAs == 'customInboxTask' ? 'inbox' : this.OpenAs == 'completed' ? 'completedTasks' : '';\r\n        this.menuComp.menuHideFun();\r\n        this.location.back();\r\n        // this.router.navigate(['inbox']);\r\n        this.service.routeChange.next(variable);\r\n        this.service.createPageEvents.next('');\r\n        this.service.OpenAs.next(false);\r\n    }\r\n    workflowHistory() {\r\n        this.AAHPopup = 'block';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n    }\r\n    closeWorkFlowDoc() {\r\n        this.AAHPopup = 'none';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"auto\";\r\n    }\r\n    getFD_HLHistoryDetailsByHR_RefNo() {\r\n        let dataObj = { HR_RefNo: this.HR_REF_NO };\r\n        this.service.invokeService(\"GetFD_HLHistoryDetailsByHR_RefNo\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.AAHArr = res;\r\n        });\r\n    }\r\n    async getFDHLRequestDetails(arg) {\r\n        let dataObj = { HR_REF_NO: arg };\r\n        await this.service.invokeService(\"GetFDHLRequestDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            // this.clarificationType = this.datavalidate(res[0].CERTIFICATION_TYPE)\r\n            this.REQUEST_NO = res[0].REQUEST_NO;\r\n            this.procesStatus = res[0].PROCESS_STATUS;\r\n            this.remarks = this.datavalidate(this.actStage) == this.datavalidate(res[0].CURRENT_STAGE) ? res[0].REMARKS : '';\r\n            this.createRequestForm.patchValue({\r\n                LOCATION: this.datavalidate(res[0].LOCATION),\r\n                CERTIFICATION_TYPE: this.datavalidate(res[0].CERTIFICATION_TYPE),\r\n                ENGINE_FAMILY_NO: this.datavalidate(res[0].ENGINE_FAMILY_NO),\r\n                WBS: this.datavalidate(res[0].WBS),\r\n                COST_CENTER: this.datavalidate(res[0].COST_CENTER),\r\n                ARAI: this.datavalidate(res[0].ARAI_NO),\r\n                APEX: this.datavalidate(res[0].APEX_NO),\r\n            });\r\n            // if(this.routeName!='clone'){\r\n            this.getFDHLEngineModelsByFamily();\r\n            this.service.ARAIFlag.next(this.procesStatus);\r\n            // }\r\n        });\r\n    }\r\n    getFD_HLDocDetailsByHR_RefNo(arg) {\r\n        this.documentsArr = [];\r\n        this.certdocumentsArr = [];\r\n        this.repdocumentsArr = [];\r\n        this.appdocumentsArr = [];\r\n        this.dradocumentsArr = [];\r\n        this.invdocumentsArr = [];\r\n        this.initValue = 0;\r\n        this.certDocSize = 0;\r\n        this.repDocSize = 0;\r\n        this.appDocSize = 0;\r\n        this.dragDocSize = 0;\r\n        this.invDocSize = 0;\r\n        let dataObj = { HR_RefNo: arg };\r\n        this.service.invokeService(\"GetFD_HLDocDetailsByHR_RefNo\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            res.filter((doc) => {\r\n                switch (doc.DOC_TYPE) {\r\n                    case 'Main':\r\n                        this.documentsArr.push(doc);\r\n                        this.initValue += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Certificates':\r\n                        this.certdocumentsArr.push(doc);\r\n                        this.certDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Reports':\r\n                        this.repdocumentsArr.push(doc);\r\n                        this.repDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Approved':\r\n                        this.appdocumentsArr.push(doc);\r\n                        this.appDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Drawings':\r\n                        this.dradocumentsArr.push(doc);\r\n                        this.dragDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Invoice':\r\n                        this.invdocumentsArr.push(doc);\r\n                        this.invDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    getFDHLEngineModelsByFamily() {\r\n        this.call_modal = false;\r\n        this.variantsArr = [];\r\n        this.variantsArr1 = [];\r\n        if (this.datavalidate(this.HR_REF_NO) == '') {\r\n            this.callReqManagement1(this.HR_REF_NO);\r\n        }\r\n        let dataObj = { ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value };\r\n        this.service.invokeService(\"GetFDHLEngineModelsByFamily\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineVarient = res;\r\n            this.engineVarient.forEach((d1) => {\r\n                d1.HRV_REF_NO = '';\r\n                d1.isChecked = false;\r\n            });\r\n            this.ENGINE_FAMILY_NO_Arr.forEach((d) => {\r\n                if (d.ENGINE_FAMILY_NO == this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\r\n                    this.emisionComplaince = d.EMISSION_COMPLIANCE;\r\n                }\r\n            });\r\n            if (this.datavalidate(this.openAs) == '') {\r\n                this.validTypeApproval();\r\n            }\r\n            this.isvarientCheck();\r\n            this.getFdHlAnnexureDetailsByFamily();\r\n        });\r\n    }\r\n    isvarientCheck() {\r\n        let check = false;\r\n        if (this.engineVarient == 0) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Please create at least one variant', active: this.call_modal };\r\n            }, 0);\r\n            check = true;\r\n        }\r\n        return check;\r\n    }\r\n    async loadPage() {\r\n        this.activatedRoute.queryParams.subscribe(async (params) => {\r\n            this.HR_REF_NO = params.HR_REF_NO;\r\n            this.taskId = params['taskId'];\r\n            this.openAs = params['openAs'];\r\n            this.service.actStag.next('');\r\n            if (this.taskId) {\r\n                $.cordys.json.defaults.removeNamespacePrefix = true;\r\n                await $.cordys.workflow.getTaskDetails(this.taskId).done((tData) => {\r\n                    // this.taskState = tData.State;\r\n                    this.HR_REF_NO = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.HR_REF_NO;\r\n                    this.actRole = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.ACT_ROLE;\r\n                    this.actStage = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.STAGE;\r\n                    let varObj = this.actRole + ',' + this.actStage;\r\n                    this.service.roleStage.next(varObj);\r\n                    this.service.actStag.next(this.actStage);\r\n                    this.getopenAs();\r\n                });\r\n            }\r\n            if (this.datavalidate(this.HR_REF_NO) != '') {\r\n                let obj = { 'HR_REF_NO': this.HR_REF_NO, 'actRole': this.actRole, 'actStage': this.actStage };\r\n                this.service.sharingData(obj, 'HR_REF_NO');\r\n                this.service.taskPage.next(true);\r\n                this.getFDHLRequestDetails(this.HR_REF_NO);\r\n                this.callReqManagement1(this.HR_REF_NO);\r\n                this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\r\n                this.getFD_HLHistoryDetailsByHR_RefNo();\r\n            }\r\n        });\r\n        this.getopenAs();\r\n    }\r\n    variantSelect(obj) {\r\n        if (!obj.isChecked) {\r\n            // this.idArr.splice(this.idArr.indexOf(obj.LOV_ID), 1)\r\n            this.nameArr.splice(this.nameArr.indexOf(obj.VARIANT), 1);\r\n            if (this.datavalidate(obj.HRV_REF_NO) == '') {\r\n            }\r\n            else {\r\n                this.confirmationService.confirm({\r\n                    message: 'Probably loose the saved data. Do you want to proceed?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                    accept: () => {\r\n                        let param = {\r\n                            'HRV_REF_NO': obj.HRV_REF_NO,\r\n                            'HR_REF_NO': this.HR_REF_NO\r\n                        };\r\n                        this.service.invokeService(\"DeleteFDHLRequestVariant\", param, this.namespace, true, false)\r\n                            .then((res) => {\r\n                            for (let item of this.engineVarient) {\r\n                                if (item.HRV_REF_NO == obj.HRV_REF_NO && obj.HRV_REF_NO != '') {\r\n                                    this.HRV_REF_NOArr.splice(this.HRV_REF_NOArr.indexOf(obj.HRV_REF_NO), 1);\r\n                                    item.HRV_REF_NO = '';\r\n                                    item.isChecked = false;\r\n                                }\r\n                            }\r\n                        });\r\n                    },\r\n                    reject: () => {\r\n                        obj.isChecked = true;\r\n                        this.nameArr.push(obj.VARIANT);\r\n                        let temp = { HRV_REF_NO: obj.HRV_REF_NO, LOV_DESC: obj.VARIANT, Table12Arr: [], Measurment: [], Mode: [{ innerArr: [] }] };\r\n                        let temp1 = { HRV_REF_NO: obj.HRV_REF_NO, LOV_DESC: obj.VARIANT, Table12Arr1: [], Measurment: [], Mode: [{ innerArr: [] }] };\r\n                        this.variantsArr.push(temp);\r\n                        this.variantsArr1.push(temp1);\r\n                        this.nameArrStr = [...new Set(this.nameArr)].toString();\r\n                        this.variantsArr = [...new Set(this.variantsArr)];\r\n                        this.variantsArr1 = [...new Set(this.variantsArr1)];\r\n                        setTimeout(() => {\r\n                            this.getFdHlRequestManagement();\r\n                            this.getFdHlRequestManagement1();\r\n                        }, 0);\r\n                    }\r\n                });\r\n            }\r\n            this.variantsArr.forEach((d) => {\r\n                if (d.LOV_DESC == obj.VARIANT) {\r\n                    this.variantsArr.splice(this.variantsArr.indexOf(d), 1);\r\n                }\r\n            });\r\n            this.variantsArr1.forEach((d1) => {\r\n                if (d1.LOV_DESC == obj.VARIANT) {\r\n                    this.variantsArr1.splice(this.variantsArr1.indexOf(d1), 1);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // this.idArr.push(obj.VARIANT)\r\n            this.nameArr.push(obj.VARIANT);\r\n            let temp = { HRV_REF_NO: obj.HRV_REF_N, LOV_DESC: obj.VARIANT, Table12Arr: [], Measurment: [], Mode: [{ innerArr: [] }] };\r\n            let temp1 = { HRV_REF_NO: obj.HRV_REF_NO, LOV_DESC: obj.VARIANT, Table12Arr1: [], Measurment: [], Mode: [{ innerArr: [] }] };\r\n            this.variantsArr.push(temp);\r\n            this.variantsArr1.push(temp1);\r\n        }\r\n        // this.idArrStr = this.idArr.toString();\r\n        this.nameArrStr = [...new Set(this.nameArr)].toString();\r\n        this.variantsArr = [...new Set(this.variantsArr)];\r\n        this.variantsArr1 = [...new Set(this.variantsArr1)];\r\n        this.getFdHlRequestManagement();\r\n        this.getFdHlRequestManagement1();\r\n    }\r\n    getFDHLRequestVariantDetails(arg) {\r\n        this.HRV_REF_NOArr = [];\r\n        this.nameArr = [];\r\n        var param = { HR_REF_NO: arg };\r\n        this.service.invokeService(\"GetFDHLRequestVariantDetails\", param, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineVarient.filter((d) => {\r\n                res.forEach((d1) => {\r\n                    if (d.VARIANT == d1.VARIANT) {\r\n                        d.HRV_REF_NO = d1.HRV_REF_NO;\r\n                        this.HRV_REF_NOArr.push(d1.HRV_REF_NO);\r\n                        this.nameArr.push(d1.VARIANT);\r\n                        d.isChecked = true;\r\n                        this.variantsArr.push({ HR_REF_NO: d1.HR_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, LOV_DESC: d.VARIANT, Table12Arr: [], Measurment: [], Mode: [{ innerArr: [] }] });\r\n                        this.variantsArr1.push({ HR_REF_NO: d1.HR_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, LOV_DESC: d.VARIANT, Table12Arr1: [], Measurment: [], Mode: [{ innerArr: [] }] });\r\n                    }\r\n                });\r\n            });\r\n            this.getFdHlRequestManagement();\r\n            this.getFdHlRequestManagement1();\r\n        });\r\n    }\r\n    saveVariants() {\r\n        let ParamTuple = [];\r\n        var params = {};\r\n        for (var obj of this.engineVarient) {\r\n            // if(obj.isChecked){\r\n            if (this.datavalidate(obj.HRV_REF_NO) == \"\") {\r\n                params = {\r\n                    'new': {\r\n                        'FD_HL_REQUEST_VARIANTS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'VARIANT': this.datavalidate(obj.VARIANT),\r\n                            'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                params = {\r\n                    'old': {\r\n                        'FD_HL_REQUEST_VARIANTS': {\r\n                            'HRV_REF_NO': obj.HRV_REF_NO\r\n                        }\r\n                    },\r\n                    'new': {\r\n                        'FD_HL_REQUEST_VARIANTS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'VARIANT': this.datavalidate(obj.VARIANT),\r\n                            'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            // }\r\n            if (obj.isChecked) {\r\n                ParamTuple.push(params);\r\n            }\r\n        }\r\n        var paramsAll = { 'tuple': ParamTuple };\r\n        this.service.invokeService(\"UpdateFdHlRequestVariants\", paramsAll, this.namespace, true, false)\r\n            .then((res) => {\r\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\r\n            res.forEach((obj) => {\r\n                this.HRV_REF_NOArr.push(obj.HRV_REF_NO);\r\n            });\r\n            this.engineVarient.filter((d) => {\r\n                res.forEach((d1) => {\r\n                    if (d.VARIANT == d1.VARIANT) {\r\n                        d.HRV_REF_NO = d1.HRV_REF_NO;\r\n                    }\r\n                });\r\n            });\r\n            // this.service.callTable4G.next('table4g');\r\n            // this.service.callTable4G.next('chapter2');\r\n            // this.service.callTable4G.next('table12');\r\n            // this.service.callTable4G.next('covering');\r\n            if (this.saveType != 'clone') {\r\n                if (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4') {\r\n                    Promise.all([(_a = this.covering) === null || _a === void 0 ? void 0 : _a.updateFdHlCoveringLetter(), (_b = this.covering) === null || _b === void 0 ? void 0 : _b.updateFdHlClEnclosure(), (_c = this.table4g) === null || _c === void 0 ? void 0 : _c.save(), (_d = this.table12) === null || _d === void 0 ? void 0 : _d.updateFdHlTable12(), (_e = this.table12) === null || _e === void 0 ? void 0 : _e.updateFdHlTab12SpecChanges(), (_f = this.table4g) === null || _f === void 0 ? void 0 : _f.saveMode(), (_g = this.table4g) === null || _g === void 0 ? void 0 : _g.saveMeasurment()]).then((res) => {\r\n                        this.saveDocuments();\r\n                    }).catch(error => {\r\n                        // alert('error: data not saved successfully');\r\n                    });\r\n                }\r\n                else if (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3') {\r\n                    Promise.all([(_h = this.covering) === null || _h === void 0 ? void 0 : _h.updateFdHlCoveringLetter(), (_j = this.covering) === null || _j === void 0 ? void 0 : _j.updateFdHlClEnclosure(), (_k = this.chapter2) === null || _k === void 0 ? void 0 : _k.save(), (_l = this.table12) === null || _l === void 0 ? void 0 : _l.updateFdHlTable12(), (_m = this.table12) === null || _m === void 0 ? void 0 : _m.updateFdHlTab12SpecChanges(), (_o = this.chapter2) === null || _o === void 0 ? void 0 : _o.saveMode(), (_p = this.chapter2) === null || _p === void 0 ? void 0 : _p.saveMeasurment()]).then((res) => {\r\n                        this.saveDocuments();\r\n                    }).catch(error => {\r\n                        // alert('error: data not saved successfully');\r\n                    });\r\n                }\r\n                else {\r\n                    Promise.all([(_q = this.covering) === null || _q === void 0 ? void 0 : _q.updateFdHlCoveringLetter(), (_r = this.covering) === null || _r === void 0 ? void 0 : _r.updateFdHlClEnclosure(), (_s = this.table12) === null || _s === void 0 ? void 0 : _s.updateFdHlTable12(), (_t = this.table12) === null || _t === void 0 ? void 0 : _t.updateFdHlTab12SpecChanges()])\r\n                        .then((res) => {\r\n                        this.saveDocuments();\r\n                    }).catch(error => {\r\n                        // alert('error: data not saved successfully');\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.cloneFdHlRequest();\r\n            }\r\n        });\r\n    }\r\n    getReportName() {\r\n        this.service.invokeService(\"GetFDHLReportNames\", null, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.ReportName = res;\r\n            res.forEach((d) => {\r\n                if (d.REPORT_NAME == 'Table 4G') {\r\n                    this.table4gVar.push(d);\r\n                }\r\n                else if (d.REPORT_NAME == 'Chapter 2') {\r\n                    this.chapter2Var.push(d);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    openDoc() {\r\n        this.displayPopup = 'block';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n        // body.style.opacity = '0.85';\r\n    }\r\n    closeDoc() {\r\n        this.displayPopup = 'none';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"auto\";\r\n        // body.style.opacity = '1';\r\n    }\r\n    downloadFile(doc) {\r\n        this.service.downloadFile(\"DownloadDocument\", doc.DOC_NAME, doc.DOC_PATH, this.namespace);\r\n    }\r\n    checkAllCheckBox(ev) {\r\n        this.documentsArr.forEach((x) => x.checked = ev.target.checked);\r\n        ev.target.checked ? this.documentsArr.forEach((x) => {\r\n            this.checkedRows.push(x);\r\n        }) : this.checkedRows = [];\r\n    }\r\n    isAllCheckBoxChecked() {\r\n        return this.documentsArr.every((p) => p.checked);\r\n    }\r\n    tdCheckbox(row) {\r\n        row.checked == true ? this.checkedRows.push(row) : this.checkedRows.splice(this.checkedRows.indexOf(row), 1);\r\n    }\r\n    uploadFile() {\r\n        $(\"#fileUploadDoc\").click();\r\n    }\r\n    UploadFileDoc(e) {\r\n        this.mainDocSpinner = true;\r\n        this.call_modal = false;\r\n        this.file = e.target.files[0];\r\n        this.fileName = e.target.files[0].name;\r\n        const record = this.documentsArr.find((item) => {\r\n            return item.DOC_NAME == this.fileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n            this.mainDocSpinner = false;\r\n        }\r\n        else {\r\n            if (this.initValue + parseFloat(this.file.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                this.mainDocSpinner = false;\r\n                return;\r\n            }\r\n            else {\r\n                this.service.uploadFile(\"UploadFDHLDocumnets\", this.file, [], this.namespace, false, false)\r\n                    .then((resDocPath) => {\r\n                    this.mainDocSpinner = false;\r\n                    this.initValue = this.initValue + parseFloat(this.file.size) / 1024 / 1024;\r\n                    this.documentsArr.push({\r\n                        'DOC_REF_NO': '',\r\n                        'DOC_NAME': this.service.datavalidate(this.fileName),\r\n                        \"DOC_PATH\": resDocPath,\r\n                        'DOC_TYPE': 'Main',\r\n                        'UPLOADERNAME': this.loginUserID,\r\n                        'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                        'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                    });\r\n                    this.fileUploadDoc = '';\r\n                }).catch((err) => {\r\n                    this.mainDocSpinner = false;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    certUploadFile() {\r\n        $(\"#certfileUploadDoc\").click();\r\n    }\r\n    certUploadFileDoc(e) {\r\n        this.certSpinner = true;\r\n        this.call_modal = false;\r\n        this.certfile = e.target.files[0];\r\n        this.certfileName = e.target.files[0].name;\r\n        const record = this.certdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.certfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n            this.certSpinner = false;\r\n        }\r\n        else {\r\n            if (this.certDocSize + parseFloat(this.certfile.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                this.certSpinner = false;\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.certfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.certSpinner = false;\r\n                this.certDocSize = this.certDocSize + parseFloat(this.certfile.size) / 1024 / 1024;\r\n                this.certdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.certfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Certificates',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.certfileUploadDoc = '';\r\n            }).catch(error => {\r\n                this.certSpinner = false;\r\n            });\r\n        }\r\n    }\r\n    repUploadFile() {\r\n        $(\"#repfileUploadDoc\").click();\r\n    }\r\n    repUploadFileDoc(e) {\r\n        this.repSpinner = true;\r\n        this.call_modal = false;\r\n        this.repfile = e.target.files[0];\r\n        this.repfileName = e.target.files[0].name;\r\n        const record = this.repdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.repfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n            this.repSpinner = false;\r\n        }\r\n        else {\r\n            if (this.repDocSize + parseFloat(this.repfile.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                this.repSpinner = false;\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.repfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.repSpinner = false;\r\n                this.repDocSize = this.repDocSize + parseFloat(this.repfile.size) / 1024 / 1024;\r\n                this.repdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.repfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Reports',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.repfileUploadDoc = '';\r\n            }).catch((err) => {\r\n                this.repSpinner = false;\r\n            });\r\n        }\r\n    }\r\n    appUploadFile() {\r\n        $(\"#appfileUploadDoc\").click();\r\n    }\r\n    appUploadFileDoc(e) {\r\n        this.appSpinner = true;\r\n        this.call_modal = false;\r\n        this.appfile = e.target.files[0];\r\n        this.appfileName = e.target.files[0].name;\r\n        const record = this.appdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.appfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n            this.appSpinner = false;\r\n        }\r\n        else {\r\n            if (this.appDocSize + parseFloat(this.appfile.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                this.appSpinner = false;\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.appfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.appSpinner = false;\r\n                this.appDocSize = this.appDocSize + parseFloat(this.appfile.size) / 1024 / 1024;\r\n                this.appdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.appfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Approved',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.appfileUploadDoc = '';\r\n            }).catch((err) => {\r\n                this.appSpinner = false;\r\n            });\r\n        }\r\n    }\r\n    draUploadFile() {\r\n        $(\"#drafileUploadDoc\").click();\r\n    }\r\n    draUploadFileDoc(e) {\r\n        this.dragSpinner = true;\r\n        this.call_modal = false;\r\n        this.drafile = e.target.files[0];\r\n        this.drafileName = e.target.files[0].name;\r\n        const record = this.dradocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.drafileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n            this.dragSpinner = false;\r\n        }\r\n        else {\r\n            if (this.dragDocSize + parseFloat(this.drafile.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                this.dragSpinner = false;\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.drafile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.dragSpinner = false;\r\n                this.dragDocSize = this.dragDocSize + parseFloat(this.drafile.size) / 1024 / 1024;\r\n                this.dradocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.drafileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Drawings',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.drafileUploadDoc = '';\r\n            }).catch((err) => {\r\n                this.dragSpinner = false;\r\n            });\r\n        }\r\n    }\r\n    invUploadFile() {\r\n        $(\"#invfileUploadDoc\").click();\r\n    }\r\n    invUploadFileDoc(e) {\r\n        this.invSpinner = true;\r\n        this.call_modal = false;\r\n        this.invfile = e.target.files[0];\r\n        this.invfileName = e.target.files[0].name;\r\n        const record = this.invdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.invfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n            this.invSpinner = false;\r\n        }\r\n        else {\r\n            if (this.invDocSize + parseFloat(this.invfile.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                this.invSpinner = false;\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.invfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.invSpinner = false;\r\n                this.invDocSize = this.invDocSize + parseFloat(this.invfile.size) / 1024 / 1024;\r\n                this.invdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.invfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Invoice',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.invfileUploadDoc = '';\r\n            }).catch((err) => {\r\n                this.invSpinner = false;\r\n            });\r\n        }\r\n    }\r\n    certDelete(i) {\r\n        if (this.datavalidate(this.certdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.certdocumentsArr[i].DOC_REF_NO);\r\n                    this.certDocSize = this.certDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\r\n                    this.certdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.certDocSize = this.certDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\r\n            this.certdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    repDelete(i) {\r\n        if (this.datavalidate(this.repdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.repdocumentsArr[i].DOC_REF_NO);\r\n                    this.repDocSize = this.repDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\r\n                    this.repdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.repDocSize = this.repDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\r\n            this.repdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    appDelete(i) {\r\n        if (this.datavalidate(this.appdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.appdocumentsArr[i].DOC_REF_NO);\r\n                    this.appDocSize = this.appDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\r\n                    this.appdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.appDocSize = this.appDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\r\n            this.appdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    draDelete(i) {\r\n        if (this.datavalidate(this.dradocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.dradocumentsArr[i].DOC_REF_NO);\r\n                    this.dragDocSize = this.dragDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\r\n                    this.dradocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.dragDocSize = this.dragDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\r\n            this.dradocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    invDelete(i) {\r\n        if (this.datavalidate(this.invdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.invdocumentsArr[i].DOC_REF_NO);\r\n                    this.invDocSize = this.invDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\r\n                    this.invdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.invDocSize = this.invDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\r\n            this.invdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    gridDocSave(arg) {\r\n        this.call_modal = false;\r\n        const concatArr = [this.certdocumentsArr, this.repdocumentsArr, this.appdocumentsArr, this.dradocumentsArr, this.invdocumentsArr].flat();\r\n        let ParamTuple = [];\r\n        var params = {};\r\n        for (var save of concatArr) {\r\n            if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\r\n                params = {\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            \"UPLOADER_ID\": save.UPLOADER_ID,\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                params = {\r\n                    'old': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_REF_NO': save.DOC_REF_NO\r\n                        }\r\n                    },\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            ParamTuple.push(params);\r\n        }\r\n        var paramsAll = { 'tuple': ParamTuple };\r\n        this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.gridDocSplit(res);\r\n            if (arg == 'complete') {\r\n                this.completeTask(1, this.openAs, '');\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { 'text': `Saved successfully `, active: this.call_modal };\r\n                }, 0);\r\n            }\r\n        }, (err) => {\r\n            console.log(\"Error occured while saving Docdata \");\r\n        });\r\n    }\r\n    gridDocSplit(doc) {\r\n        this.certdocumentsArr = [];\r\n        this.repdocumentsArr = [];\r\n        this.appdocumentsArr = [];\r\n        this.dradocumentsArr = [];\r\n        this.invdocumentsArr = [];\r\n        doc.forEach((obj) => {\r\n            switch (obj.DOC_TYPE) {\r\n                case 'Certificates':\r\n                    this.certdocumentsArr.push(obj);\r\n                    break;\r\n                case 'Reports':\r\n                    this.repdocumentsArr.push(obj);\r\n                    break;\r\n                case 'Approved':\r\n                    this.appdocumentsArr.push(obj);\r\n                    break;\r\n                case 'Drawings':\r\n                    this.dradocumentsArr.push(obj);\r\n                    break;\r\n                case 'Invoice':\r\n                    this.invdocumentsArr.push(obj);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    gridDeleteFile(i) {\r\n        this.call_modal = false;\r\n        let dataObj = {\r\n            tuple: {\r\n                old: {\r\n                    FD_HL_DOC_DETAILS: {\r\n                        DOC_REF_NO: i,\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).\r\n            then((ajaxResponse) => {\r\n            // this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'File Deleted Successfull', active: this.call_modal };\r\n            }, 0);\r\n        });\r\n    }\r\n    gridDocValid(arg) {\r\n        if (arg != 'docsave') {\r\n            this.docSubmit = true;\r\n            if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '' || this.datavalidate(this.createRequestForm.controls['APEX'].value) == '') {\r\n                return true;\r\n            }\r\n            if (this.certdocumentsArr.length == 0 || this.repdocumentsArr.length == 0 || this.appdocumentsArr.length == 0 || this.dradocumentsArr.length == 0 || this.invdocumentsArr.length == 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    saveARAI(arg) {\r\n        this.ARAITrue = true;\r\n        // this.isSubmitted1 = true;\r\n        this.call_modal = false;\r\n        if (this.gridDocValid(arg)) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Please enter all mandatory fields', active: this.call_modal, };\r\n            }, 0);\r\n            return;\r\n        }\r\n        let dataObj = {};\r\n        if (this.datavalidate(this.HR_REF_NO) != '') {\r\n            dataObj = {\r\n                tuple: {\r\n                    old: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            HR_REF_NO: this.HR_REF_NO\r\n                        }\r\n                    },\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value),\r\n                            'APEX_NO': this.datavalidate(this.createRequestForm.controls['APEX'].value),\r\n                            'CURRENT_STAGE': this.actStage,\r\n                            'REMARKS': this.remarks\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.gridDocSave(arg);\r\n        });\r\n    }\r\n    receiveData(obj) {\r\n        this.coverLetterObj = obj;\r\n    }\r\n    receiveData1(obj) {\r\n        this.table12Obj = obj;\r\n    }\r\n    isValid() {\r\n        this.valid = false;\r\n        if (true) {\r\n            if (this.datavalidate(this.createRequestForm.controls['WBS'].value) == '' && this.saveType != 'clone' ||\r\n                this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value) == '' && this.saveType != 'clone') {\r\n                this.valid = true;\r\n            }\r\n            if (this.routeName == 'clone' && this.CLONE_REQUEST_NO == '') {\r\n                this.valid = true;\r\n            }\r\n            if (this.saveType != 'clone') {\r\n                if (this.coverLetterObj.enclosureArr.length == 0) {\r\n                    this.valid = true;\r\n                    this.service.callTable4G.next('covering');\r\n                }\r\n                else {\r\n                    for (let obj of this.coverLetterObj.enclosureArr) {\r\n                        if (this.datavalidate(this.coverLetterObj.CL_CONTENT) == '' || this.coverLetterObj.CL_TO == '' || this.datavalidate(this.coverLetterObj.CL_REGARDS) == '' ||\r\n                            this.datavalidate(this.coverLetterObj.Date) == '' || this.datavalidate(obj.ENCLOSURE) == '') {\r\n                            this.valid = true;\r\n                            this.service.callTable4G.next('covering');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.saveType != 'clone' && this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value) != 'Approval') {\r\n                if (this.table12Obj.specArr.length == 0) {\r\n                    this.valid = true;\r\n                    this.service.callTable4G.next('table12');\r\n                }\r\n                else {\r\n                    if (this.datavalidate(this.table12Obj.MANUFACTURER) == '' || this.table12Obj.CMVR_CERTIFICATE_NO == '' || this.datavalidate(this.table12Obj.CMVR_CERTIFICATE_DATE) == '' ||\r\n                        this.datavalidate(this.table12Obj.SPECIFICATION_NO) == '' || this.datavalidate(this.table12Obj.EXTENSION_DATE) == '' || this.datavalidate(this.table12Obj.EXTENSION_SPEC_REV) == ''\r\n                        || this.datavalidate(this.table12Obj.NATURE_OF_CHANGE) == '') {\r\n                        this.valid = true;\r\n                        this.service.callTable4G.next('table12');\r\n                    }\r\n                    else {\r\n                        for (let obj of this.table12Obj.specArr) {\r\n                            if (this.datavalidate(obj.ENGINE_MODEL_NAME) == '' || this.datavalidate(obj.SPEC_NO) == '' || this.datavalidate(obj.DESCRIPTION) == '' || this.datavalidate(obj.PARAMETER_EARLIER) == '' || this.datavalidate(obj.PARAMETER_NEW_EXTENSION) == '') {\r\n                                this.valid = true;\r\n                                this.service.callTable4G.next('table12');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.saveType != 'clone' && (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4')) {\r\n                for (let i = 0; i < this.variantsArr.length; i++) {\r\n                    for (var obj of this.variantsArr[i].Table12Arr) {\r\n                        if (obj.MANDATORY == 'Yes' && (this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && (this.emisionComplaince == 'TR4' || this.emisionComplaince == 'CE4'))) {\r\n                            this.valid = true;\r\n                            this.service.callTable4G.next('table4g');\r\n                        }\r\n                    }\r\n                    for (let obj1 of this.variantsArr[i].Mode) {\r\n                        for (let obj2 of obj1.innerArr) {\r\n                            if (this.datavalidate(obj2.ENGINE_SPEED) == '' || this.datavalidate(obj2.GROSS_POWER) == '') {\r\n                                this.valid = true;\r\n                                this.service.callTable4G.next('table4g');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.saveType != 'clone' && (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3')) {\r\n                for (let i = 0; i < this.variantsArr1.length; i++) {\r\n                    for (var obj of this.variantsArr1[i].Table12Arr1) {\r\n                        if (obj.MANDATORY == 'Yes' && (this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && (this.emisionComplaince == 'B3A' || this.emisionComplaince == 'CE3'))) {\r\n                            this.valid = true;\r\n                            this.service.callTable4G.next('chapter2');\r\n                            //return;\r\n                        }\r\n                    }\r\n                    for (let obj1 of this.variantsArr1[i].Measurment) {\r\n                        if (this.datavalidate(obj1.ENGINE_SPEED) == '' || this.datavalidate(obj1.GROSS_POWER) == '') {\r\n                            this.valid = true;\r\n                            this.service.callTable4G.next('chapter2');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.valid = false;\r\n        }\r\n        return this.valid;\r\n    }\r\n    saveValid() {\r\n        if (this.datavalidate(this.createRequestForm.controls['LOCATION'].value) == '' || this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value) == '' ||\r\n            this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) == '' || this.variantsArr.length == 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    async saveDetails(arg) {\r\n        this.saveType = arg;\r\n        let dataObj = {};\r\n        this.call_modal = false;\r\n        if (this.isvarientCheck() && this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\r\n            return;\r\n        }\r\n        if (this.saveValid()) {\r\n            this.isSaveSubm = true;\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { 'text': 'Please Enter All Mandatory Fields', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (this.documentsArr.length == 0 && arg == 'submit') {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { 'text': 'Please upload at least one document', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (arg == 'submit' || arg == 'clone') {\r\n            this.isSubmitted = arg == 'submit' ? true : false;\r\n            if (await this.validTypeApproval()) {\r\n                return;\r\n            }\r\n            if (this.isValid()) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { 'text': 'Please Enter All Mandatory Fields', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n        }\r\n        if (this.datavalidate(this.HR_REF_NO) != '') {\r\n            dataObj = {\r\n                tuple: {\r\n                    old: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            HR_REF_NO: this.HR_REF_NO\r\n                        }\r\n                    },\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'LOCATION': this.datavalidate(this.createRequestForm.controls['LOCATION'].value),\r\n                            'CERTIFICATION_TYPE': this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value),\r\n                            'ENGINE_FAMILY_NO': this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\r\n                            'WBS': this.datavalidate(this.createRequestForm.controls['WBS'].value),\r\n                            'COST_CENTER': this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value),\r\n                            'REQUEST_NO': this.routeName == 'clone' ? this.newREQUEST_NO : this.REQUEST_NO,\r\n                            'CLONE_REQUEST_NO': this.routeName == 'clone' ? this.CLONE_REQUEST_NO : '',\r\n                            'REMARKS': this.remarks,\r\n                            'CURRENT_STAGE': this.actStage\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            dataObj = {\r\n                tuple: {\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'HR_REF_NO': '',\r\n                            'LOCATION': this.datavalidate(this.createRequestForm.controls['LOCATION'].value),\r\n                            'CERTIFICATION_TYPE': this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value),\r\n                            'ENGINE_FAMILY_NO': this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\r\n                            'WBS': this.datavalidate(this.createRequestForm.controls['WBS'].value),\r\n                            'COST_CENTER': this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value),\r\n                            'INITIATOR_ID': this.loginUserID,\r\n                            'INITIATION_DATE': this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\r\n                            'PROCESS_STATUS': '0',\r\n                            'CLONE_REQUEST_NO': this.routeName == 'clone' ? this.CLONE_REQUEST_NO : '',\r\n                            'REMARKS': this.remarks,\r\n                            'CHAPTER2_REVISION': this.reguChapter2,\r\n                            'CL_REVISION': this.reguCovering,\r\n                            'TABLE4G_REVISION': this.reguTable4G,\r\n                            'TABLE12_REVISION': this.reguTable12,\r\n                            'CURRENT_STAGE': this.actStage\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.HR_REF_NO = res[0].HR_REF_NO;\r\n            let obj = { 'HR_REF_NO': this.HR_REF_NO, 'actRole': this.actRole, 'actStage': this.actStage };\r\n            this.service.sharingData(obj, 'HR_REF_NO');\r\n            this.service.createPageEvents.next('');\r\n            this.REQUEST_NO = res[0].REQUEST_NO;\r\n            this.newREQUEST_NO = res[0].REQUEST_NO;\r\n            this.saveVariants();\r\n        }, (err) => {\r\n            console.log('Error occured! While saving the data');\r\n        });\r\n    }\r\n    saveDocuments() {\r\n        let ParamTuple = [];\r\n        var params = {};\r\n        for (var save of this.documentsArr) {\r\n            if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\r\n                params = {\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            \"UPLOADER_ID\": save.UPLOADERNAME,\r\n                            'DOC_REMARKS': save.DOC_REMARKS,\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                params = {\r\n                    'old': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_REF_NO': save.DOC_REF_NO\r\n                        }\r\n                    },\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            // \"UPLOADER_ID\": save.UPLOADERNAME,\r\n                            'DOC_REMARKS': save.DOC_REMARKS,\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            ParamTuple.push(params);\r\n        }\r\n        var paramsAll = { 'tuple': ParamTuple };\r\n        this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false)\r\n            .then((res) => {\r\n            if (this.saveType == 'submit') {\r\n                if (this.datavalidate(this.taskId) == '') {\r\n                    let param = {\r\n                        'HR_REF_NO': this.HR_REF_NO,\r\n                        'INITIATED_BY': this.loginUserID,\r\n                        'REMARKS': this.remarks\r\n                    };\r\n                    this.service.invokeService(\"FD_HL_MainProcess\", param, \"http://schemas.cordys.com/default\", true, false).\r\n                        then((res) => {\r\n                        // let dObj = {HR_REF_NO:this.HR_REF_NO}\r\n                        // this.service.invokeService(\"SendFD_HLCustomRequestorMail\", dObj, this.namespace, true, false)\r\n                        // .then((res: any) => {\r\n                        // })\r\n                        setTimeout(() => {\r\n                            let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\r\n                            this.call_modal = true;\r\n                            this.data_send = { text: `Request Submitted Successfully`, 'text1': `Request ID`, 'text2': `${this.REQUEST_NO}`, active: this.call_modal, from: modal_from };\r\n                        }, 0);\r\n                    });\r\n                }\r\n                else {\r\n                    this.completeTask(7, this.openAs, '');\r\n                }\r\n            }\r\n            else if (this.saveType == 'save') {\r\n                let msg;\r\n                msg = this.datavalidate(this.openAs) == '' ? 'New Request Created Successfully' : 'Request Updated Successfully';\r\n                setTimeout(() => {\r\n                    let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: msg, 'text1': `Request ID`, 'text2': `${this.REQUEST_NO}`, active: this.call_modal, from: modal_from };\r\n                }, 0);\r\n            }\r\n            if (res) {\r\n                this.documentsArr = [];\r\n                this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\r\n            }\r\n        }, (err) => {\r\n            console.log(\"Error occured while saving Docdata \");\r\n        });\r\n    }\r\n    deleteFile() {\r\n        this.call_modal = false;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n                for (let i = 0; i < this.checkedRows.length; i++) {\r\n                    this.initValue = this.initValue - parseFloat(this.checkedRows[i].DOC_SIZE);\r\n                    if (this.service.datavalidate(this.checkedRows[i].DOC_REF_NO) != \"\") {\r\n                        let dataObj = {\r\n                            tuple: {\r\n                                old: {\r\n                                    FD_HL_DOC_DETAILS: {\r\n                                        DOC_REF_NO: this.checkedRows[i].DOC_REF_NO,\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).\r\n                            then((ajaxResponse) => {\r\n                            this.documentsArr = this.documentsArr.filter((val) => {\r\n                                return this.checkedRows.indexOf(val) === -1;\r\n                            });\r\n                            this.checkedRows = [];\r\n                            setTimeout(() => {\r\n                                this.call_modal = true;\r\n                                this.data_send = { text: 'File Deleted Successfull', active: this.call_modal };\r\n                            }, 0);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.documentsArr = this.documentsArr.filter((val) => {\r\n                            return this.checkedRows.indexOf(val) === -1;\r\n                        });\r\n                        this.checkedRows.forEach((d) => {\r\n                            if (d.DOC_REF_NO == '') {\r\n                                this.checkedRows.splice(this.checkedRows.indexOf(d), 1);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            reject: () => { }\r\n        });\r\n    }\r\n    isRemarksValid(arg) {\r\n        if (arg == 0 && this.remarks == '' || arg == 3 && this.remarks == '' || arg == 4 && this.remarks == '' || arg == 7 && this.remarks == '') {\r\n            this.remarkSubmit = true;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    completeTask(decision, openas, remarks) {\r\n        this.call_modal = false;\r\n        if (this.isRemarksValid(decision)) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Please enter remarks', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        let data = {\r\n            \"FD_HL_OPSchemaFragment\": {\r\n                ApproverDecision: decision,\r\n                ApprovedBy: this.loginUserID,\r\n                Remarks: this.remarks\r\n            }\r\n        };\r\n        this.call_modal = false;\r\n        var titlest = decision == 1 ? \"Task Completed Successfully\" : decision == 0 ? \"Task Seek Clarification Successfully\" :\r\n            decision == 7 ? \"Task Submitted Successfully\" : decision == 4 ? \"Task Obsoleted Successfully\" : decision == 3 ? \"Task Rejected Successfully\" : \"\";\r\n        let _this = this;\r\n        $.cordys.workflow.completeTask(this.taskId, data, { dataType: 'xml' }).done(() => {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: titlest, active: this.call_modal, from: 'task' };\r\n            }, 0);\r\n            // _this.closeTask(openas);\r\n        });\r\n    }\r\n    closeTask(openas) {\r\n        this.actStage = \"view\";\r\n        if (openas == 'customInboxTask') {\r\n            this.router.navigate(['/inbox']);\r\n        }\r\n        else if (openas == 'mail') {\r\n            window.close();\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    async callReqManagement1(arg) {\r\n        let params = { HR_REF_NO: arg, REPORT_REF_ID: 3 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.Table12Arr = res;\r\n        });\r\n        let params1 = { HR_REF_NO: arg, REPORT_REF_ID: 4 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params1, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.chapter2Arr = res;\r\n        });\r\n        setTimeout(() => {\r\n            this.getFDHLRequestVariantDetails(arg);\r\n        }, 100);\r\n    }\r\n    async callReqManagementEmpty() {\r\n        let params = { HR_REF_NO: '', REPORT_REF_ID: 3 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.Table12EmptyArr = res;\r\n        });\r\n        let params1 = { HR_REF_NO: '', REPORT_REF_ID: 4 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params1, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.chapter2EmptyArr = res;\r\n        });\r\n    }\r\n    async getFdHlRequestManagement() {\r\n        this.variantsArr.forEach((d) => {\r\n            d.Table12Arr = [];\r\n            if (this.datavalidate(d.HRV_REF_NO) == '') {\r\n                this.Table12EmptyArr.forEach((d1) => {\r\n                    d.Table12Arr.push({\r\n                        ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                        ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                        CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                        REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                    });\r\n                });\r\n            }\r\n            if (this.datavalidate(d.HRV_REF_NO) != '') {\r\n                this.Table12Arr.forEach((d1) => {\r\n                    if (d.HRV_REF_NO == this.datavalidate(d1.HRV_REF_NO)) {\r\n                        d.Table12Arr.push({\r\n                            ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                            ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                            CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                            REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    async getFdHlRequestManagement1() {\r\n        this.variantsArr1.forEach((d) => {\r\n            d.Table12Arr1 = [];\r\n            if (this.datavalidate(d.HRV_REF_NO) == '') {\r\n                this.chapter2EmptyArr.forEach((d1) => {\r\n                    d.Table12Arr1.push({\r\n                        ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                        ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                        CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                        REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                    });\r\n                });\r\n            }\r\n            if (this.datavalidate(d.HRV_REF_NO) != '') {\r\n                this.chapter2Arr.forEach((d1) => {\r\n                    if (d.HRV_REF_NO == this.datavalidate(d1.HRV_REF_NO)) {\r\n                        d.Table12Arr1.push({\r\n                            ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                            ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                            CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                            REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    datavalidate(data) {\r\n        if (data != undefined && data != null && data != \"\") {\r\n            return data;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild(CoveringLetterComponent)\r\n], CreateNewRequestComponent.prototype, \"covering\", void 0);\r\n__decorate([\r\n    ViewChild(Table4gComponent)\r\n], CreateNewRequestComponent.prototype, \"table4g\", void 0);\r\n__decorate([\r\n    ViewChild(Chapter2Component)\r\n], CreateNewRequestComponent.prototype, \"chapter2\", void 0);\r\n__decorate([\r\n    ViewChild(Table12Component)\r\n], CreateNewRequestComponent.prototype, \"table12\", void 0);\r\n__decorate([\r\n    Input()\r\n], CreateNewRequestComponent.prototype, \"requestIDClone\", void 0);\r\n__decorate([\r\n    Input()\r\n], CreateNewRequestComponent.prototype, \"cloneHRNo\", void 0);\r\nCreateNewRequestComponent = __decorate([\r\n    Component({\r\n        selector: 'app-create-new-request',\r\n        templateUrl: './create-new-request.component.html',\r\n        styleUrls: ['./create-new-request.component.css'],\r\n        providers: [ConfirmationService, MessageService]\r\n    })\r\n], CreateNewRequestComponent);\r\nexport { CreateNewRequestComponent };\r\n"]},"metadata":{},"sourceType":"module"}