{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\SVN Projects\\\\FD_Homologation_LatesT\\\\FD_Homologation\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./table12.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./table12.component.css?ngResource\";\nimport { DatePipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\nimport { Services } from 'src/app/services/services';\nlet Table12Component = class Table12Component {\n  constructor(service, datepipe, confirmationService) {\n    this.service = service;\n    this.datepipe = datepipe;\n    this.confirmationService = confirmationService;\n    this.namespace = \"http://schemas.cordys.com/FD_HL_WSPackage\";\n    this.manufacture = '';\n    this.modelName = '';\n    this.manufactureArr = [];\n    this.CMVRDate = '';\n    this.TAB12_REF_NO = '';\n    this.engineVarient = [];\n    this.call_modal = false;\n    this.data_send = {};\n    this.form = {\n      MANUFACTURER: '',\n      MODEL_VARIANTS: '',\n      CMVR_CERTIFICATE_NO: '',\n      CMVR_CERTIFICATE_DATE: '',\n      SPECIFICATION_NO: '',\n      EXTENSION_DATE: '',\n      EXTENSION_SPEC_REV: '',\n      NATURE_OF_CHANGE: ''\n    };\n    this.openAs = false;\n    this.specificationArr = [{\n      ENGINE_MODEL_NAME: '',\n      SPEC_NO: '',\n      DESCRIPTION: '',\n      PARAMETER_EARLIER: '',\n      PARAMETER_NEW_EXTENSION: '',\n      TAB12_SC_REF_NO: ''\n    }];\n    this.service.lovMasaterList.subscribe(lovMasaterList => {\n      this.engineVarient = $.cordys.json.findObjects(lovMasaterList, 'LOV_TYPE', 'ENGINE_VARIANT'); // this.engineVarient.forEach((d1: any) => {\n      //     d1.HRV_REF_NO = '';\n      //     d1.isChecked = false;\n      // })\n    });\n    this.service.OpenAs.subscribe(call1 => {\n      this.openAs = call1;\n    });\n    this.subscription = this.service.callTable4G.subscribe(call => {\n      if (this.datavalidate(call) == 'table12') {\n        this.updateFdHlTab12SpecChanges();\n        this.updateFdHlTable12();\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    for (let propName in changes) {\n      // if (propName == 'engineVariantStr') {\n      //   let chng = changes[propName];\n      //   this.engineVariantStr = chng.currentValue;\n      // }\n      if (propName == 'nameArrStr') {\n        let chng = changes[propName];\n        this.nameArrStr = chng.currentValue;\n        this.form.MODEL_VARIANTS = this.nameArrStr;\n      }\n\n      if (propName == 'HR_REF_NO') {\n        let chng = changes[propName];\n        this.HR_REF_NO = chng.currentValue;\n\n        if (this.datavalidate(this.HR_REF_NO) != '') {\n          this.getData();\n        }\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.getmanufacureData();\n    this.getFDHLRequestVariantDetails();\n  }\n\n  ngAfterViewInit() {}\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n\n  clear() {\n    this.specificationArr.forEach(obj => {\n      obj.ENGINE_MODEL_NAME = null;\n      obj.SPEC_NO = null;\n      obj.DESCRIPTION = null;\n      obj.PARAMETER_EARLIER = null;\n      obj.PARAMETER_NEW_EXTENSION = null;\n    });\n    this.form = {\n      MANUFACTURER: '',\n      MODEL_VARIANTS: '',\n      CMVR_CERTIFICATE_NO: '',\n      CMVR_CERTIFICATE_DATE: '',\n      SPECIFICATION_NO: '',\n      EXTENSION_DATE: '',\n      EXTENSION_SPEC_REV: '',\n      NATURE_OF_CHANGE: ''\n    };\n    this.manufacture = '';\n  }\n\n  clearSave() {\n    this.call_modal = false;\n    Promise.all([this.updateFdHlTable12(), this.updateFdHlTab12SpecChanges()]).then(res => {\n      this.call_modal = true;\n      this.data_send = {\n        text: 'Table12 data saved successfully',\n        active: this.call_modal\n      };\n    });\n  }\n\n  selectManufacture(e) {\n    this.manufactureArr.filter(data => {\n      if (data.ADDR_NAME == e.target.value) {\n        this.form.MANUFACTURER = data.ADDRESS;\n      }\n    });\n  }\n\n  addSpecifications() {\n    this.specificationArr.push({\n      ENGINE_MODEL_NAME: '',\n      SPEC_NO: '',\n      DESCRIPTION: '',\n      PARAMETER_EARLIER: '',\n      PARAMETER_NEW_EXTENSION: '',\n      TAB12_SC_REF_NO: ''\n    });\n  }\n\n  updateFdHlTab12SpecChanges() {\n    return new Promise((resolve, reject) => {\n      let ParamTuple = [];\n      var params = {};\n\n      for (var obj of this.specificationArr) {\n        if (this.datavalidate(obj.TAB12_SC_REF_NO) == \"\") {\n          params = {\n            'new': {\n              'FD_HL_TAB12_SPEC_CHANGES': {\n                'TAB12_SC_REF_NO': '',\n                'HR_REF_NO': this.HR_REF_NO,\n                'ENGINE_MODEL_NAME': obj.ENGINE_MODEL_NAME,\n                'SPEC_NO': obj.SPEC_NO,\n                'DESCRIPTION': obj.DESCRIPTION,\n                'PARAMETER_EARLIER': obj.PARAMETER_EARLIER,\n                'PARAMETER_NEW_EXTENSION': obj.PARAMETER_NEW_EXTENSION\n              }\n            }\n          };\n        } else {\n          params = {\n            'old': {\n              'FD_HL_TAB12_SPEC_CHANGES': {\n                'TAB12_SC_REF_NO': obj.TAB12_SC_REF_NO\n              }\n            },\n            'new': {\n              'FD_HL_TAB12_SPEC_CHANGES': {\n                'HR_REF_NO': this.HR_REF_NO,\n                'ENGINE_MODEL_NAME': obj.ENGINE_MODEL_NAME,\n                'SPEC_NO': obj.SPEC_NO,\n                'DESCRIPTION': obj.DESCRIPTION,\n                'PARAMETER_EARLIER': obj.PARAMETER_EARLIER,\n                'PARAMETER_NEW_EXTENSION': obj.PARAMETER_NEW_EXTENSION\n              }\n            }\n          };\n        }\n\n        ParamTuple.push(params);\n      }\n\n      var paramsAll = {\n        'tuple': ParamTuple\n      };\n      this.service.invokeService(\"UpdateFdHlTab12SpecChanges\", paramsAll, this.namespace, true, false).then(res => {\n        this.specificationArr = res;\n        resolve('Res success from table12spec');\n      }).catch(e => {\n        reject(e);\n      });\n      ;\n    });\n  }\n\n  updateFdHlTable12() {\n    return new Promise((resolve, reject) => {\n      let param = {};\n\n      if (this.datavalidate(this.TAB12_REF_NO) == \"\") {\n        param = {\n          'tuple': {\n            'new': {\n              'FD_HL_TABLE12': {\n                'TAB12_REF_NO': '',\n                'HR_REF_NO': this.HR_REF_NO,\n                'MANUFACTURER': this.manufacture,\n                'MODEL_VARIANTS': this.form.MODEL_VARIANTS,\n                'CLAUSE_NO': 3.1,\n                'CMVR_CERTIFICATE_NO': this.form.CMVR_CERTIFICATE_NO,\n                'CMVR_CERTIFICATE_DATE': this.service.dateFilter(this.form.CMVR_CERTIFICATE_DATE),\n                'SPECIFICATION_NO': this.form.SPECIFICATION_NO,\n                'EXTENSION_DATE': this.service.dateFilter(this.form.EXTENSION_DATE),\n                'EXTENSION_SPEC_REV': this.form.EXTENSION_SPEC_REV,\n                'NATURE_OF_CHANGE': this.form.NATURE_OF_CHANGE\n              }\n            }\n          }\n        };\n      } else {\n        param = {\n          'tuple': {\n            'old': {\n              'FD_HL_TABLE12': {\n                'TAB12_REF_NO': this.TAB12_REF_NO\n              }\n            },\n            'new': {\n              'FD_HL_TABLE12': {\n                'HR_REF_NO': this.HR_REF_NO,\n                'MANUFACTURER': this.manufacture,\n                'MODEL_VARIANTS': this.form.MODEL_VARIANTS,\n                'CLAUSE_NO': 3.1,\n                'CMVR_CERTIFICATE_NO': this.form.CMVR_CERTIFICATE_NO,\n                'CMVR_CERTIFICATE_DATE': this.service.dateFilter(this.form.CMVR_CERTIFICATE_DATE),\n                'SPECIFICATION_NO': this.form.SPECIFICATION_NO,\n                'EXTENSION_DATE': this.service.dateFilter(this.form.EXTENSION_DATE),\n                'EXTENSION_SPEC_REV': this.form.EXTENSION_SPEC_REV,\n                'NATURE_OF_CHANGE': this.form.NATURE_OF_CHANGE\n              }\n            }\n          }\n        };\n      }\n\n      this.service.invokeService(\"UpdateFdHlTable12\", param, this.namespace, true, false).then(res => {\n        this.TAB12_REF_NO = res[0].TAB12_REF_NO;\n        resolve('Res success from table12');\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n  getmanufacureData() {\n    this.service.invokeService(\"GetFD_HLAddressDetails\", null, this.namespace, true, false).then(res => {\n      res.filter(obj => {\n        if (obj.ADDR_TYPE == 'MANUFACTURER') {\n          this.manufactureArr.push({\n            ADDRESS: obj.ADDRESS,\n            ADDR_NAME: obj.ADDR_NAME\n          });\n        }\n      });\n    });\n  }\n\n  getData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n        var param = {\n          HR_REF_NO: _this.HR_REF_NO\n        };\n        yield _this.service.invokeService(\"GetFDHLTable12Details\", param, _this.namespace, true, false).then(res => {\n          _this.TAB12_REF_NO = res[0].TAB12_REF_NO;\n          _this.form = {\n            MANUFACTURER: '',\n            MODEL_VARIANTS: res[0].MODEL_VARIANTS,\n            CMVR_CERTIFICATE_NO: res[0].CMVR_CERTIFICATE_NO,\n            CMVR_CERTIFICATE_DATE: _this.datavalidate(_this.datepipe.transform(res[0].CMVR_CERTIFICATE_DATE, 'dd-MM-yyyy')),\n            SPECIFICATION_NO: res[0].SPECIFICATION_NO,\n            EXTENSION_DATE: _this.datavalidate(_this.datepipe.transform(res[0].EXTENSION_DATE, 'dd-MM-yyyy')),\n            EXTENSION_SPEC_REV: res[0].EXTENSION_SPEC_REV,\n            NATURE_OF_CHANGE: res[0].NATURE_OF_CHANGE\n          };\n          _this.manufacture = _this.datavalidate(res[0].MANUFACTURER);\n          let obj = {\n            target: {\n              value: res[0].MANUFACTURER\n            }\n          };\n\n          _this.selectManufacture(obj);\n        });\n\n        _this.service.invokeService(\"GetFDHLTable12SpecChangesDetails\", param, _this.namespace, true, false).then(res => {\n          _this.specificationArr = res;\n        });\n      }), 200);\n    })();\n  }\n\n  getFDHLRequestVariantDetails() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var param = {\n        HR_REF_NO: _this2.HR_REF_NO\n      };\n      let VariantNameArr = [];\n      let VariantIDArr = [];\n      yield _this2.service.invokeService(\"GetFDHLRequestVariantDetails\", param, _this2.namespace, true, false).then(res => {\n        _this2.engineVarient.filter(d => {\n          res.forEach(d1 => {\n            if (d.LOV_ID == d1.VARIANT) {\n              VariantNameArr.push(d.LOV_DESC);\n              VariantIDArr.push(d.LOV_ID);\n            }\n          });\n        }); // this.form.MODEL_VARIANTS=VariantNameArr.toString();\n        // this.engineVariantStr=VariantIDArr.toString();\n\n      });\n    })();\n  }\n\n  deleteSpecification(obj) {\n    this.call_modal = false;\n\n    if (obj.TAB12_SC_REF_NO != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          let dataObj = {\n            tuple: {\n              old: {\n                FD_HL_TAB12_SPEC_CHANGES: {\n                  TAB12_SC_REF_NO: obj.TAB12_SC_REF_NO\n                }\n              }\n            }\n          };\n          this.service.invokeService(\"UpdateFdHlTab12SpecChanges\", dataObj, this.namespace, true, false).then(ajaxResponse => {\n            this.specificationArr.splice(this.specificationArr.indexOf(obj), 1);\n          });\n        },\n        reject: type => {\n          switch (type) {\n            case ConfirmEventType.REJECT:\n              break;\n\n            case ConfirmEventType.CANCEL:\n              break;\n          }\n        }\n      });\n    } else {\n      this.specificationArr.splice(this.specificationArr.indexOf(obj), 1);\n    }\n  }\n\n  datavalidate(data) {\n    if (data != undefined && data != null && data != \"\") {\n      return data;\n    } else {\n      return \"\";\n    }\n  }\n\n};\n\nTable12Component.ctorParameters = () => [{\n  type: Services\n}, {\n  type: DatePipe\n}, {\n  type: ConfirmationService\n}];\n\nTable12Component.propDecorators = {\n  nameArrStr: [{\n    type: Input\n  }],\n  HR_REF_NO: [{\n    type: Input\n  }]\n};\nTable12Component = __decorate([Component({\n  selector: 'app-table12',\n  template: __NG_CLI_RESOURCE__0,\n  providers: [ConfirmationService, MessageService],\n  styles: [__NG_CLI_RESOURCE__1]\n})], Table12Component);\nexport { Table12Component };","map":{"version":3,"sources":["D:/SVN Projects/FD_Homologation_LatesT/FD_Homologation/src/app/create-new-request/table12/table12.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","DatePipe","Component","Input","ConfirmationService","ConfirmEventType","MessageService","Services","Table12Component","constructor","service","datepipe","confirmationService","namespace","manufacture","modelName","manufactureArr","CMVRDate","TAB12_REF_NO","engineVarient","call_modal","data_send","form","MANUFACTURER","MODEL_VARIANTS","CMVR_CERTIFICATE_NO","CMVR_CERTIFICATE_DATE","SPECIFICATION_NO","EXTENSION_DATE","EXTENSION_SPEC_REV","NATURE_OF_CHANGE","openAs","specificationArr","ENGINE_MODEL_NAME","SPEC_NO","DESCRIPTION","PARAMETER_EARLIER","PARAMETER_NEW_EXTENSION","TAB12_SC_REF_NO","lovMasaterList","subscribe","$","cordys","json","findObjects","OpenAs","call1","subscription","callTable4G","call","datavalidate","updateFdHlTab12SpecChanges","updateFdHlTable12","ngOnChanges","changes","propName","chng","nameArrStr","currentValue","HR_REF_NO","getData","ngOnInit","getmanufacureData","getFDHLRequestVariantDetails","ngAfterViewInit","ngOnDestroy","_a","unsubscribe","clear","forEach","obj","clearSave","Promise","all","then","res","text","active","selectManufacture","e","filter","data","ADDR_NAME","target","value","ADDRESS","addSpecifications","push","resolve","reject","ParamTuple","params","paramsAll","invokeService","catch","param","dateFilter","ADDR_TYPE","setTimeout","transform","VariantNameArr","VariantIDArr","d","d1","LOV_ID","VARIANT","LOV_DESC","deleteSpecification","confirm","message","header","icon","accept","dataObj","tuple","old","FD_HL_TAB12_SPEC_CHANGES","ajaxResponse","splice","indexOf","type","REJECT","CANCEL","undefined","ctorParameters","propDecorators","selector","template","providers","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./table12.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./table12.component.css?ngResource\";\r\nimport { DatePipe } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { ConfirmationService, ConfirmEventType, MessageService } from 'primeng/api';\r\nimport { Services } from 'src/app/services/services';\r\nlet Table12Component = class Table12Component {\r\n    constructor(service, datepipe, confirmationService) {\r\n        this.service = service;\r\n        this.datepipe = datepipe;\r\n        this.confirmationService = confirmationService;\r\n        this.namespace = \"http://schemas.cordys.com/FD_HL_WSPackage\";\r\n        this.manufacture = '';\r\n        this.modelName = '';\r\n        this.manufactureArr = [];\r\n        this.CMVRDate = '';\r\n        this.TAB12_REF_NO = '';\r\n        this.engineVarient = [];\r\n        this.call_modal = false;\r\n        this.data_send = {};\r\n        this.form = {\r\n            MANUFACTURER: '',\r\n            MODEL_VARIANTS: '',\r\n            CMVR_CERTIFICATE_NO: '',\r\n            CMVR_CERTIFICATE_DATE: '',\r\n            SPECIFICATION_NO: '',\r\n            EXTENSION_DATE: '',\r\n            EXTENSION_SPEC_REV: '',\r\n            NATURE_OF_CHANGE: ''\r\n        };\r\n        this.openAs = false;\r\n        this.specificationArr = [{ ENGINE_MODEL_NAME: '', SPEC_NO: '', DESCRIPTION: '', PARAMETER_EARLIER: '', PARAMETER_NEW_EXTENSION: '', TAB12_SC_REF_NO: '' }];\r\n        this.service.lovMasaterList.subscribe((lovMasaterList) => {\r\n            this.engineVarient = $.cordys.json.findObjects(lovMasaterList, 'LOV_TYPE', 'ENGINE_VARIANT');\r\n            // this.engineVarient.forEach((d1: any) => {\r\n            //     d1.HRV_REF_NO = '';\r\n            //     d1.isChecked = false;\r\n            // })\r\n        });\r\n        this.service.OpenAs.subscribe((call1) => {\r\n            this.openAs = call1;\r\n        });\r\n        this.subscription = this.service.callTable4G.subscribe((call) => {\r\n            if (this.datavalidate(call) == 'table12') {\r\n                this.updateFdHlTab12SpecChanges();\r\n                this.updateFdHlTable12();\r\n            }\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        for (let propName in changes) {\r\n            // if (propName == 'engineVariantStr') {\r\n            //   let chng = changes[propName];\r\n            //   this.engineVariantStr = chng.currentValue;\r\n            // }\r\n            if (propName == 'nameArrStr') {\r\n                let chng = changes[propName];\r\n                this.nameArrStr = chng.currentValue;\r\n                this.form.MODEL_VARIANTS = this.nameArrStr;\r\n            }\r\n            if (propName == 'HR_REF_NO') {\r\n                let chng = changes[propName];\r\n                this.HR_REF_NO = chng.currentValue;\r\n                if (this.datavalidate(this.HR_REF_NO) != '') {\r\n                    this.getData();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.getmanufacureData();\r\n        this.getFDHLRequestVariantDetails();\r\n    }\r\n    ngAfterViewInit() {\r\n    }\r\n    ngOnDestroy() {\r\n        var _a;\r\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\r\n    }\r\n    clear() {\r\n        this.specificationArr.forEach((obj) => {\r\n            obj.ENGINE_MODEL_NAME = null;\r\n            obj.SPEC_NO = null;\r\n            obj.DESCRIPTION = null;\r\n            obj.PARAMETER_EARLIER = null;\r\n            obj.PARAMETER_NEW_EXTENSION = null;\r\n        });\r\n        this.form = {\r\n            MANUFACTURER: '',\r\n            MODEL_VARIANTS: '',\r\n            CMVR_CERTIFICATE_NO: '',\r\n            CMVR_CERTIFICATE_DATE: '',\r\n            SPECIFICATION_NO: '',\r\n            EXTENSION_DATE: '',\r\n            EXTENSION_SPEC_REV: '',\r\n            NATURE_OF_CHANGE: ''\r\n        };\r\n        this.manufacture = '';\r\n    }\r\n    clearSave() {\r\n        this.call_modal = false;\r\n        Promise.all([this.updateFdHlTable12(), this.updateFdHlTab12SpecChanges()]).then((res) => {\r\n            this.call_modal = true;\r\n            this.data_send = { text: 'Table12 data saved successfully', active: this.call_modal };\r\n        });\r\n    }\r\n    selectManufacture(e) {\r\n        this.manufactureArr.filter((data) => {\r\n            if (data.ADDR_NAME == e.target.value) {\r\n                this.form.MANUFACTURER = data.ADDRESS;\r\n            }\r\n        });\r\n    }\r\n    addSpecifications() {\r\n        this.specificationArr.push({ ENGINE_MODEL_NAME: '', SPEC_NO: '', DESCRIPTION: '', PARAMETER_EARLIER: '', PARAMETER_NEW_EXTENSION: '', TAB12_SC_REF_NO: '' });\r\n    }\r\n    updateFdHlTab12SpecChanges() {\r\n        return new Promise((resolve, reject) => {\r\n            let ParamTuple = [];\r\n            var params = {};\r\n            for (var obj of this.specificationArr) {\r\n                if (this.datavalidate(obj.TAB12_SC_REF_NO) == \"\") {\r\n                    params = {\r\n                        'new': {\r\n                            'FD_HL_TAB12_SPEC_CHANGES': {\r\n                                'TAB12_SC_REF_NO': '',\r\n                                'HR_REF_NO': this.HR_REF_NO,\r\n                                'ENGINE_MODEL_NAME': obj.ENGINE_MODEL_NAME,\r\n                                'SPEC_NO': obj.SPEC_NO,\r\n                                'DESCRIPTION': obj.DESCRIPTION,\r\n                                'PARAMETER_EARLIER': obj.PARAMETER_EARLIER,\r\n                                'PARAMETER_NEW_EXTENSION': obj.PARAMETER_NEW_EXTENSION\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                else {\r\n                    params = {\r\n                        'old': {\r\n                            'FD_HL_TAB12_SPEC_CHANGES': {\r\n                                'TAB12_SC_REF_NO': obj.TAB12_SC_REF_NO\r\n                            }\r\n                        },\r\n                        'new': {\r\n                            'FD_HL_TAB12_SPEC_CHANGES': {\r\n                                'HR_REF_NO': this.HR_REF_NO,\r\n                                'ENGINE_MODEL_NAME': obj.ENGINE_MODEL_NAME,\r\n                                'SPEC_NO': obj.SPEC_NO,\r\n                                'DESCRIPTION': obj.DESCRIPTION,\r\n                                'PARAMETER_EARLIER': obj.PARAMETER_EARLIER,\r\n                                'PARAMETER_NEW_EXTENSION': obj.PARAMETER_NEW_EXTENSION\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n                ParamTuple.push(params);\r\n            }\r\n            var paramsAll = { 'tuple': ParamTuple };\r\n            this.service.invokeService(\"UpdateFdHlTab12SpecChanges\", paramsAll, this.namespace, true, false)\r\n                .then((res) => {\r\n                this.specificationArr = res;\r\n                resolve('Res success from table12spec');\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n            ;\r\n        });\r\n    }\r\n    updateFdHlTable12() {\r\n        return new Promise((resolve, reject) => {\r\n            let param = {};\r\n            if (this.datavalidate(this.TAB12_REF_NO) == \"\") {\r\n                param = {\r\n                    'tuple': {\r\n                        'new': {\r\n                            'FD_HL_TABLE12': {\r\n                                'TAB12_REF_NO': '',\r\n                                'HR_REF_NO': this.HR_REF_NO,\r\n                                'MANUFACTURER': this.manufacture,\r\n                                'MODEL_VARIANTS': this.form.MODEL_VARIANTS,\r\n                                'CLAUSE_NO': 3.1,\r\n                                'CMVR_CERTIFICATE_NO': this.form.CMVR_CERTIFICATE_NO,\r\n                                'CMVR_CERTIFICATE_DATE': this.service.dateFilter(this.form.CMVR_CERTIFICATE_DATE),\r\n                                'SPECIFICATION_NO': this.form.SPECIFICATION_NO,\r\n                                'EXTENSION_DATE': this.service.dateFilter(this.form.EXTENSION_DATE),\r\n                                'EXTENSION_SPEC_REV': this.form.EXTENSION_SPEC_REV,\r\n                                'NATURE_OF_CHANGE': this.form.NATURE_OF_CHANGE\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                param = {\r\n                    'tuple': {\r\n                        'old': {\r\n                            'FD_HL_TABLE12': {\r\n                                'TAB12_REF_NO': this.TAB12_REF_NO\r\n                            }\r\n                        },\r\n                        'new': {\r\n                            'FD_HL_TABLE12': {\r\n                                'HR_REF_NO': this.HR_REF_NO,\r\n                                'MANUFACTURER': this.manufacture,\r\n                                'MODEL_VARIANTS': this.form.MODEL_VARIANTS,\r\n                                'CLAUSE_NO': 3.1,\r\n                                'CMVR_CERTIFICATE_NO': this.form.CMVR_CERTIFICATE_NO,\r\n                                'CMVR_CERTIFICATE_DATE': this.service.dateFilter(this.form.CMVR_CERTIFICATE_DATE),\r\n                                'SPECIFICATION_NO': this.form.SPECIFICATION_NO,\r\n                                'EXTENSION_DATE': this.service.dateFilter(this.form.EXTENSION_DATE),\r\n                                'EXTENSION_SPEC_REV': this.form.EXTENSION_SPEC_REV,\r\n                                'NATURE_OF_CHANGE': this.form.NATURE_OF_CHANGE\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            this.service.invokeService(\"UpdateFdHlTable12\", param, this.namespace, true, false)\r\n                .then((res) => {\r\n                this.TAB12_REF_NO = res[0].TAB12_REF_NO;\r\n                resolve('Res success from table12');\r\n            }).catch((e) => {\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    getmanufacureData() {\r\n        this.service.invokeService(\"GetFD_HLAddressDetails\", null, this.namespace, true, false)\r\n            .then((res) => {\r\n            res.filter((obj) => {\r\n                if (obj.ADDR_TYPE == 'MANUFACTURER') {\r\n                    this.manufactureArr.push({ ADDRESS: obj.ADDRESS, ADDR_NAME: obj.ADDR_NAME, });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    async getData() {\r\n        setTimeout(async () => {\r\n            var param = { HR_REF_NO: this.HR_REF_NO };\r\n            await this.service.invokeService(\"GetFDHLTable12Details\", param, this.namespace, true, false)\r\n                .then((res) => {\r\n                this.TAB12_REF_NO = res[0].TAB12_REF_NO;\r\n                this.form = {\r\n                    MANUFACTURER: '',\r\n                    MODEL_VARIANTS: res[0].MODEL_VARIANTS,\r\n                    CMVR_CERTIFICATE_NO: res[0].CMVR_CERTIFICATE_NO,\r\n                    CMVR_CERTIFICATE_DATE: this.datavalidate(this.datepipe.transform(res[0].CMVR_CERTIFICATE_DATE, 'dd-MM-yyyy')),\r\n                    SPECIFICATION_NO: res[0].SPECIFICATION_NO,\r\n                    EXTENSION_DATE: this.datavalidate(this.datepipe.transform(res[0].EXTENSION_DATE, 'dd-MM-yyyy')),\r\n                    EXTENSION_SPEC_REV: res[0].EXTENSION_SPEC_REV,\r\n                    NATURE_OF_CHANGE: res[0].NATURE_OF_CHANGE\r\n                };\r\n                this.manufacture = this.datavalidate(res[0].MANUFACTURER);\r\n                let obj = { target: { value: res[0].MANUFACTURER } };\r\n                this.selectManufacture(obj);\r\n            });\r\n            this.service.invokeService(\"GetFDHLTable12SpecChangesDetails\", param, this.namespace, true, false)\r\n                .then((res) => {\r\n                this.specificationArr = res;\r\n            });\r\n        }, 200);\r\n    }\r\n    async getFDHLRequestVariantDetails() {\r\n        var param = { HR_REF_NO: this.HR_REF_NO };\r\n        let VariantNameArr = [];\r\n        let VariantIDArr = [];\r\n        await this.service.invokeService(\"GetFDHLRequestVariantDetails\", param, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineVarient.filter((d) => {\r\n                res.forEach((d1) => {\r\n                    if (d.LOV_ID == d1.VARIANT) {\r\n                        VariantNameArr.push(d.LOV_DESC);\r\n                        VariantIDArr.push(d.LOV_ID);\r\n                    }\r\n                });\r\n            });\r\n            // this.form.MODEL_VARIANTS=VariantNameArr.toString();\r\n            // this.engineVariantStr=VariantIDArr.toString();\r\n        });\r\n    }\r\n    deleteSpecification(obj) {\r\n        this.call_modal = false;\r\n        if (obj.TAB12_SC_REF_NO != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this?',\r\n                header: 'Confirmation',\r\n                icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    let dataObj = {\r\n                        tuple: {\r\n                            old: {\r\n                                FD_HL_TAB12_SPEC_CHANGES: {\r\n                                    TAB12_SC_REF_NO: obj.TAB12_SC_REF_NO,\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n                    this.service.invokeService(\"UpdateFdHlTab12SpecChanges\", dataObj, this.namespace, true, false).\r\n                        then((ajaxResponse) => {\r\n                        this.specificationArr.splice(this.specificationArr.indexOf(obj), 1);\r\n                    });\r\n                },\r\n                reject: (type) => {\r\n                    switch (type) {\r\n                        case ConfirmEventType.REJECT:\r\n                            break;\r\n                        case ConfirmEventType.CANCEL:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.specificationArr.splice(this.specificationArr.indexOf(obj), 1);\r\n        }\r\n    }\r\n    datavalidate(data) {\r\n        if (data != undefined && data != null && data != \"\") {\r\n            return data;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n};\r\nTable12Component.ctorParameters = () => [\r\n    { type: Services },\r\n    { type: DatePipe },\r\n    { type: ConfirmationService }\r\n];\r\nTable12Component.propDecorators = {\r\n    nameArrStr: [{ type: Input }],\r\n    HR_REF_NO: [{ type: Input }]\r\n};\r\nTable12Component = __decorate([\r\n    Component({\r\n        selector: 'app-table12',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        providers: [ConfirmationService, MessageService],\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], Table12Component);\r\nexport { Table12Component };\r\n"]},"metadata":{},"sourceType":"module"}