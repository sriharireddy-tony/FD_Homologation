{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\SVN Projects\\\\FD_Homologation_LatesT\\\\FD_Homologation\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./create-new-request.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./create-new-request.component.css?ngResource\";\nimport { DatePipe, Location } from '@angular/common';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { MenuComponent } from '../menu/menu.component';\nimport { Services } from '../services/services';\nimport { Chapter2Component } from './chapter2/chapter2.component';\nimport { CoveringLetterComponent } from './covering-letter/covering-letter.component';\nimport { Table12Component } from './table12/table12.component';\nimport { Table4gComponent } from './table4g/table4g.component';\nlet CreateNewRequestComponent = class CreateNewRequestComponent {\n  constructor(service, datepipe, fb, activatedRoute, location, menuComp, router, confirmationService) {\n    this.service = service;\n    this.datepipe = datepipe;\n    this.fb = fb;\n    this.activatedRoute = activatedRoute;\n    this.location = location;\n    this.menuComp = menuComp;\n    this.router = router;\n    this.confirmationService = confirmationService;\n    this.namespace = \"http://schemas.cordys.com/FD_HL_WSPackage\";\n    this.displayPopup = 'none';\n    this.DOC_REF_NO = '';\n    this.loginUserID = '';\n    this.isSubmitted = false;\n    this.HR_REF_NO = '';\n    this.REQUEST_NO = '';\n    this.instance_id = '';\n    this.taskId = '';\n    this.openAs = '';\n    this.actRole = '';\n    this.actStage = '';\n    this.AAHPopup = 'none';\n    this.AAHArr = [];\n    this.engineVarient = [];\n    this.dis2 = false;\n    this.call_modal = false;\n    this.documentsArr = [];\n    this.checkedRows = [];\n    this.maindocArr = [];\n    this.ENGINE_FAMILY_NO_Arr = [];\n    this.ReportName = [];\n    this.isSubmitted1 = false;\n    this.routeName = '';\n    this.CLONE_REQUEST_NO = '';\n    this.remarks = '';\n    this.remarkSubmit = false;\n    this.reguTable12 = '';\n    this.reguCovering = '';\n    this.reguTable4G = '';\n    this.reguChapter2 = '';\n    this.OpenAs = '';\n    this.coveringWordDoc = '';\n    this.table12WordDoc = '';\n    this.ARAITrue = true;\n    this.engineFamilyDataArr = [];\n    this.isValidApproval = '';\n    this.procesStatus = '';\n    this.emisionComplaince = ''; // idArr: any = [];\n\n    this.nameArr = [];\n    this.variantsArr = [];\n    this.variantsArr1 = []; // idArrStr: string = ''\n\n    this.nameArrStr = '';\n    this.table4gVar = [];\n    this.chapter2Var = [];\n    this.HRV_REF_NOArr = [];\n    this.initValue = 0;\n    this.gridDocSize = 0;\n    this.certdocumentsArr = [];\n    this.repdocumentsArr = [];\n    this.appdocumentsArr = [];\n    this.dradocumentsArr = [];\n    this.invdocumentsArr = [];\n    this.docSubmit = false;\n    this.createRequestForm = this.fb.group({\n      LOCATION: ['', Validators.required],\n      CERTIFICATION_TYPE: ['', Validators.required],\n      ENGINE_FAMILY_NO: ['', Validators.required],\n      WBS: ['', Validators.required],\n      COST_CENTER: ['', Validators.required],\n      ARAI: [''],\n      APEX: ['']\n    });\n    this.valid = false;\n    this.saveType = '';\n    this.isSaveSubm = false;\n    this.newREQUEST_NO = '';\n    this.Table12EmptyArr = [];\n    this.chapter2EmptyArr = [];\n    this.Table12Arr = [];\n    this.chapter2Arr = [];\n    this.getEngineFamily();\n    this.loadPage();\n    this.callReqManagementEmpty();\n    this.service.lovMasaterList.subscribe(lovMasaterList => {});\n    this.service.loginUserID.subscribe(loginUserID => {\n      this.loginUserID = loginUserID;\n    });\n    this.subscription = this.service.createPageEvents.subscribe(call => {\n      switch (call) {\n        case 'save':\n          this.saveDetails('save');\n          break;\n\n        case 'submit':\n          this.saveDetails('submit');\n          break;\n\n        case 'obsolete':\n          this.completeTask(4, this.openAs, '');\n          break;\n\n        case 'clear':\n          this.clear();\n          break;\n\n        case 'seekClarification':\n          this.service.OpenAs.next(false);\n          this.completeTask(0, this.openAs, '');\n          break;\n\n        case 'reject':\n          this.completeTask(3, this.openAs, '');\n          break;\n\n        case 'sentToARAI':\n          this.sentToARAI();\n          break;\n\n        case 'complete':\n          this.saveARAI('complete');\n          break;\n\n        case 'docSave':\n          this.saveARAI('docsave');\n          break;\n\n        case 'clone':\n          this.saveDetails('clone');\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    this.CLONE_REQUEST_NO = this.datavalidate(changes['requestIDClone'].currentValue.REQUEST_NO);\n    this.cloneHRNo = this.datavalidate(changes['cloneHRNo'].currentValue);\n  }\n\n  ngOnInit() {\n    this.getReportName();\n    this.getFDHLReportNameAndVersion();\n    this.activatedRoute.url.subscribe(urlSegments => {\n      this.routeName = urlSegments[0].path;\n    });\n  }\n\n  getFDHLReportNameAndVersion() {\n    this.service.invokeService(\"GetFDHLReportNameAndVersion\", null, this.namespace, true, false).then(res => {\n      res.forEach(obj => {\n        if (obj.REPORT_REF_ID == 1) {\n          this.reguTable12 = obj.REPORT_VERSION;\n        } else if (obj.REPORT_REF_ID == 2) {\n          this.reguCovering = obj.REPORT_VERSION;\n        } else if (obj.REPORT_REF_ID == 3) {\n          this.reguTable4G = obj.REPORT_VERSION;\n        } else if (obj.REPORT_REF_ID == 4) {\n          this.reguChapter2 = obj.REPORT_VERSION;\n        }\n      });\n    });\n  }\n\n  cloneFdHlRequest() {\n    this.call_modal = false;\n    let obj = {\n      HR_REF_NO: this.HR_REF_NO,\n      CHR_REF_NO: this.cloneHRNo,\n      CLONE_REQUEST_NO: this.CLONE_REQUEST_NO\n    };\n    this.service.invokeService(\"CloneFdHlRequest\", obj, this.namespace, true, false).then(res => {\n      var _a, _b, _c, _d;\n\n      this.service.cloneHRNo.next(this.cloneHRNo);\n      (_a = this.covering) === null || _a === void 0 ? void 0 : _a.getFDHLCoveringLetterDetails();\n      (_b = this.covering) === null || _b === void 0 ? void 0 : _b.getFDHLCLEnClosureDetails();\n      (_c = this.table12) === null || _c === void 0 ? void 0 : _c.getData();\n      (_d = this.table12) === null || _d === void 0 ? void 0 : _d.getFDHLRequestVariantDetails(); // this.getFDHLEngineModelsByFamily();\n      // this.getFDHLRequestVariantDetails(this.HR_REF_NO);\n\n      Promise.all([this.getFDHLRequestDetails(this.HR_REF_NO), this.callReqManagement1(this.HR_REF_NO)]).then(res => {\n        // this.table4g?.getData();\n        // this.table4g?.getMesurment();\n        // this.table4g?.getMode();\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: `New Request Created Successfully`,\n            'text1': `Request ID`,\n            'text2': `${this.REQUEST_NO}`,\n            active: this.call_modal\n          };\n        }, 0);\n      });\n    });\n  }\n\n  getopenAs() {\n    let routerName = window.location.href.split('/')[window.location.href.split('/').length - 1];\n\n    if (routerName.includes('?')) {\n      this.OpenAs = routerName.split('?')[1].split('&')[1].split('=')[1];\n\n      if (this.OpenAs == 'customInboxTask' && this.actStage == '2' || this.OpenAs == 'completed' || this.OpenAs == 'dashboard') {\n        this.dis2 = true;\n        this.service.OpenAs.next(true);\n      } else {\n        this.dis2 = false;\n        this.service.OpenAs.next(false);\n      }\n    }\n  }\n\n  engineCheckbox(HRV_REF_NO) {\n    if (this.dis2) {\n      return true;\n    } else {\n      if (HRV_REF_NO != '') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  clear() {\n    var _a, _b;\n\n    if (this.datavalidate(this.HR_REF_NO) == '') {\n      this.createRequestForm.patchValue({\n        LOCATION: '',\n        CERTIFICATION_TYPE: '',\n        ENGINE_FAMILY_NO: '',\n        WBS: '',\n        COST_CENTER: ''\n      });\n      this.remarks = '';\n      this.variantsArr = [];\n      this.nameArr = [];\n    } else {\n      this.createRequestForm.patchValue({\n        WBS: '',\n        COST_CENTER: ''\n      });\n      this.remarks = '';\n      (_a = this.covering) === null || _a === void 0 ? void 0 : _a.clear();\n      (_b = this.table12) === null || _b === void 0 ? void 0 : _b.clear();\n      this.engineVarient.forEach(obj => {\n        var _a, _b;\n\n        if (obj.HRV_REF_NO != '') {\n          if (this.emisionComplaince == 'TR4') {\n            (_a = this.table4g) === null || _a === void 0 ? void 0 : _a.clear(obj.HRV_REF_NO, obj.VARIANT);\n          } else if (this.emisionComplaince == 'B3A') {\n            (_b = this.chapter2) === null || _b === void 0 ? void 0 : _b.clear(obj.HRV_REF_NO, obj.VARIANT);\n          }\n        }\n      });\n    }\n  }\n\n  onButtonClick(event, type) {\n    event.stopPropagation(); //  if(type='covering'){\n\n    let obj = {\n      FDHL_DOC_TYPE: type,\n      HR_REF_NO: this.HR_REF_NO,\n      HRV_REF_NO: '',\n      REPORT_REF_ID: ''\n    };\n    this.service.invokeService(\"GenerateFDHlWordDocument\", obj, this.namespace, true, false).then(res => {\n      this.coveringWordDoc = res[0].generateFDHlWordDocument;\n      this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlWordDocument, res[0].generateFDHlWordDocument + \";reportpath\", this.namespace, true, false);\n    });\n  }\n\n  consolidate() {\n    let type = '';\n    let refId = 0;\n\n    if (this.emisionComplaince == 'TR4') {\n      type = 'Table 4G';\n      refId = 3;\n    } else if (this.emisionComplaince == 'B3A') {\n      type = 'Chapter 2';\n      refId = 4;\n    }\n\n    let obj = {\n      FDHL_DOC_TYPE: type,\n      HR_REF_NO: this.HR_REF_NO,\n      HRV_REF_NO: '',\n      REPORT_REF_ID: refId\n    };\n    this.service.invokeService(\"GenerateFDHlConsolidateReport\", obj, this.namespace, true, false).then(res => {\n      this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlConsolidateReport, res[0].generateFDHlConsolidateReport + \";reportpath\", this.namespace, true, false);\n    });\n  }\n\n  ARAIValid() {\n    if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '') {\n      this.isSubmitted1 = true;\n      this.ARAITrue = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  sentToARAI() {\n    this.call_modal = false;\n\n    if (this.ARAIValid()) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          'text': 'Please Enter ARAI Request Number',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    let dataObj1 = {};\n\n    if (this.datavalidate(this.HR_REF_NO) != '') {\n      dataObj1 = {\n        tuple: {\n          old: {\n            FD_HL_REQUEST_DETAILS: {\n              HR_REF_NO: this.HR_REF_NO\n            }\n          },\n          new: {\n            FD_HL_REQUEST_DETAILS: {\n              'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value)\n            }\n          }\n        }\n      };\n    }\n\n    this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj1, this.namespace, true, false).then(res => {\n      let dataObj = {\n        HR_REF_NO: this.HR_REF_NO,\n        from_User: this.loginUserID,\n        to_User: '',\n        mailType: 'Send to ARAI',\n        stage: this.actStage,\n        status: 5,\n        taskId: this.taskId,\n        remarks: this.remarks\n      };\n      this.service.invokeService(\"SendFD_HLCustomMailWrapper\", dataObj, this.namespace, true, false).then(res => {\n        // this.ARAIFlag = res[0].sendFD_HLCustomMailWrapper;\n        let dataObj = {\n          HR_REF_NO: this.HR_REF_NO\n        };\n        this.service.invokeService(\"GetFDHLRequestDetails\", dataObj, this.namespace, true, false).then(res => {\n          this.procesStatus = res[0].PROCESS_STATUS;\n          this.service.ARAIFlag.next(this.procesStatus);\n        });\n        this.getFD_HLHistoryDetailsByHR_RefNo();\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            'text': 'Task Sent to ARAI Successfully',\n            active: this.call_modal\n          };\n        }, 0);\n      });\n    });\n  }\n\n  getEngineFamily() {\n    let dataObj = {\n      ENGINE_M_REF_ID: ''\n    };\n    this.service.invokeService(\"GetFDHLEngineFamilyDetails\", dataObj, this.namespace, true, false).then(res => {\n      this.engineFamilyDataArr = res;\n      res.forEach(data => {\n        this.ENGINE_FAMILY_NO_Arr.push({\n          RefNo: data.ENGINE_F_REF_ID,\n          ENGINE_FAMILY_NO: data.ENGINE_FAMILY_NO,\n          EMISSION_COMPLIANCE: data.EMISSION_COMPLIANCE\n        });\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n\n  backBtnLink() {\n    if (this.HR_REF_NO != '' && this.datavalidate(this.openAs) != '') {\n      return true;\n    }\n\n    if (this.HR_REF_NO == '') {\n      return false;\n    }\n\n    if (this.HR_REF_NO != '' && this.datavalidate(this.openAs) == '') {\n      return false;\n    }\n\n    return true;\n  }\n\n  validTypeApproval() {\n    this.call_modal = false;\n    let obj = {\n      ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value\n    };\n    this.service.invokeService(\"GetFDHLApprovalRequestNo\", obj, this.namespace, true, false).then(res => {\n      // this.isValidApproval = this.datavalidate(res[0].REQUEST_NO)\n      if (res.length == 0) {\n        if (this.createRequestForm.controls['CERTIFICATION_TYPE'].value == 'Amendment' && this.createRequestForm.controls['ENGINE_FAMILY_NO'].value != '') {\n          setTimeout(() => {\n            this.call_modal = true;\n            this.data_send = {\n              text: 'Please Create Type Approval Request',\n              active: this.call_modal\n            };\n            this.createRequestForm.patchValue({\n              CERTIFICATION_TYPE: ''\n            });\n          }, 0);\n        }\n      } else {\n        if (res[0].CERTIFICATION_TYPE == \"Approval\" && this.createRequestForm.controls['CERTIFICATION_TYPE'].value == 'Approval') {\n          setTimeout(() => {\n            this.call_modal = true;\n            this.data_send = {\n              text: this.datavalidate(res[0].REQUEST_NO) + ' is already created',\n              text1: 'For Type Approval with Engine Family No. ' + this.createRequestForm.controls['ENGINE_FAMILY_NO'].value,\n              active: this.call_modal\n            };\n            this.createRequestForm.patchValue({\n              CERTIFICATION_TYPE: ''\n            });\n          }, 0);\n        }\n      }\n    });\n  }\n\n  back() {\n    let variable = this.OpenAs == 'saved' ? 'saved' : this.OpenAs == 'customInboxTask' ? 'inbox' : this.OpenAs == 'completed' ? 'completedTasks' : '';\n    this.menuComp.menuHideFun();\n    this.location.back(); // this.router.navigate(['inbox']);\n\n    this.service.routeChange.next(variable);\n    this.service.createPageEvents.next('');\n    this.service.OpenAs.next(false);\n  }\n\n  workflowHistory() {\n    this.AAHPopup = 'block';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"hidden\";\n  }\n\n  closeWorkFlowDoc() {\n    this.AAHPopup = 'none';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"auto\";\n  }\n\n  getFD_HLHistoryDetailsByHR_RefNo() {\n    let dataObj = {\n      HR_RefNo: this.HR_REF_NO\n    };\n    this.service.invokeService(\"GetFD_HLHistoryDetailsByHR_RefNo\", dataObj, this.namespace, true, false).then(res => {\n      this.AAHArr = res;\n    });\n  }\n\n  getFDHLRequestDetails(arg) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let dataObj = {\n        HR_REF_NO: arg\n      };\n      yield _this2.service.invokeService(\"GetFDHLRequestDetails\", dataObj, _this2.namespace, true, false).then(res => {\n        // this.clarificationType = this.datavalidate(res[0].CERTIFICATION_TYPE)\n        _this2.REQUEST_NO = res[0].REQUEST_NO;\n        _this2.procesStatus = res[0].PROCESS_STATUS;\n        _this2.remarks = _this2.datavalidate(_this2.actStage) == '' ? res[0].REMARKS : '';\n\n        _this2.createRequestForm.patchValue({\n          LOCATION: _this2.datavalidate(res[0].LOCATION),\n          CERTIFICATION_TYPE: _this2.datavalidate(res[0].CERTIFICATION_TYPE),\n          ENGINE_FAMILY_NO: _this2.datavalidate(res[0].ENGINE_FAMILY_NO),\n          WBS: _this2.datavalidate(res[0].WBS),\n          COST_CENTER: _this2.datavalidate(res[0].COST_CENTER),\n          ARAI: _this2.datavalidate(res[0].ARAI_NO),\n          APEX: _this2.datavalidate(res[0].APEX_NO)\n        }); // if(this.routeName!='clone'){\n\n\n        _this2.getFDHLEngineModelsByFamily();\n\n        _this2.service.ARAIFlag.next(_this2.procesStatus); // }\n\n      });\n    })();\n  }\n\n  getFD_HLDocDetailsByHR_RefNo(arg) {\n    this.documentsArr = [];\n    this.certdocumentsArr = [];\n    this.repdocumentsArr = [];\n    this.appdocumentsArr = [];\n    this.dradocumentsArr = [];\n    this.invdocumentsArr = [];\n    this.initValue = 0;\n    this.gridDocSize = 0;\n    let dataObj = {\n      HR_RefNo: arg\n    };\n    this.service.invokeService(\"GetFD_HLDocDetailsByHR_RefNo\", dataObj, this.namespace, true, false).then(res => {\n      res.filter(doc => {\n        switch (doc.DOC_TYPE) {\n          case 'Main':\n            this.documentsArr.push(doc);\n            this.initValue += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Certificates':\n            this.certdocumentsArr.push(doc);\n            this.gridDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Reports':\n            this.repdocumentsArr.push(doc);\n            this.gridDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Approved':\n            this.appdocumentsArr.push(doc);\n            this.gridDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Drawings':\n            this.dradocumentsArr.push(doc);\n            this.gridDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          case 'Invoice':\n            this.invdocumentsArr.push(doc);\n            this.gridDocSize += parseFloat(doc.DOC_SIZE);\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  getFDHLEngineModelsByFamily() {\n    this.call_modal = false;\n    this.variantsArr = [];\n    this.variantsArr1 = [];\n\n    if (this.datavalidate(this.HR_REF_NO) == '') {\n      this.callReqManagement1(this.HR_REF_NO);\n    }\n\n    let dataObj = {\n      ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value\n    };\n    this.service.invokeService(\"GetFDHLEngineModelsByFamily\", dataObj, this.namespace, true, false).then(res => {\n      this.engineVarient = res;\n      this.engineVarient.forEach(d1 => {\n        d1.HRV_REF_NO = '';\n        d1.isChecked = false;\n      });\n      this.ENGINE_FAMILY_NO_Arr.forEach(d => {\n        if (d.ENGINE_FAMILY_NO == this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\n          this.emisionComplaince = d.EMISSION_COMPLIANCE;\n        }\n      });\n\n      if (this.datavalidate(this.openAs) == '') {\n        this.validTypeApproval();\n      }\n\n      this.isvarientCheck();\n    });\n  }\n\n  isvarientCheck() {\n    let check = false;\n\n    if (this.engineVarient == 0) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Please create at least one variant',\n          active: this.call_modal\n        };\n      }, 0);\n      check = true;\n    }\n\n    return check;\n  }\n\n  loadPage() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.activatedRoute.queryParams.subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (params) {\n          _this3.HR_REF_NO = params.HR_REF_NO;\n          _this3.taskId = params['taskId'];\n          _this3.openAs = params['openAs'];\n\n          _this3.service.actStag.next('');\n\n          if (_this3.taskId) {\n            $.cordys.json.defaults.removeNamespacePrefix = true;\n            yield $.cordys.workflow.getTaskDetails(_this3.taskId).done(tData => {\n              // this.taskState = tData.State;\n              _this3.HR_REF_NO = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.HR_REF_NO;\n              _this3.actRole = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.ACT_ROLE;\n              _this3.actStage = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.STAGE;\n              let varObj = _this3.actRole + ',' + _this3.actStage;\n\n              _this3.service.roleStage.next(varObj);\n\n              _this3.service.actStag.next(_this3.actStage);\n\n              _this3.getopenAs();\n            });\n          }\n\n          if (_this3.datavalidate(_this3.HR_REF_NO) != '') {\n            let obj = {\n              'HR_REF_NO': _this3.HR_REF_NO,\n              'actRole': _this3.actRole,\n              'actStage': _this3.actStage\n            };\n\n            _this3.service.sharingData(obj, 'HR_REF_NO');\n\n            _this3.service.taskPage.next(true);\n\n            _this3.getFDHLRequestDetails(_this3.HR_REF_NO);\n\n            _this3.callReqManagement1(_this3.HR_REF_NO);\n\n            _this3.getFD_HLDocDetailsByHR_RefNo(_this3.HR_REF_NO);\n\n            _this3.getFD_HLHistoryDetailsByHR_RefNo();\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n\n      _this3.getopenAs();\n    })();\n  }\n\n  variantSelect(obj) {\n    if (!obj.isChecked) {\n      // this.idArr.splice(this.idArr.indexOf(obj.LOV_ID), 1)\n      this.nameArr.splice(this.nameArr.indexOf(obj.VARIANT), 1);\n\n      if (this.datavalidate(obj.HRV_REF_NO) == '') {} else {\n        let param = {\n          'tuple': {\n            'old': {\n              'FD_HL_REQUEST_VARIANTS': {\n                'HRV_REF_NO': obj.HRV_REF_NO\n              }\n            }\n          }\n        };\n        this.service.invokeService(\"UpdateFdHlRequestVariants\", param, this.namespace, true, false).then(res => {\n          obj.isChecked = false;\n        });\n      }\n\n      this.variantsArr.forEach(d => {\n        if (d.LOV_DESC == obj.VARIANT) {\n          this.variantsArr.splice(this.variantsArr.indexOf(d), 1);\n        }\n      });\n      this.variantsArr1.forEach(d1 => {\n        if (d1.LOV_DESC == obj.VARIANT) {\n          this.variantsArr1.splice(this.variantsArr1.indexOf(d1), 1);\n        }\n      });\n    } else {\n      // this.idArr.push(obj.VARIANT)\n      this.nameArr.push(obj.VARIANT);\n      let temp = {\n        HRV_REF_NO: obj.HRV_REF_NO,\n        LOV_DESC: obj.VARIANT,\n        Table12Arr: [],\n        Measurment: [],\n        Mode: [{\n          innerArr: []\n        }]\n      };\n      let temp1 = {\n        HRV_REF_NO: obj.HRV_REF_NO,\n        LOV_DESC: obj.VARIANT,\n        Table12Arr1: [],\n        Measurment: [],\n        Mode: [{\n          innerArr: []\n        }]\n      };\n      this.variantsArr.push(temp);\n      this.variantsArr1.push(temp1);\n    } // this.idArrStr = this.idArr.toString();\n\n\n    this.nameArrStr = [...new Set(this.nameArr)].toString();\n    this.variantsArr = [...new Set(this.variantsArr)];\n    this.variantsArr1 = [...new Set(this.variantsArr1)];\n    this.getFdHlRequestManagement();\n    this.getFdHlRequestManagement1();\n  }\n\n  getFDHLRequestVariantDetails(arg) {\n    this.HRV_REF_NOArr = [];\n    this.nameArr = [];\n    var param = {\n      HR_REF_NO: arg\n    };\n    this.service.invokeService(\"GetFDHLRequestVariantDetails\", param, this.namespace, true, false).then(res => {\n      this.engineVarient.filter(d => {\n        res.forEach(d1 => {\n          if (d.VARIANT == d1.VARIANT) {\n            d.HRV_REF_NO = d1.HRV_REF_NO;\n            this.HRV_REF_NOArr.push(d1.HRV_REF_NO);\n            this.nameArr.push(d1.VARIANT);\n            d.isChecked = true;\n            this.variantsArr.push({\n              HR_REF_NO: d1.HR_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              LOV_DESC: d.VARIANT,\n              Table12Arr: [],\n              Measurment: [],\n              Mode: [{\n                innerArr: []\n              }]\n            });\n            this.variantsArr1.push({\n              HR_REF_NO: d1.HR_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              LOV_DESC: d.VARIANT,\n              Table12Arr1: [],\n              Measurment: [],\n              Mode: [{\n                innerArr: []\n              }]\n            });\n          }\n        });\n      });\n      this.getFdHlRequestManagement();\n      this.getFdHlRequestManagement1();\n    });\n  }\n\n  saveVariants() {\n    let ParamTuple = [];\n    var params = {};\n\n    for (var obj of this.engineVarient) {\n      // if(obj.isChecked){\n      if (this.datavalidate(obj.HRV_REF_NO) == \"\") {\n        params = {\n          'new': {\n            'FD_HL_REQUEST_VARIANTS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'VARIANT': this.datavalidate(obj.VARIANT),\n              'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\n            }\n          }\n        };\n      } else {\n        params = {\n          'old': {\n            'FD_HL_REQUEST_VARIANTS': {\n              'HRV_REF_NO': obj.HRV_REF_NO\n            }\n          },\n          'new': {\n            'FD_HL_REQUEST_VARIANTS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'VARIANT': this.datavalidate(obj.VARIANT),\n              'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\n            }\n          }\n        };\n      } // }\n\n\n      if (obj.isChecked) {\n        ParamTuple.push(params);\n      }\n    }\n\n    var paramsAll = {\n      'tuple': ParamTuple\n    };\n    this.service.invokeService(\"UpdateFdHlRequestVariants\", paramsAll, this.namespace, true, false).then(res => {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n\n      res.forEach(obj => {\n        this.HRV_REF_NOArr.push(obj.HRV_REF_NO);\n      });\n      this.engineVarient.filter(d => {\n        res.forEach(d1 => {\n          if (d.VARIANT == d1.VARIANT) {\n            d.HRV_REF_NO = d1.HRV_REF_NO;\n          }\n        });\n      }); // this.service.callTable4G.next('table4g');\n      // this.service.callTable4G.next('chapter2');\n      // this.service.callTable4G.next('table12');\n      // this.service.callTable4G.next('covering');\n\n      if (this.saveType != 'clone') {\n        if (this.emisionComplaince == 'TR4') {\n          Promise.all([(_a = this.covering) === null || _a === void 0 ? void 0 : _a.updateFdHlCoveringLetter(), (_b = this.covering) === null || _b === void 0 ? void 0 : _b.updateFdHlClEnclosure(), (_c = this.table4g) === null || _c === void 0 ? void 0 : _c.save(), (_d = this.table12) === null || _d === void 0 ? void 0 : _d.updateFdHlTable12(), (_e = this.table12) === null || _e === void 0 ? void 0 : _e.updateFdHlTab12SpecChanges(), (_f = this.table4g) === null || _f === void 0 ? void 0 : _f.saveMode(), (_g = this.table4g) === null || _g === void 0 ? void 0 : _g.saveMeasurment()]).then(res => {\n            this.saveDocuments();\n          }).catch(error => {\n            alert('error: data not saved successfully');\n          });\n        } else if (this.emisionComplaince == 'B3A') {\n          Promise.all([(_h = this.covering) === null || _h === void 0 ? void 0 : _h.updateFdHlCoveringLetter(), (_j = this.covering) === null || _j === void 0 ? void 0 : _j.updateFdHlClEnclosure(), (_k = this.chapter2) === null || _k === void 0 ? void 0 : _k.save(), (_l = this.table12) === null || _l === void 0 ? void 0 : _l.updateFdHlTable12(), (_m = this.table12) === null || _m === void 0 ? void 0 : _m.updateFdHlTab12SpecChanges(), (_o = this.chapter2) === null || _o === void 0 ? void 0 : _o.saveMode(), (_p = this.chapter2) === null || _p === void 0 ? void 0 : _p.saveMeasurment()]).then(res => {\n            this.saveDocuments();\n          }).catch(error => {\n            alert('error: data not saved successfully');\n          });\n        } else {\n          Promise.all([(_q = this.covering) === null || _q === void 0 ? void 0 : _q.updateFdHlCoveringLetter(), (_r = this.covering) === null || _r === void 0 ? void 0 : _r.updateFdHlClEnclosure(), (_s = this.table12) === null || _s === void 0 ? void 0 : _s.updateFdHlTable12(), (_t = this.table12) === null || _t === void 0 ? void 0 : _t.updateFdHlTab12SpecChanges()]).then(res => {\n            this.saveDocuments();\n          }).catch(error => {\n            alert('error: data not saved successfully');\n          });\n        }\n      } else {\n        this.cloneFdHlRequest();\n      }\n    });\n  }\n\n  getReportName() {\n    this.service.invokeService(\"GetFDHLReportNames\", null, this.namespace, true, false).then(res => {\n      this.ReportName = res;\n      res.forEach(d => {\n        if (d.REPORT_NAME == 'Table 4G') {\n          this.table4gVar.push(d);\n        } else if (d.REPORT_NAME == 'Chapter 2') {\n          this.chapter2Var.push(d);\n        }\n      });\n    });\n  }\n\n  openDoc() {\n    this.displayPopup = 'block';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"hidden\"; // body.style.opacity = '0.85';\n  }\n\n  closeDoc() {\n    this.displayPopup = 'none';\n    const body = document.querySelector(\"body\");\n    body.style.overflow = \"auto\"; // body.style.opacity = '1';\n  }\n\n  downloadFile(doc) {\n    this.service.downloadFile(\"DownloadDocument\", doc.DOC_NAME, doc.DOC_PATH, this.namespace);\n  }\n\n  checkAllCheckBox(ev) {\n    this.documentsArr.forEach(x => x.checked = ev.target.checked);\n    ev.target.checked ? this.documentsArr.forEach(x => {\n      this.checkedRows.push(x);\n    }) : this.checkedRows = [];\n  }\n\n  isAllCheckBoxChecked() {\n    return this.documentsArr.every(p => p.checked);\n  }\n\n  tdCheckbox(row) {\n    row.checked == true ? this.checkedRows.push(row) : this.checkedRows.splice(this.checkedRows.indexOf(row), 1);\n  }\n\n  uploadFile() {\n    $(\"#fileUploadDoc\").click();\n  }\n\n  UploadFileDoc(e) {\n    this.call_modal = false;\n    this.file = e.target.files[0];\n    this.fileName = e.target.files[0].name;\n    const record = this.documentsArr.find(item => {\n      return item.DOC_NAME == this.fileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n    } else {\n      if (this.initValue + parseFloat(this.file.size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      } else {\n        this.service.uploadFile(\"UploadFDHLDocumnets\", this.file, [], this.namespace, false, false).then(resDocPath => {\n          this.initValue = this.initValue + parseFloat(this.file.size) / 1024 / 1024;\n          this.documentsArr.push({\n            'DOC_NAME': this.service.datavalidate(this.fileName),\n            \"DOC_PATH\": resDocPath,\n            'DOC_TYPE': 'Main',\n            'UPLOADERNAME': this.loginUserID,\n            'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n            'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n          });\n          this.fileUploadDoc = '';\n        });\n      }\n    }\n  }\n\n  certUploadFile() {\n    $(\"#certfileUploadDoc\").click();\n  }\n\n  certUploadFileDoc(e) {\n    this.call_modal = false;\n    this.certfile = e.target.files[0];\n    this.certfileName = e.target.files[0].name;\n    const record = this.certdocumentsArr.find(item => {\n      return item.DOC_NAME == this.certfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n    } else {\n      if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.certfile, [], this.namespace, false, false).then(resDocPath => {\n        this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\n        this.certdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.certfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Certificates',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.certfileUploadDoc = '';\n      });\n    }\n  }\n\n  repUploadFile() {\n    $(\"#repfileUploadDoc\").click();\n  }\n\n  repUploadFileDoc(e) {\n    this.call_modal = false;\n    this.repfile = e.target.files[0];\n    this.repfileName = e.target.files[0].name;\n    const record = this.repdocumentsArr.find(item => {\n      return item.DOC_NAME == this.repfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n    } else {\n      if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.repfile, [], this.namespace, false, false).then(resDocPath => {\n        this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\n        this.repdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.repfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Reports',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.repfileUploadDoc = '';\n      });\n    }\n  }\n\n  appUploadFile() {\n    $(\"#appfileUploadDoc\").click();\n  }\n\n  appUploadFileDoc(e) {\n    this.call_modal = false;\n    this.appfile = e.target.files[0];\n    this.appfileName = e.target.files[0].name;\n    const record = this.appdocumentsArr.find(item => {\n      return item.DOC_NAME == this.appfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n    } else {\n      if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.appfile, [], this.namespace, false, false).then(resDocPath => {\n        this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\n        this.appdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.appfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Approved',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.appfileUploadDoc = '';\n      });\n    }\n  }\n\n  draUploadFile() {\n    $(\"#drafileUploadDoc\").click();\n  }\n\n  draUploadFileDoc(e) {\n    this.call_modal = false;\n    this.drafile = e.target.files[0];\n    this.drafileName = e.target.files[0].name;\n    const record = this.dradocumentsArr.find(item => {\n      return item.DOC_NAME == this.drafileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n    } else {\n      if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.drafile, [], this.namespace, false, false).then(resDocPath => {\n        this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\n        this.dradocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.drafileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Drawings',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.drafileUploadDoc = '';\n      });\n    }\n  }\n\n  invUploadFile() {\n    $(\"#invfileUploadDoc\").click();\n  }\n\n  invUploadFileDoc(e) {\n    this.call_modal = false;\n    this.invfile = e.target.files[0];\n    this.invfileName = e.target.files[0].name;\n    const record = this.invdocumentsArr.find(item => {\n      return item.DOC_NAME == this.invfileName;\n    });\n\n    if (record) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'This File Already Exists',\n          active: this.call_modal\n        };\n      }, 0);\n    } else {\n      if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            text: 'Document Size Limit Exceeded,You have total limit upto 50MB !',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      }\n\n      this.service.uploadFile(\"UploadFDHLDocumnets\", this.invfile, [], this.namespace, false, false).then(resDocPath => {\n        this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\n        this.invdocumentsArr.push({\n          'DOC_NAME': this.service.datavalidate(this.invfileName),\n          \"DOC_PATH\": resDocPath,\n          'UPLOADER_ID': this.loginUserID,\n          'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\n          'DOC_TYPE': 'Invoice',\n          'DOC_SIZE': e.target.files[0].size / 1024 / 1024\n        });\n        this.invfileUploadDoc = '';\n      });\n    }\n  }\n\n  certDelete(i) {\n    if (this.datavalidate(this.certdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.certdocumentsArr[i].DOC_REF_NO);\n          this.gridDocSize = this.gridDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\n          this.certdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.gridDocSize = this.gridDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\n      this.certdocumentsArr.splice(i, 1);\n    }\n  }\n\n  repDelete(i) {\n    if (this.datavalidate(this.repdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.repdocumentsArr[i].DOC_REF_NO);\n          this.gridDocSize = this.gridDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\n          this.repdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.gridDocSize = this.gridDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\n      this.repdocumentsArr.splice(i, 1);\n    }\n  }\n\n  appDelete(i) {\n    if (this.datavalidate(this.appdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.appdocumentsArr[i].DOC_REF_NO);\n          this.gridDocSize = this.gridDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\n          this.appdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.gridDocSize = this.gridDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\n      this.appdocumentsArr.splice(i, 1);\n    }\n  }\n\n  draDelete(i) {\n    if (this.datavalidate(this.dradocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.dradocumentsArr[i].DOC_REF_NO);\n          this.gridDocSize = this.gridDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\n          this.dradocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.gridDocSize = this.gridDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\n      this.dradocumentsArr.splice(i, 1);\n    }\n  }\n\n  invDelete(i) {\n    if (this.datavalidate(this.invdocumentsArr[i].DOC_REF_NO) != '') {\n      this.confirmationService.confirm({\n        message: 'Are you sure that you want to delele this file?',\n        header: 'Confirmation',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          this.gridDeleteFile(this.invdocumentsArr[i].DOC_REF_NO);\n          this.gridDocSize = this.gridDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\n          this.invdocumentsArr.splice(i, 1);\n        },\n        reject: () => {}\n      });\n    } else {\n      this.gridDocSize = this.gridDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\n      this.invdocumentsArr.splice(i, 1);\n    }\n  }\n\n  gridDocSave(arg) {\n    this.call_modal = false;\n    const concatArr = [this.certdocumentsArr, this.repdocumentsArr, this.appdocumentsArr, this.dradocumentsArr, this.invdocumentsArr].flat();\n    let ParamTuple = [];\n    var params = {};\n\n    for (var save of concatArr) {\n      if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\n        params = {\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              \"UPLOADER_ID\": save.UPLOADER_ID,\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      } else {\n        params = {\n          'old': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_REF_NO': save.DOC_REF_NO\n            }\n          },\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      }\n\n      ParamTuple.push(params);\n    }\n\n    var paramsAll = {\n      'tuple': ParamTuple\n    };\n    this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false).then(res => {\n      this.gridDocSplit(res);\n\n      if (arg == 'complete') {\n        this.completeTask(1, this.openAs, '');\n      } else {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            'text': `Saved successfully `,\n            active: this.call_modal\n          };\n        }, 0);\n      }\n    }, err => {\n      console.log(\"Error occured while saving Docdata \");\n    });\n  }\n\n  gridDocSplit(doc) {\n    this.certdocumentsArr = [];\n    this.repdocumentsArr = [];\n    this.appdocumentsArr = [];\n    this.dradocumentsArr = [];\n    this.invdocumentsArr = [];\n    doc.forEach(obj => {\n      switch (obj.DOC_TYPE) {\n        case 'Certificates':\n          this.certdocumentsArr.push(obj);\n          break;\n\n        case 'Reports':\n          this.repdocumentsArr.push(obj);\n          break;\n\n        case 'Approved':\n          this.appdocumentsArr.push(obj);\n          break;\n\n        case 'Drawings':\n          this.dradocumentsArr.push(obj);\n          break;\n\n        case 'Invoice':\n          this.invdocumentsArr.push(obj);\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  gridDeleteFile(i) {\n    this.call_modal = false;\n    let dataObj = {\n      tuple: {\n        old: {\n          FD_HL_DOC_DETAILS: {\n            DOC_REF_NO: i\n          }\n        }\n      }\n    };\n    this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).then(ajaxResponse => {\n      // this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'File Deleted Successfull',\n          active: this.call_modal\n        };\n      }, 0);\n    });\n  }\n\n  gridDocValid(arg) {\n    if (arg != 'docsave') {\n      this.docSubmit = true;\n\n      if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '' || this.datavalidate(this.createRequestForm.controls['APEX'].value) == '') {\n        return true;\n      }\n\n      if (this.certdocumentsArr.length == 0 || this.repdocumentsArr.length == 0 || this.appdocumentsArr.length == 0 || this.dradocumentsArr.length == 0 || this.invdocumentsArr.length == 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  saveARAI(arg) {\n    this.ARAITrue = true;\n    this.isSubmitted1 = true;\n    this.call_modal = false;\n\n    if (this.gridDocValid(arg)) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Please enter all mandatory fields',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    let dataObj = {};\n\n    if (this.datavalidate(this.HR_REF_NO) != '') {\n      dataObj = {\n        tuple: {\n          old: {\n            FD_HL_REQUEST_DETAILS: {\n              HR_REF_NO: this.HR_REF_NO\n            }\n          },\n          new: {\n            FD_HL_REQUEST_DETAILS: {\n              'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value),\n              'APEX_NO': this.datavalidate(this.createRequestForm.controls['APEX'].value)\n            }\n          }\n        }\n      };\n    }\n\n    this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false).then(res => {\n      this.gridDocSave(arg);\n    });\n  }\n\n  isValid() {\n    this.valid = false;\n\n    if (true) {\n      if (this.datavalidate(this.createRequestForm.controls['WBS'].value) == '' && this.saveType != 'clone' || this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value) == '' && this.saveType != 'clone') {\n        this.valid = true;\n      }\n\n      if (this.routeName == 'clone' && this.CLONE_REQUEST_NO == '') {\n        this.valid = true;\n      }\n\n      if (this.saveType != 'clone') {\n        for (let i = 0; i < this.variantsArr.length; i++) {\n          for (var obj of this.variantsArr[i].Table12Arr) {\n            if (obj.MANDATORY == 'Yes' && this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && this.emisionComplaince == 'TR4') {\n              this.valid = true;\n              this.service.callTable4G.next('table4g');\n            }\n          }\n        }\n      }\n\n      if (this.saveType != 'clone') {\n        for (let i = 0; i < this.variantsArr1.length; i++) {\n          for (var obj of this.variantsArr1[i].Table12Arr1) {\n            if (obj.MANDATORY == 'Yes' && this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && this.emisionComplaince == 'B3A') {\n              this.valid = true;\n              this.service.callTable4G.next('chapter2'); //return;\n            }\n          }\n        }\n      }\n    } else {\n      this.valid = false;\n    }\n\n    return this.valid;\n  }\n\n  saveValid() {\n    if (this.datavalidate(this.createRequestForm.controls['LOCATION'].value) == '' || this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value) == '' || this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) == '' || this.variantsArr.length == 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  saveDetails(arg) {\n    this.saveType = arg;\n    let dataObj = {};\n    this.call_modal = false;\n\n    if (this.isvarientCheck() && this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\n      return;\n    }\n\n    if (this.saveValid()) {\n      this.isSaveSubm = true;\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          'text': 'Please Enter All Mandatory Fields',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    if (arg == 'submit' || arg == 'clone') {\n      this.isSubmitted = arg == 'submit' ? true : false;\n\n      if (this.isValid()) {\n        setTimeout(() => {\n          this.call_modal = true;\n          this.data_send = {\n            'text': 'Please Enter All Mandatory Fields',\n            active: this.call_modal\n          };\n        }, 0);\n        return;\n      }\n    }\n\n    if (this.datavalidate(this.HR_REF_NO) != '') {\n      dataObj = {\n        tuple: {\n          old: {\n            FD_HL_REQUEST_DETAILS: {\n              HR_REF_NO: this.HR_REF_NO\n            }\n          },\n          new: {\n            FD_HL_REQUEST_DETAILS: {\n              'LOCATION': this.datavalidate(this.createRequestForm.controls['LOCATION'].value),\n              'CERTIFICATION_TYPE': this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value),\n              'ENGINE_FAMILY_NO': this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\n              'WBS': this.datavalidate(this.createRequestForm.controls['WBS'].value),\n              'COST_CENTER': this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value),\n              'REQUEST_NO': this.routeName == 'clone' ? this.newREQUEST_NO : this.REQUEST_NO,\n              CLONE_REQUEST_NO: this.routeName == 'clone' ? this.CLONE_REQUEST_NO : '',\n              REMARKS: this.remarks\n            }\n          }\n        }\n      };\n    } else {\n      dataObj = {\n        tuple: {\n          new: {\n            FD_HL_REQUEST_DETAILS: {\n              'HR_REF_NO': '',\n              'LOCATION': this.datavalidate(this.createRequestForm.controls['LOCATION'].value),\n              'CERTIFICATION_TYPE': this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value),\n              'ENGINE_FAMILY_NO': this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\n              'WBS': this.datavalidate(this.createRequestForm.controls['WBS'].value),\n              'COST_CENTER': this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value),\n              'INITIATOR_ID': this.loginUserID,\n              'INITIATION_DATE': this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n              'PROCESS_STATUS': '0',\n              CLONE_REQUEST_NO: this.routeName == 'clone' ? this.CLONE_REQUEST_NO : '',\n              REMARKS: this.remarks,\n              'CHAPTER2_REVISION': this.reguChapter2,\n              'CL_REVISION': this.reguCovering,\n              'TABLE4G_REVISION': this.reguTable4G,\n              'TABLE12_REVISION': this.reguTable12\n            }\n          }\n        }\n      };\n    }\n\n    this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false).then(res => {\n      this.HR_REF_NO = res[0].HR_REF_NO;\n      let obj = {\n        'HR_REF_NO': this.HR_REF_NO,\n        'actRole': this.actRole,\n        'actStage': this.actStage\n      };\n      this.service.sharingData(obj, 'HR_REF_NO');\n      this.service.createPageEvents.next('');\n      this.REQUEST_NO = res[0].REQUEST_NO;\n      this.newREQUEST_NO = res[0].REQUEST_NO;\n      this.saveVariants();\n    }, err => {\n      console.log('Error occured! While saving the data');\n    });\n  }\n\n  saveDocuments() {\n    let ParamTuple = [];\n    var params = {};\n\n    for (var save of this.documentsArr) {\n      if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\n        params = {\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'HR_REF_NO': this.HR_REF_NO,\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              \"UPLOADER_ID\": save.UPLOADERNAME,\n              'DOC_REMARKS': save.DOC_REMARKS,\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      } else {\n        params = {\n          'old': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_REF_NO': save.DOC_REF_NO\n            }\n          },\n          'new': {\n            'FD_HL_DOC_DETAILS': {\n              'DOC_NAME': this.datavalidate(save.DOC_NAME),\n              'DOC_PATH': this.datavalidate(save.DOC_PATH),\n              // \"UPLOADER_ID\": save.UPLOADERNAME,\n              'DOC_REMARKS': save.DOC_REMARKS,\n              'DOC_TYPE': save.DOC_TYPE,\n              'DOC_SIZE': save.DOC_SIZE\n            }\n          }\n        };\n      }\n\n      ParamTuple.push(params);\n    }\n\n    var paramsAll = {\n      'tuple': ParamTuple\n    };\n    this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false).then(res => {\n      if (this.saveType == 'submit') {\n        if (this.datavalidate(this.taskId) == '') {\n          let param = {\n            'HR_REF_NO': this.HR_REF_NO,\n            'INITIATED_BY': this.loginUserID,\n            'REMARKS': this.remarks\n          };\n          this.service.invokeService(\"FD_HL_MainProcess\", param, \"http://schemas.cordys.com/default\", true, false).then(res => {\n            // let dObj = {HR_REF_NO:this.HR_REF_NO}\n            // this.service.invokeService(\"SendFD_HLCustomRequestorMail\", dObj, this.namespace, true, false)\n            // .then((res: any) => {\n            // })\n            setTimeout(() => {\n              let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\n              this.call_modal = true;\n              this.data_send = {\n                text: `Request Submitted Successfully`,\n                'text1': `Request ID`,\n                'text2': `${this.REQUEST_NO}`,\n                active: this.call_modal,\n                from: modal_from\n              };\n            }, 0);\n          });\n        } else {\n          this.completeTask(7, this.openAs, '');\n        }\n      } else if (this.saveType == 'save') {\n        let msg;\n        msg = this.datavalidate(this.openAs) == '' ? 'New Request Created Successfully' : 'Request Updated Successfully';\n        setTimeout(() => {\n          let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\n          this.call_modal = true;\n          this.data_send = {\n            text: msg,\n            'text1': `Request ID`,\n            'text2': `${this.REQUEST_NO}`,\n            active: this.call_modal,\n            from: modal_from\n          };\n        }, 0);\n      }\n\n      if (res) {\n        this.documentsArr = [];\n        this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\n      }\n    }, err => {\n      console.log(\"Error occured while saving Docdata \");\n    });\n  }\n\n  deleteFile() {\n    this.call_modal = false;\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delele this file?',\n      header: 'Confirmation',\n      icon: 'pi pi-exclamation-triangle',\n      accept: () => {\n        for (let i = 0; i < this.checkedRows.length; i++) {\n          this.initValue = this.initValue - parseFloat(this.checkedRows[i].DOC_SIZE);\n\n          if (this.service.datavalidate(this.checkedRows[i].DOC_REF_NO) != \"\") {\n            let dataObj = {\n              tuple: {\n                old: {\n                  FD_HL_DOC_DETAILS: {\n                    DOC_REF_NO: this.checkedRows[i].DOC_REF_NO\n                  }\n                }\n              }\n            };\n            this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).then(ajaxResponse => {\n              this.documentsArr = this.documentsArr.filter(val => {\n                return this.checkedRows.indexOf(val) === -1;\n              });\n              this.checkedRows = [];\n              setTimeout(() => {\n                this.call_modal = true;\n                this.data_send = {\n                  text: 'File Deleted Successfull',\n                  active: this.call_modal\n                };\n              }, 0);\n            });\n          } else {\n            this.documentsArr = this.documentsArr.filter(val => {\n              return this.checkedRows.indexOf(val) === -1;\n            });\n            this.checkedRows.forEach(d => {\n              if (d.DOC_REF_NO == '') {\n                this.checkedRows.splice(this.checkedRows.indexOf(d), 1);\n              }\n            });\n          }\n        }\n      },\n      reject: () => {}\n    });\n  }\n\n  isRemarksValid(arg) {\n    if (arg == 0 && this.remarks == '' || arg == 3 && this.remarks == '' || arg == 4 && this.remarks == '' || arg == 7 && this.remarks == '') {\n      this.remarkSubmit = true;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  completeTask(decision, openas, remarks) {\n    this.call_modal = false;\n\n    if (this.isRemarksValid(decision)) {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: 'Please enter remarks',\n          active: this.call_modal\n        };\n      }, 0);\n      return;\n    }\n\n    let data = {\n      \"FD_HL_OPSchemaFragment\": {\n        ApproverDecision: decision,\n        ApprovedBy: this.loginUserID,\n        Remarks: this.remarks\n      }\n    };\n    this.call_modal = false;\n    var titlest = decision == 1 ? \"Task Completed Successfully\" : decision == 0 ? \"Task Seek Clarification Successfully\" : decision == 7 ? \"Task Submitted Successfully\" : decision == 4 ? \"Task Obsoleted Successfully\" : decision == 3 ? \"Task Rejected Successfully\" : \"\";\n\n    let _this = this;\n\n    $.cordys.workflow.completeTask(this.taskId, data, {\n      dataType: 'xml'\n    }).done(() => {\n      setTimeout(() => {\n        this.call_modal = true;\n        this.data_send = {\n          text: titlest,\n          active: this.call_modal,\n          from: 'task'\n        };\n      }, 0); // _this.closeTask(openas);\n    });\n  }\n\n  closeTask(openas) {\n    this.actStage = \"view\";\n\n    if (openas == 'customInboxTask') {\n      this.router.navigate(['/inbox']);\n    } else if (openas == 'mail') {\n      window.close();\n    } else {}\n  }\n\n  callReqManagement1(arg) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let params = {\n        HR_REF_NO: arg,\n        REPORT_REF_ID: 3\n      };\n      yield _this4.service.invokeService(\"GetFdHlRequestManagement\", params, _this4.namespace, true, false).then(res => {\n        _this4.Table12Arr = res;\n      });\n      let params1 = {\n        HR_REF_NO: arg,\n        REPORT_REF_ID: 4\n      };\n      yield _this4.service.invokeService(\"GetFdHlRequestManagement\", params1, _this4.namespace, true, false).then(res => {\n        _this4.chapter2Arr = res;\n      });\n      setTimeout(() => {\n        _this4.getFDHLRequestVariantDetails(arg);\n      }, 100);\n    })();\n  }\n\n  callReqManagementEmpty() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let params = {\n        HR_REF_NO: '',\n        REPORT_REF_ID: 3\n      };\n      yield _this5.service.invokeService(\"GetFdHlRequestManagement\", params, _this5.namespace, true, false).then(res => {\n        _this5.Table12EmptyArr = res;\n      });\n      let params1 = {\n        HR_REF_NO: '',\n        REPORT_REF_ID: 4\n      };\n      yield _this5.service.invokeService(\"GetFdHlRequestManagement\", params1, _this5.namespace, true, false).then(res => {\n        _this5.chapter2EmptyArr = res;\n      });\n    })();\n  }\n\n  getFdHlRequestManagement() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      _this6.variantsArr.forEach(d => {\n        d.Table12Arr = [];\n\n        if (d.HRV_REF_NO == '') {\n          _this6.Table12EmptyArr.forEach(d1 => {\n            d.Table12Arr.push({\n              ATTR_VALUE: d1.ATTR_VALUE,\n              ANNEXURE_EXT: d1.ANNEXURE_EXT,\n              ANNEXURE_NAME: d1.ANNEXURE_NAME,\n              ANNEXURE_PATH: d1.ANNEXURE_PATH,\n              ATTR_DESC: d1.ATTR_DESC,\n              ATTR_NAME: d1.ATTR_NAME,\n              ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n              ATTR_REF_ID: d1.ATTR_REF_ID[0],\n              AUDIT_TYPE: d1.AUDIT_TYPE,\n              CREATED_BY: d1.CREATED_BY[0],\n              CREATION_DATE: d1.CREATION_DATE[0],\n              DOUMENT_NAME: d1.DOUMENT_NAME,\n              HRM_REF_NO: d1.HRM_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              HR_REF_NO: d1.HR_REF_NO,\n              MANDATORY: d1.MANDATORY,\n              REPORT_NAME: d1.REPORT_NAME,\n              REPORT_REF_ID: d1.REPORT_REF_ID[0],\n              REPORT_VERSION: d1.REPORT_VERSION,\n              VISIBLE: d1.VISIBLE,\n              MODIFIED_BY: d1.MODIFIED_BY[0],\n              MODIFIED_DATE: d1.MODIFIED_DATE[0]\n            });\n          });\n        }\n\n        if (d.HRV_REF_NO != '') {\n          _this6.Table12Arr.forEach(d1 => {\n            if (d.HRV_REF_NO == _this6.datavalidate(d1.HRV_REF_NO)) {\n              d.Table12Arr.push({\n                ATTR_VALUE: d1.ATTR_VALUE,\n                ANNEXURE_EXT: d1.ANNEXURE_EXT,\n                ANNEXURE_NAME: d1.ANNEXURE_NAME,\n                ANNEXURE_PATH: d1.ANNEXURE_PATH,\n                ATTR_DESC: d1.ATTR_DESC,\n                ATTR_NAME: d1.ATTR_NAME,\n                ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n                ATTR_REF_ID: d1.ATTR_REF_ID[0],\n                AUDIT_TYPE: d1.AUDIT_TYPE,\n                CREATED_BY: d1.CREATED_BY[0],\n                CREATION_DATE: d1.CREATION_DATE[0],\n                DOUMENT_NAME: d1.DOUMENT_NAME,\n                HRM_REF_NO: d1.HRM_REF_NO,\n                HRV_REF_NO: d1.HRV_REF_NO,\n                HR_REF_NO: d1.HR_REF_NO,\n                MANDATORY: d1.MANDATORY,\n                REPORT_NAME: d1.REPORT_NAME,\n                REPORT_REF_ID: d1.REPORT_REF_ID[0],\n                REPORT_VERSION: d1.REPORT_VERSION,\n                VISIBLE: d1.VISIBLE,\n                MODIFIED_BY: d1.MODIFIED_BY[0],\n                MODIFIED_DATE: d1.MODIFIED_DATE[0]\n              });\n            }\n          });\n        }\n      });\n    })();\n  }\n\n  getFdHlRequestManagement1() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.variantsArr1.forEach(d => {\n        d.Table12Arr1 = [];\n\n        if (d.HRV_REF_NO == '') {\n          _this7.chapter2EmptyArr.forEach(d1 => {\n            d.Table12Arr1.push({\n              ATTR_VALUE: d1.ATTR_VALUE,\n              ANNEXURE_EXT: d1.ANNEXURE_EXT,\n              ANNEXURE_NAME: d1.ANNEXURE_NAME,\n              ANNEXURE_PATH: d1.ANNEXURE_PATH,\n              ATTR_DESC: d1.ATTR_DESC,\n              ATTR_NAME: d1.ATTR_NAME,\n              ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n              ATTR_REF_ID: d1.ATTR_REF_ID[0],\n              AUDIT_TYPE: d1.AUDIT_TYPE,\n              CREATED_BY: d1.CREATED_BY[0],\n              CREATION_DATE: d1.CREATION_DATE[0],\n              DOUMENT_NAME: d1.DOUMENT_NAME,\n              HRM_REF_NO: d1.HRM_REF_NO,\n              HRV_REF_NO: d1.HRV_REF_NO,\n              HR_REF_NO: d1.HR_REF_NO,\n              MANDATORY: d1.MANDATORY,\n              REPORT_NAME: d1.REPORT_NAME,\n              REPORT_REF_ID: d1.REPORT_REF_ID[0],\n              REPORT_VERSION: d1.REPORT_VERSION,\n              VISIBLE: d1.VISIBLE,\n              MODIFIED_BY: d1.MODIFIED_BY[0],\n              MODIFIED_DATE: d1.MODIFIED_DATE[0]\n            });\n          });\n        }\n\n        if (d.HRV_REF_NO != '') {\n          _this7.chapter2Arr.forEach(d1 => {\n            if (d.HRV_REF_NO == _this7.datavalidate(d1.HRV_REF_NO)) {\n              d.Table12Arr1.push({\n                ATTR_VALUE: d1.ATTR_VALUE,\n                ANNEXURE_EXT: d1.ANNEXURE_EXT,\n                ANNEXURE_NAME: d1.ANNEXURE_NAME,\n                ANNEXURE_PATH: d1.ANNEXURE_PATH,\n                ATTR_DESC: d1.ATTR_DESC,\n                ATTR_NAME: d1.ATTR_NAME,\n                ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS,\n                ATTR_REF_ID: d1.ATTR_REF_ID[0],\n                AUDIT_TYPE: d1.AUDIT_TYPE,\n                CREATED_BY: d1.CREATED_BY[0],\n                CREATION_DATE: d1.CREATION_DATE[0],\n                DOUMENT_NAME: d1.DOUMENT_NAME,\n                HRM_REF_NO: d1.HRM_REF_NO,\n                HRV_REF_NO: d1.HRV_REF_NO,\n                HR_REF_NO: d1.HR_REF_NO,\n                MANDATORY: d1.MANDATORY,\n                REPORT_NAME: d1.REPORT_NAME,\n                REPORT_REF_ID: d1.REPORT_REF_ID[0],\n                REPORT_VERSION: d1.REPORT_VERSION,\n                VISIBLE: d1.VISIBLE,\n                MODIFIED_BY: d1.MODIFIED_BY[0],\n                MODIFIED_DATE: d1.MODIFIED_DATE[0]\n              });\n            }\n          });\n        }\n      });\n    })();\n  }\n\n  datavalidate(data) {\n    if (data != undefined && data != null && data != \"\") {\n      return data;\n    } else {\n      return \"\";\n    }\n  }\n\n};\n\nCreateNewRequestComponent.ctorParameters = () => [{\n  type: Services\n}, {\n  type: DatePipe\n}, {\n  type: FormBuilder\n}, {\n  type: ActivatedRoute\n}, {\n  type: Location\n}, {\n  type: MenuComponent\n}, {\n  type: Router\n}, {\n  type: ConfirmationService\n}];\n\nCreateNewRequestComponent.propDecorators = {\n  covering: [{\n    type: ViewChild,\n    args: [CoveringLetterComponent]\n  }],\n  table4g: [{\n    type: ViewChild,\n    args: [Table4gComponent]\n  }],\n  chapter2: [{\n    type: ViewChild,\n    args: [Chapter2Component]\n  }],\n  table12: [{\n    type: ViewChild,\n    args: [Table12Component]\n  }],\n  requestIDClone: [{\n    type: Input\n  }],\n  cloneHRNo: [{\n    type: Input\n  }]\n};\nCreateNewRequestComponent = __decorate([Component({\n  selector: 'app-create-new-request',\n  template: __NG_CLI_RESOURCE__0,\n  providers: [ConfirmationService, MessageService],\n  styles: [__NG_CLI_RESOURCE__1]\n})], CreateNewRequestComponent);\nexport { CreateNewRequestComponent };","map":{"version":3,"sources":["D:/SVN Projects/FD_Homologation_LatesT/FD_Homologation/src/app/create-new-request/create-new-request.component.ts"],"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","DatePipe","Location","Component","Input","ViewChild","FormBuilder","Validators","ActivatedRoute","Router","ConfirmationService","MessageService","MenuComponent","Services","Chapter2Component","CoveringLetterComponent","Table12Component","Table4gComponent","CreateNewRequestComponent","constructor","service","datepipe","fb","activatedRoute","location","menuComp","router","confirmationService","namespace","displayPopup","DOC_REF_NO","loginUserID","isSubmitted","HR_REF_NO","REQUEST_NO","instance_id","taskId","openAs","actRole","actStage","AAHPopup","AAHArr","engineVarient","dis2","call_modal","documentsArr","checkedRows","maindocArr","ENGINE_FAMILY_NO_Arr","ReportName","isSubmitted1","routeName","CLONE_REQUEST_NO","remarks","remarkSubmit","reguTable12","reguCovering","reguTable4G","reguChapter2","OpenAs","coveringWordDoc","table12WordDoc","ARAITrue","engineFamilyDataArr","isValidApproval","procesStatus","emisionComplaince","nameArr","variantsArr","variantsArr1","nameArrStr","table4gVar","chapter2Var","HRV_REF_NOArr","initValue","gridDocSize","certdocumentsArr","repdocumentsArr","appdocumentsArr","dradocumentsArr","invdocumentsArr","docSubmit","createRequestForm","group","LOCATION","required","CERTIFICATION_TYPE","ENGINE_FAMILY_NO","WBS","COST_CENTER","ARAI","APEX","valid","saveType","isSaveSubm","newREQUEST_NO","Table12EmptyArr","chapter2EmptyArr","Table12Arr","chapter2Arr","getEngineFamily","loadPage","callReqManagementEmpty","lovMasaterList","subscribe","subscription","createPageEvents","call","saveDetails","completeTask","clear","next","sentToARAI","saveARAI","ngOnChanges","changes","datavalidate","currentValue","cloneHRNo","ngOnInit","getReportName","getFDHLReportNameAndVersion","url","urlSegments","path","invokeService","then","res","forEach","obj","REPORT_REF_ID","REPORT_VERSION","cloneFdHlRequest","CHR_REF_NO","_a","_b","_c","_d","covering","getFDHLCoveringLetterDetails","getFDHLCLEnClosureDetails","table12","getData","getFDHLRequestVariantDetails","Promise","all","getFDHLRequestDetails","callReqManagement1","setTimeout","data_send","text","active","getopenAs","routerName","window","href","split","length","includes","engineCheckbox","HRV_REF_NO","patchValue","table4g","VARIANT","chapter2","onButtonClick","event","type","stopPropagation","FDHL_DOC_TYPE","generateFDHlWordDocument","downloadFile","consolidate","refId","generateFDHlConsolidateReport","ARAIValid","controls","value","dataObj1","tuple","old","FD_HL_REQUEST_DETAILS","new","dataObj","from_User","to_User","mailType","stage","status","PROCESS_STATUS","ARAIFlag","getFD_HLHistoryDetailsByHR_RefNo","ENGINE_M_REF_ID","data","push","RefNo","ENGINE_F_REF_ID","EMISSION_COMPLIANCE","ngOnDestroy","unsubscribe","backBtnLink","validTypeApproval","text1","back","variable","menuHideFun","routeChange","workflowHistory","body","document","querySelector","style","overflow","closeWorkFlowDoc","HR_RefNo","arg","REMARKS","ARAI_NO","APEX_NO","getFDHLEngineModelsByFamily","getFD_HLDocDetailsByHR_RefNo","filter","doc","DOC_TYPE","parseFloat","DOC_SIZE","d1","isChecked","d","isvarientCheck","check","queryParams","params","actStag","$","cordys","json","defaults","removeNamespacePrefix","workflow","getTaskDetails","done","tData","TaskData","ApplicationData","FD_HL_IP_SchemaFragment","ACT_ROLE","STAGE","varObj","roleStage","sharingData","taskPage","variantSelect","splice","indexOf","param","LOV_DESC","temp","Measurment","Mode","innerArr","temp1","Table12Arr1","Set","toString","getFdHlRequestManagement","getFdHlRequestManagement1","saveVariants","ParamTuple","ENGINE_MODEL_NO","paramsAll","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","updateFdHlCoveringLetter","updateFdHlClEnclosure","save","updateFdHlTable12","updateFdHlTab12SpecChanges","saveMode","saveMeasurment","saveDocuments","catch","error","alert","REPORT_NAME","openDoc","closeDoc","DOC_NAME","DOC_PATH","checkAllCheckBox","ev","x","checked","target","isAllCheckBoxChecked","every","p","tdCheckbox","row","uploadFile","click","UploadFileDoc","e","file","files","fileName","name","record","find","item","size","resDocPath","transform","Date","fileUploadDoc","certUploadFile","certUploadFileDoc","certfile","certfileName","certfileUploadDoc","repUploadFile","repUploadFileDoc","repfile","repfileName","repfileUploadDoc","appUploadFile","appUploadFileDoc","appfile","appfileName","appfileUploadDoc","draUploadFile","draUploadFileDoc","drafile","drafileName","drafileUploadDoc","invUploadFile","invUploadFileDoc","invfile","invfileName","invfileUploadDoc","certDelete","i","confirm","message","header","icon","accept","gridDeleteFile","reject","repDelete","appDelete","draDelete","invDelete","gridDocSave","concatArr","flat","undefined","UPLOADER_ID","gridDocSplit","err","console","log","FD_HL_DOC_DETAILS","ajaxResponse","gridDocValid","isValid","MANDATORY","ATTR_VALUE","ANNEXURE_PATH","callTable4G","saveValid","UPLOADERNAME","DOC_REMARKS","modal_from","from","msg","deleteFile","val","isRemarksValid","decision","openas","ApproverDecision","ApprovedBy","Remarks","titlest","_this","dataType","closeTask","navigate","close","params1","ANNEXURE_EXT","ANNEXURE_NAME","ATTR_DESC","ATTR_NAME","ATTR_CHARACTERISTICS","ATTR_REF_ID","AUDIT_TYPE","CREATED_BY","CREATION_DATE","DOUMENT_NAME","HRM_REF_NO","VISIBLE","MODIFIED_BY","MODIFIED_DATE","ctorParameters","propDecorators","args","requestIDClone","selector","template","providers","styles"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport __NG_CLI_RESOURCE__0 from \"./create-new-request.component.html?ngResource\";\r\nimport __NG_CLI_RESOURCE__1 from \"./create-new-request.component.css?ngResource\";\r\nimport { DatePipe, Location } from '@angular/common';\r\nimport { Component, Input, ViewChild } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { MenuComponent } from '../menu/menu.component';\r\nimport { Services } from '../services/services';\r\nimport { Chapter2Component } from './chapter2/chapter2.component';\r\nimport { CoveringLetterComponent } from './covering-letter/covering-letter.component';\r\nimport { Table12Component } from './table12/table12.component';\r\nimport { Table4gComponent } from './table4g/table4g.component';\r\nlet CreateNewRequestComponent = class CreateNewRequestComponent {\r\n    constructor(service, datepipe, fb, activatedRoute, location, menuComp, router, confirmationService) {\r\n        this.service = service;\r\n        this.datepipe = datepipe;\r\n        this.fb = fb;\r\n        this.activatedRoute = activatedRoute;\r\n        this.location = location;\r\n        this.menuComp = menuComp;\r\n        this.router = router;\r\n        this.confirmationService = confirmationService;\r\n        this.namespace = \"http://schemas.cordys.com/FD_HL_WSPackage\";\r\n        this.displayPopup = 'none';\r\n        this.DOC_REF_NO = '';\r\n        this.loginUserID = '';\r\n        this.isSubmitted = false;\r\n        this.HR_REF_NO = '';\r\n        this.REQUEST_NO = '';\r\n        this.instance_id = '';\r\n        this.taskId = '';\r\n        this.openAs = '';\r\n        this.actRole = '';\r\n        this.actStage = '';\r\n        this.AAHPopup = 'none';\r\n        this.AAHArr = [];\r\n        this.engineVarient = [];\r\n        this.dis2 = false;\r\n        this.call_modal = false;\r\n        this.documentsArr = [];\r\n        this.checkedRows = [];\r\n        this.maindocArr = [];\r\n        this.ENGINE_FAMILY_NO_Arr = [];\r\n        this.ReportName = [];\r\n        this.isSubmitted1 = false;\r\n        this.routeName = '';\r\n        this.CLONE_REQUEST_NO = '';\r\n        this.remarks = '';\r\n        this.remarkSubmit = false;\r\n        this.reguTable12 = '';\r\n        this.reguCovering = '';\r\n        this.reguTable4G = '';\r\n        this.reguChapter2 = '';\r\n        this.OpenAs = '';\r\n        this.coveringWordDoc = '';\r\n        this.table12WordDoc = '';\r\n        this.ARAITrue = true;\r\n        this.engineFamilyDataArr = [];\r\n        this.isValidApproval = '';\r\n        this.procesStatus = '';\r\n        this.emisionComplaince = '';\r\n        // idArr: any = [];\r\n        this.nameArr = [];\r\n        this.variantsArr = [];\r\n        this.variantsArr1 = [];\r\n        // idArrStr: string = ''\r\n        this.nameArrStr = '';\r\n        this.table4gVar = [];\r\n        this.chapter2Var = [];\r\n        this.HRV_REF_NOArr = [];\r\n        this.initValue = 0;\r\n        this.gridDocSize = 0;\r\n        this.certdocumentsArr = [];\r\n        this.repdocumentsArr = [];\r\n        this.appdocumentsArr = [];\r\n        this.dradocumentsArr = [];\r\n        this.invdocumentsArr = [];\r\n        this.docSubmit = false;\r\n        this.createRequestForm = this.fb.group({\r\n            LOCATION: ['', Validators.required],\r\n            CERTIFICATION_TYPE: ['', Validators.required],\r\n            ENGINE_FAMILY_NO: ['', Validators.required],\r\n            WBS: ['', Validators.required],\r\n            COST_CENTER: ['', Validators.required],\r\n            ARAI: [''],\r\n            APEX: ['']\r\n        });\r\n        this.valid = false;\r\n        this.saveType = '';\r\n        this.isSaveSubm = false;\r\n        this.newREQUEST_NO = '';\r\n        this.Table12EmptyArr = [];\r\n        this.chapter2EmptyArr = [];\r\n        this.Table12Arr = [];\r\n        this.chapter2Arr = [];\r\n        this.getEngineFamily();\r\n        this.loadPage();\r\n        this.callReqManagementEmpty();\r\n        this.service.lovMasaterList.subscribe((lovMasaterList) => {\r\n        });\r\n        this.service.loginUserID.subscribe((loginUserID) => {\r\n            this.loginUserID = loginUserID;\r\n        });\r\n        this.subscription = this.service.createPageEvents.subscribe((call) => {\r\n            switch (call) {\r\n                case 'save':\r\n                    this.saveDetails('save');\r\n                    break;\r\n                case 'submit':\r\n                    this.saveDetails('submit');\r\n                    break;\r\n                case 'obsolete':\r\n                    this.completeTask(4, this.openAs, '');\r\n                    break;\r\n                case 'clear':\r\n                    this.clear();\r\n                    break;\r\n                case 'seekClarification':\r\n                    this.service.OpenAs.next(false);\r\n                    this.completeTask(0, this.openAs, '');\r\n                    break;\r\n                case 'reject':\r\n                    this.completeTask(3, this.openAs, '');\r\n                    break;\r\n                case 'sentToARAI':\r\n                    this.sentToARAI();\r\n                    break;\r\n                case 'complete':\r\n                    this.saveARAI('complete');\r\n                    break;\r\n                case 'docSave':\r\n                    this.saveARAI('docsave');\r\n                    break;\r\n                case 'clone':\r\n                    this.saveDetails('clone');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.CLONE_REQUEST_NO = this.datavalidate(changes['requestIDClone'].currentValue.REQUEST_NO);\r\n        this.cloneHRNo = this.datavalidate(changes['cloneHRNo'].currentValue);\r\n    }\r\n    ngOnInit() {\r\n        this.getReportName();\r\n        this.getFDHLReportNameAndVersion();\r\n        this.activatedRoute.url.subscribe((urlSegments) => {\r\n            this.routeName = urlSegments[0].path;\r\n        });\r\n    }\r\n    getFDHLReportNameAndVersion() {\r\n        this.service.invokeService(\"GetFDHLReportNameAndVersion\", null, this.namespace, true, false)\r\n            .then((res) => {\r\n            res.forEach((obj) => {\r\n                if (obj.REPORT_REF_ID == 1) {\r\n                    this.reguTable12 = obj.REPORT_VERSION;\r\n                }\r\n                else if (obj.REPORT_REF_ID == 2) {\r\n                    this.reguCovering = obj.REPORT_VERSION;\r\n                }\r\n                else if (obj.REPORT_REF_ID == 3) {\r\n                    this.reguTable4G = obj.REPORT_VERSION;\r\n                }\r\n                else if (obj.REPORT_REF_ID == 4) {\r\n                    this.reguChapter2 = obj.REPORT_VERSION;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    cloneFdHlRequest() {\r\n        this.call_modal = false;\r\n        let obj = {\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            CHR_REF_NO: this.cloneHRNo,\r\n            CLONE_REQUEST_NO: this.CLONE_REQUEST_NO\r\n        };\r\n        this.service.invokeService(\"CloneFdHlRequest\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            var _a, _b, _c, _d;\r\n            this.service.cloneHRNo.next(this.cloneHRNo);\r\n            (_a = this.covering) === null || _a === void 0 ? void 0 : _a.getFDHLCoveringLetterDetails();\r\n            (_b = this.covering) === null || _b === void 0 ? void 0 : _b.getFDHLCLEnClosureDetails();\r\n            (_c = this.table12) === null || _c === void 0 ? void 0 : _c.getData();\r\n            (_d = this.table12) === null || _d === void 0 ? void 0 : _d.getFDHLRequestVariantDetails();\r\n            // this.getFDHLEngineModelsByFamily();\r\n            // this.getFDHLRequestVariantDetails(this.HR_REF_NO);\r\n            Promise.all([this.getFDHLRequestDetails(this.HR_REF_NO), this.callReqManagement1(this.HR_REF_NO)]).then((res) => {\r\n                // this.table4g?.getData();\r\n                // this.table4g?.getMesurment();\r\n                // this.table4g?.getMode();\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: `New Request Created Successfully`, 'text1': `Request ID`, 'text2': `${this.REQUEST_NO}`, active: this.call_modal };\r\n                }, 0);\r\n            });\r\n        });\r\n    }\r\n    getopenAs() {\r\n        let routerName = window.location.href.split('/')[window.location.href.split('/').length - 1];\r\n        if (routerName.includes('?')) {\r\n            this.OpenAs = routerName.split('?')[1].split('&')[1].split('=')[1];\r\n            if (this.OpenAs == 'customInboxTask' && this.actStage == '2' || this.OpenAs == 'completed' || this.OpenAs == 'dashboard') {\r\n                this.dis2 = true;\r\n                this.service.OpenAs.next(true);\r\n            }\r\n            else {\r\n                this.dis2 = false;\r\n                this.service.OpenAs.next(false);\r\n            }\r\n        }\r\n    }\r\n    engineCheckbox(HRV_REF_NO) {\r\n        if (this.dis2) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (HRV_REF_NO != '') {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        var _a, _b;\r\n        if (this.datavalidate(this.HR_REF_NO) == '') {\r\n            this.createRequestForm.patchValue({\r\n                LOCATION: '',\r\n                CERTIFICATION_TYPE: '',\r\n                ENGINE_FAMILY_NO: '',\r\n                WBS: '',\r\n                COST_CENTER: ''\r\n            });\r\n            this.remarks = '';\r\n            this.variantsArr = [];\r\n            this.nameArr = [];\r\n        }\r\n        else {\r\n            this.createRequestForm.patchValue({\r\n                WBS: '',\r\n                COST_CENTER: ''\r\n            });\r\n            this.remarks = '';\r\n            (_a = this.covering) === null || _a === void 0 ? void 0 : _a.clear();\r\n            (_b = this.table12) === null || _b === void 0 ? void 0 : _b.clear();\r\n            this.engineVarient.forEach((obj) => {\r\n                var _a, _b;\r\n                if (obj.HRV_REF_NO != '') {\r\n                    if (this.emisionComplaince == 'TR4') {\r\n                        (_a = this.table4g) === null || _a === void 0 ? void 0 : _a.clear(obj.HRV_REF_NO, obj.VARIANT);\r\n                    }\r\n                    else if (this.emisionComplaince == 'B3A') {\r\n                        (_b = this.chapter2) === null || _b === void 0 ? void 0 : _b.clear(obj.HRV_REF_NO, obj.VARIANT);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onButtonClick(event, type) {\r\n        event.stopPropagation();\r\n        //  if(type='covering'){\r\n        let obj = {\r\n            FDHL_DOC_TYPE: type,\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            HRV_REF_NO: '',\r\n            REPORT_REF_ID: ''\r\n        };\r\n        this.service.invokeService(\"GenerateFDHlWordDocument\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.coveringWordDoc = res[0].generateFDHlWordDocument;\r\n            this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlWordDocument, res[0].generateFDHlWordDocument + \";reportpath\", this.namespace, true, false);\r\n        });\r\n    }\r\n    consolidate() {\r\n        let type = '';\r\n        let refId = 0;\r\n        if (this.emisionComplaince == 'TR4') {\r\n            type = 'Table 4G';\r\n            refId = 3;\r\n        }\r\n        else if (this.emisionComplaince == 'B3A') {\r\n            type = 'Chapter 2';\r\n            refId = 4;\r\n        }\r\n        let obj = {\r\n            FDHL_DOC_TYPE: type,\r\n            HR_REF_NO: this.HR_REF_NO,\r\n            HRV_REF_NO: '',\r\n            REPORT_REF_ID: refId\r\n        };\r\n        this.service.invokeService(\"GenerateFDHlConsolidateReport\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.service.downloadFile(\"DownloadDocument\", res[0].generateFDHlConsolidateReport, res[0].generateFDHlConsolidateReport + \";reportpath\", this.namespace, true, false);\r\n        });\r\n    }\r\n    ARAIValid() {\r\n        if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '') {\r\n            this.isSubmitted1 = true;\r\n            this.ARAITrue = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    sentToARAI() {\r\n        this.call_modal = false;\r\n        if (this.ARAIValid()) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { 'text': 'Please Enter ARAI Request Number', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        let dataObj1 = {};\r\n        if (this.datavalidate(this.HR_REF_NO) != '') {\r\n            dataObj1 = {\r\n                tuple: {\r\n                    old: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            HR_REF_NO: this.HR_REF_NO\r\n                        }\r\n                    },\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value)\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj1, this.namespace, true, false)\r\n            .then((res) => {\r\n            let dataObj = {\r\n                HR_REF_NO: this.HR_REF_NO,\r\n                from_User: this.loginUserID,\r\n                to_User: '',\r\n                mailType: 'Send to ARAI',\r\n                stage: this.actStage,\r\n                status: 5,\r\n                taskId: this.taskId,\r\n                remarks: this.remarks\r\n            };\r\n            this.service.invokeService(\"SendFD_HLCustomMailWrapper\", dataObj, this.namespace, true, false)\r\n                .then((res) => {\r\n                // this.ARAIFlag = res[0].sendFD_HLCustomMailWrapper;\r\n                let dataObj = { HR_REF_NO: this.HR_REF_NO };\r\n                this.service.invokeService(\"GetFDHLRequestDetails\", dataObj, this.namespace, true, false).then((res) => {\r\n                    this.procesStatus = res[0].PROCESS_STATUS;\r\n                    this.service.ARAIFlag.next(this.procesStatus);\r\n                });\r\n                this.getFD_HLHistoryDetailsByHR_RefNo();\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { 'text': 'Task Sent to ARAI Successfully', active: this.call_modal };\r\n                }, 0);\r\n            });\r\n        });\r\n    }\r\n    getEngineFamily() {\r\n        let dataObj = { ENGINE_M_REF_ID: '' };\r\n        this.service.invokeService(\"GetFDHLEngineFamilyDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineFamilyDataArr = res;\r\n            res.forEach((data) => {\r\n                this.ENGINE_FAMILY_NO_Arr.push({ RefNo: data.ENGINE_F_REF_ID, ENGINE_FAMILY_NO: data.ENGINE_FAMILY_NO, EMISSION_COMPLIANCE: data.EMISSION_COMPLIANCE });\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        var _a;\r\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\r\n    }\r\n    backBtnLink() {\r\n        if (this.HR_REF_NO != '' && (this.datavalidate(this.openAs) != '')) {\r\n            return true;\r\n        }\r\n        if (this.HR_REF_NO == '') {\r\n            return false;\r\n        }\r\n        if (this.HR_REF_NO != '' && (this.datavalidate(this.openAs) == '')) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    validTypeApproval() {\r\n        this.call_modal = false;\r\n        let obj = { ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value };\r\n        this.service.invokeService(\"GetFDHLApprovalRequestNo\", obj, this.namespace, true, false)\r\n            .then((res) => {\r\n            // this.isValidApproval = this.datavalidate(res[0].REQUEST_NO)\r\n            if (res.length == 0) {\r\n                if (this.createRequestForm.controls['CERTIFICATION_TYPE'].value == 'Amendment' && this.createRequestForm.controls['ENGINE_FAMILY_NO'].value != '') {\r\n                    setTimeout(() => {\r\n                        this.call_modal = true;\r\n                        this.data_send = { text: 'Please Create Type Approval Request', active: this.call_modal };\r\n                        this.createRequestForm.patchValue({ CERTIFICATION_TYPE: '' });\r\n                    }, 0);\r\n                }\r\n            }\r\n            else {\r\n                if (res[0].CERTIFICATION_TYPE == \"Approval\" && this.createRequestForm.controls['CERTIFICATION_TYPE'].value == 'Approval') {\r\n                    setTimeout(() => {\r\n                        this.call_modal = true;\r\n                        this.data_send = {\r\n                            text: this.datavalidate(res[0].REQUEST_NO) + ' is already created',\r\n                            text1: 'For Type Approval with Engine Family No. ' + this.createRequestForm.controls['ENGINE_FAMILY_NO'].value, active: this.call_modal\r\n                        };\r\n                        this.createRequestForm.patchValue({ CERTIFICATION_TYPE: '' });\r\n                    }, 0);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    back() {\r\n        let variable = this.OpenAs == 'saved' ? 'saved' :\r\n            this.OpenAs == 'customInboxTask' ? 'inbox' : this.OpenAs == 'completed' ? 'completedTasks' : '';\r\n        this.menuComp.menuHideFun();\r\n        this.location.back();\r\n        // this.router.navigate(['inbox']);\r\n        this.service.routeChange.next(variable);\r\n        this.service.createPageEvents.next('');\r\n        this.service.OpenAs.next(false);\r\n    }\r\n    workflowHistory() {\r\n        this.AAHPopup = 'block';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n    }\r\n    closeWorkFlowDoc() {\r\n        this.AAHPopup = 'none';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"auto\";\r\n    }\r\n    getFD_HLHistoryDetailsByHR_RefNo() {\r\n        let dataObj = { HR_RefNo: this.HR_REF_NO };\r\n        this.service.invokeService(\"GetFD_HLHistoryDetailsByHR_RefNo\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.AAHArr = res;\r\n        });\r\n    }\r\n    async getFDHLRequestDetails(arg) {\r\n        let dataObj = { HR_REF_NO: arg };\r\n        await this.service.invokeService(\"GetFDHLRequestDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            // this.clarificationType = this.datavalidate(res[0].CERTIFICATION_TYPE)\r\n            this.REQUEST_NO = res[0].REQUEST_NO;\r\n            this.procesStatus = res[0].PROCESS_STATUS;\r\n            this.remarks = this.datavalidate(this.actStage) == '' ? res[0].REMARKS : '';\r\n            this.createRequestForm.patchValue({\r\n                LOCATION: this.datavalidate(res[0].LOCATION),\r\n                CERTIFICATION_TYPE: this.datavalidate(res[0].CERTIFICATION_TYPE),\r\n                ENGINE_FAMILY_NO: this.datavalidate(res[0].ENGINE_FAMILY_NO),\r\n                WBS: this.datavalidate(res[0].WBS),\r\n                COST_CENTER: this.datavalidate(res[0].COST_CENTER),\r\n                ARAI: this.datavalidate(res[0].ARAI_NO),\r\n                APEX: this.datavalidate(res[0].APEX_NO),\r\n            });\r\n            // if(this.routeName!='clone'){\r\n            this.getFDHLEngineModelsByFamily();\r\n            this.service.ARAIFlag.next(this.procesStatus);\r\n            // }\r\n        });\r\n    }\r\n    getFD_HLDocDetailsByHR_RefNo(arg) {\r\n        this.documentsArr = [];\r\n        this.certdocumentsArr = [];\r\n        this.repdocumentsArr = [];\r\n        this.appdocumentsArr = [];\r\n        this.dradocumentsArr = [];\r\n        this.invdocumentsArr = [];\r\n        this.initValue = 0;\r\n        this.gridDocSize = 0;\r\n        let dataObj = { HR_RefNo: arg };\r\n        this.service.invokeService(\"GetFD_HLDocDetailsByHR_RefNo\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            res.filter((doc) => {\r\n                switch (doc.DOC_TYPE) {\r\n                    case 'Main':\r\n                        this.documentsArr.push(doc);\r\n                        this.initValue += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Certificates':\r\n                        this.certdocumentsArr.push(doc);\r\n                        this.gridDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Reports':\r\n                        this.repdocumentsArr.push(doc);\r\n                        this.gridDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Approved':\r\n                        this.appdocumentsArr.push(doc);\r\n                        this.gridDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Drawings':\r\n                        this.dradocumentsArr.push(doc);\r\n                        this.gridDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    case 'Invoice':\r\n                        this.invdocumentsArr.push(doc);\r\n                        this.gridDocSize += parseFloat(doc.DOC_SIZE);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    getFDHLEngineModelsByFamily() {\r\n        this.call_modal = false;\r\n        this.variantsArr = [];\r\n        this.variantsArr1 = [];\r\n        if (this.datavalidate(this.HR_REF_NO) == '') {\r\n            this.callReqManagement1(this.HR_REF_NO);\r\n        }\r\n        let dataObj = { ENGINE_FAMILY_NO: this.createRequestForm.controls['ENGINE_FAMILY_NO'].value };\r\n        this.service.invokeService(\"GetFDHLEngineModelsByFamily\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineVarient = res;\r\n            this.engineVarient.forEach((d1) => {\r\n                d1.HRV_REF_NO = '';\r\n                d1.isChecked = false;\r\n            });\r\n            this.ENGINE_FAMILY_NO_Arr.forEach((d) => {\r\n                if (d.ENGINE_FAMILY_NO == this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\r\n                    this.emisionComplaince = d.EMISSION_COMPLIANCE;\r\n                }\r\n            });\r\n            if (this.datavalidate(this.openAs) == '') {\r\n                this.validTypeApproval();\r\n            }\r\n            this.isvarientCheck();\r\n        });\r\n    }\r\n    isvarientCheck() {\r\n        let check = false;\r\n        if (this.engineVarient == 0) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Please create at least one variant', active: this.call_modal };\r\n            }, 0);\r\n            check = true;\r\n        }\r\n        return check;\r\n    }\r\n    async loadPage() {\r\n        this.activatedRoute.queryParams.subscribe(async (params) => {\r\n            this.HR_REF_NO = params.HR_REF_NO;\r\n            this.taskId = params['taskId'];\r\n            this.openAs = params['openAs'];\r\n            this.service.actStag.next('');\r\n            if (this.taskId) {\r\n                $.cordys.json.defaults.removeNamespacePrefix = true;\r\n                await $.cordys.workflow.getTaskDetails(this.taskId).done((tData) => {\r\n                    // this.taskState = tData.State;\r\n                    this.HR_REF_NO = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.HR_REF_NO;\r\n                    this.actRole = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.ACT_ROLE;\r\n                    this.actStage = tData.TaskData.ApplicationData.FD_HL_IP_SchemaFragment.STAGE;\r\n                    let varObj = this.actRole + ',' + this.actStage;\r\n                    this.service.roleStage.next(varObj);\r\n                    this.service.actStag.next(this.actStage);\r\n                    this.getopenAs();\r\n                });\r\n            }\r\n            if (this.datavalidate(this.HR_REF_NO) != '') {\r\n                let obj = { 'HR_REF_NO': this.HR_REF_NO, 'actRole': this.actRole, 'actStage': this.actStage };\r\n                this.service.sharingData(obj, 'HR_REF_NO');\r\n                this.service.taskPage.next(true);\r\n                this.getFDHLRequestDetails(this.HR_REF_NO);\r\n                this.callReqManagement1(this.HR_REF_NO);\r\n                this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\r\n                this.getFD_HLHistoryDetailsByHR_RefNo();\r\n            }\r\n        });\r\n        this.getopenAs();\r\n    }\r\n    variantSelect(obj) {\r\n        if (!obj.isChecked) {\r\n            // this.idArr.splice(this.idArr.indexOf(obj.LOV_ID), 1)\r\n            this.nameArr.splice(this.nameArr.indexOf(obj.VARIANT), 1);\r\n            if (this.datavalidate(obj.HRV_REF_NO) == '') {\r\n            }\r\n            else {\r\n                let param = {\r\n                    'tuple': {\r\n                        'old': {\r\n                            'FD_HL_REQUEST_VARIANTS': {\r\n                                'HRV_REF_NO': obj.HRV_REF_NO\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                this.service.invokeService(\"UpdateFdHlRequestVariants\", param, this.namespace, true, false)\r\n                    .then((res) => {\r\n                    obj.isChecked = false;\r\n                });\r\n            }\r\n            this.variantsArr.forEach((d) => {\r\n                if (d.LOV_DESC == obj.VARIANT) {\r\n                    this.variantsArr.splice(this.variantsArr.indexOf(d), 1);\r\n                }\r\n            });\r\n            this.variantsArr1.forEach((d1) => {\r\n                if (d1.LOV_DESC == obj.VARIANT) {\r\n                    this.variantsArr1.splice(this.variantsArr1.indexOf(d1), 1);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // this.idArr.push(obj.VARIANT)\r\n            this.nameArr.push(obj.VARIANT);\r\n            let temp = { HRV_REF_NO: obj.HRV_REF_NO, LOV_DESC: obj.VARIANT, Table12Arr: [], Measurment: [], Mode: [{ innerArr: [] }] };\r\n            let temp1 = { HRV_REF_NO: obj.HRV_REF_NO, LOV_DESC: obj.VARIANT, Table12Arr1: [], Measurment: [], Mode: [{ innerArr: [] }] };\r\n            this.variantsArr.push(temp);\r\n            this.variantsArr1.push(temp1);\r\n        }\r\n        // this.idArrStr = this.idArr.toString();\r\n        this.nameArrStr = [...new Set(this.nameArr)].toString();\r\n        this.variantsArr = [...new Set(this.variantsArr)];\r\n        this.variantsArr1 = [...new Set(this.variantsArr1)];\r\n        this.getFdHlRequestManagement();\r\n        this.getFdHlRequestManagement1();\r\n    }\r\n    getFDHLRequestVariantDetails(arg) {\r\n        this.HRV_REF_NOArr = [];\r\n        this.nameArr = [];\r\n        var param = { HR_REF_NO: arg };\r\n        this.service.invokeService(\"GetFDHLRequestVariantDetails\", param, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.engineVarient.filter((d) => {\r\n                res.forEach((d1) => {\r\n                    if (d.VARIANT == d1.VARIANT) {\r\n                        d.HRV_REF_NO = d1.HRV_REF_NO;\r\n                        this.HRV_REF_NOArr.push(d1.HRV_REF_NO);\r\n                        this.nameArr.push(d1.VARIANT);\r\n                        d.isChecked = true;\r\n                        this.variantsArr.push({ HR_REF_NO: d1.HR_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, LOV_DESC: d.VARIANT, Table12Arr: [], Measurment: [], Mode: [{ innerArr: [] }] });\r\n                        this.variantsArr1.push({ HR_REF_NO: d1.HR_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, LOV_DESC: d.VARIANT, Table12Arr1: [], Measurment: [], Mode: [{ innerArr: [] }] });\r\n                    }\r\n                });\r\n            });\r\n            this.getFdHlRequestManagement();\r\n            this.getFdHlRequestManagement1();\r\n        });\r\n    }\r\n    saveVariants() {\r\n        let ParamTuple = [];\r\n        var params = {};\r\n        for (var obj of this.engineVarient) {\r\n            // if(obj.isChecked){\r\n            if (this.datavalidate(obj.HRV_REF_NO) == \"\") {\r\n                params = {\r\n                    'new': {\r\n                        'FD_HL_REQUEST_VARIANTS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'VARIANT': this.datavalidate(obj.VARIANT),\r\n                            'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                params = {\r\n                    'old': {\r\n                        'FD_HL_REQUEST_VARIANTS': {\r\n                            'HRV_REF_NO': obj.HRV_REF_NO\r\n                        }\r\n                    },\r\n                    'new': {\r\n                        'FD_HL_REQUEST_VARIANTS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'VARIANT': this.datavalidate(obj.VARIANT),\r\n                            'ENGINE_MODEL_NO': this.datavalidate(obj.ENGINE_MODEL_NO)\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            // }\r\n            if (obj.isChecked) {\r\n                ParamTuple.push(params);\r\n            }\r\n        }\r\n        var paramsAll = { 'tuple': ParamTuple };\r\n        this.service.invokeService(\"UpdateFdHlRequestVariants\", paramsAll, this.namespace, true, false)\r\n            .then((res) => {\r\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\r\n            res.forEach((obj) => {\r\n                this.HRV_REF_NOArr.push(obj.HRV_REF_NO);\r\n            });\r\n            this.engineVarient.filter((d) => {\r\n                res.forEach((d1) => {\r\n                    if (d.VARIANT == d1.VARIANT) {\r\n                        d.HRV_REF_NO = d1.HRV_REF_NO;\r\n                    }\r\n                });\r\n            });\r\n            // this.service.callTable4G.next('table4g');\r\n            // this.service.callTable4G.next('chapter2');\r\n            // this.service.callTable4G.next('table12');\r\n            // this.service.callTable4G.next('covering');\r\n            if (this.saveType != 'clone') {\r\n                if (this.emisionComplaince == 'TR4') {\r\n                    Promise.all([(_a = this.covering) === null || _a === void 0 ? void 0 : _a.updateFdHlCoveringLetter(), (_b = this.covering) === null || _b === void 0 ? void 0 : _b.updateFdHlClEnclosure(), (_c = this.table4g) === null || _c === void 0 ? void 0 : _c.save(), (_d = this.table12) === null || _d === void 0 ? void 0 : _d.updateFdHlTable12(), (_e = this.table12) === null || _e === void 0 ? void 0 : _e.updateFdHlTab12SpecChanges(), (_f = this.table4g) === null || _f === void 0 ? void 0 : _f.saveMode(), (_g = this.table4g) === null || _g === void 0 ? void 0 : _g.saveMeasurment()]).then((res) => {\r\n                        this.saveDocuments();\r\n                    }).catch(error => {\r\n                        alert('error: data not saved successfully');\r\n                    });\r\n                }\r\n                else if (this.emisionComplaince == 'B3A') {\r\n                    Promise.all([(_h = this.covering) === null || _h === void 0 ? void 0 : _h.updateFdHlCoveringLetter(), (_j = this.covering) === null || _j === void 0 ? void 0 : _j.updateFdHlClEnclosure(), (_k = this.chapter2) === null || _k === void 0 ? void 0 : _k.save(), (_l = this.table12) === null || _l === void 0 ? void 0 : _l.updateFdHlTable12(), (_m = this.table12) === null || _m === void 0 ? void 0 : _m.updateFdHlTab12SpecChanges(), (_o = this.chapter2) === null || _o === void 0 ? void 0 : _o.saveMode(), (_p = this.chapter2) === null || _p === void 0 ? void 0 : _p.saveMeasurment()]).then((res) => {\r\n                        this.saveDocuments();\r\n                    }).catch(error => {\r\n                        alert('error: data not saved successfully');\r\n                    });\r\n                }\r\n                else {\r\n                    Promise.all([(_q = this.covering) === null || _q === void 0 ? void 0 : _q.updateFdHlCoveringLetter(), (_r = this.covering) === null || _r === void 0 ? void 0 : _r.updateFdHlClEnclosure(), (_s = this.table12) === null || _s === void 0 ? void 0 : _s.updateFdHlTable12(), (_t = this.table12) === null || _t === void 0 ? void 0 : _t.updateFdHlTab12SpecChanges()])\r\n                        .then((res) => {\r\n                        this.saveDocuments();\r\n                    }).catch(error => {\r\n                        alert('error: data not saved successfully');\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                this.cloneFdHlRequest();\r\n            }\r\n        });\r\n    }\r\n    getReportName() {\r\n        this.service.invokeService(\"GetFDHLReportNames\", null, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.ReportName = res;\r\n            res.forEach((d) => {\r\n                if (d.REPORT_NAME == 'Table 4G') {\r\n                    this.table4gVar.push(d);\r\n                }\r\n                else if (d.REPORT_NAME == 'Chapter 2') {\r\n                    this.chapter2Var.push(d);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    openDoc() {\r\n        this.displayPopup = 'block';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"hidden\";\r\n        // body.style.opacity = '0.85';\r\n    }\r\n    closeDoc() {\r\n        this.displayPopup = 'none';\r\n        const body = document.querySelector(\"body\");\r\n        body.style.overflow = \"auto\";\r\n        // body.style.opacity = '1';\r\n    }\r\n    downloadFile(doc) {\r\n        this.service.downloadFile(\"DownloadDocument\", doc.DOC_NAME, doc.DOC_PATH, this.namespace);\r\n    }\r\n    checkAllCheckBox(ev) {\r\n        this.documentsArr.forEach((x) => x.checked = ev.target.checked);\r\n        ev.target.checked ? this.documentsArr.forEach((x) => {\r\n            this.checkedRows.push(x);\r\n        }) : this.checkedRows = [];\r\n    }\r\n    isAllCheckBoxChecked() {\r\n        return this.documentsArr.every((p) => p.checked);\r\n    }\r\n    tdCheckbox(row) {\r\n        row.checked == true ? this.checkedRows.push(row) : this.checkedRows.splice(this.checkedRows.indexOf(row), 1);\r\n    }\r\n    uploadFile() {\r\n        $(\"#fileUploadDoc\").click();\r\n    }\r\n    UploadFileDoc(e) {\r\n        this.call_modal = false;\r\n        this.file = e.target.files[0];\r\n        this.fileName = e.target.files[0].name;\r\n        const record = this.documentsArr.find((item) => {\r\n            return item.DOC_NAME == this.fileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n        }\r\n        else {\r\n            if (this.initValue + parseFloat(this.file.size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n            else {\r\n                this.service.uploadFile(\"UploadFDHLDocumnets\", this.file, [], this.namespace, false, false)\r\n                    .then((resDocPath) => {\r\n                    this.initValue = this.initValue + parseFloat(this.file.size) / 1024 / 1024;\r\n                    this.documentsArr.push({\r\n                        'DOC_NAME': this.service.datavalidate(this.fileName),\r\n                        \"DOC_PATH\": resDocPath,\r\n                        'DOC_TYPE': 'Main',\r\n                        'UPLOADERNAME': this.loginUserID,\r\n                        'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                        'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                    });\r\n                    this.fileUploadDoc = '';\r\n                });\r\n            }\r\n        }\r\n    }\r\n    certUploadFile() {\r\n        $(\"#certfileUploadDoc\").click();\r\n    }\r\n    certUploadFileDoc(e) {\r\n        this.call_modal = false;\r\n        this.certfile = e.target.files[0];\r\n        this.certfileName = e.target.files[0].name;\r\n        const record = this.certdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.certfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n        }\r\n        else {\r\n            if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.certfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\r\n                this.certdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.certfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Certificates',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.certfileUploadDoc = '';\r\n            });\r\n        }\r\n    }\r\n    repUploadFile() {\r\n        $(\"#repfileUploadDoc\").click();\r\n    }\r\n    repUploadFileDoc(e) {\r\n        this.call_modal = false;\r\n        this.repfile = e.target.files[0];\r\n        this.repfileName = e.target.files[0].name;\r\n        const record = this.repdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.repfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n        }\r\n        else {\r\n            if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.repfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\r\n                this.repdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.repfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Reports',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.repfileUploadDoc = '';\r\n            });\r\n        }\r\n    }\r\n    appUploadFile() {\r\n        $(\"#appfileUploadDoc\").click();\r\n    }\r\n    appUploadFileDoc(e) {\r\n        this.call_modal = false;\r\n        this.appfile = e.target.files[0];\r\n        this.appfileName = e.target.files[0].name;\r\n        const record = this.appdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.appfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n        }\r\n        else {\r\n            if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.appfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\r\n                this.appdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.appfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Approved',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.appfileUploadDoc = '';\r\n            });\r\n        }\r\n    }\r\n    draUploadFile() {\r\n        $(\"#drafileUploadDoc\").click();\r\n    }\r\n    draUploadFileDoc(e) {\r\n        this.call_modal = false;\r\n        this.drafile = e.target.files[0];\r\n        this.drafileName = e.target.files[0].name;\r\n        const record = this.dradocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.drafileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n        }\r\n        else {\r\n            if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.drafile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\r\n                this.dradocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.drafileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Drawings',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.drafileUploadDoc = '';\r\n            });\r\n        }\r\n    }\r\n    invUploadFile() {\r\n        $(\"#invfileUploadDoc\").click();\r\n    }\r\n    invUploadFileDoc(e) {\r\n        this.call_modal = false;\r\n        this.invfile = e.target.files[0];\r\n        this.invfileName = e.target.files[0].name;\r\n        const record = this.invdocumentsArr.find((item) => {\r\n            return item.DOC_NAME == this.invfileName;\r\n        });\r\n        if (record) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'This File Already Exists', active: this.call_modal };\r\n            }, 0);\r\n        }\r\n        else {\r\n            if (parseFloat(e.target.files[0].size) / 1024 / 1024 > 50) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: 'Document Size Limit Exceeded,You have total limit upto 50MB !', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n            this.service.uploadFile(\"UploadFDHLDocumnets\", this.invfile, [], this.namespace, false, false)\r\n                .then((resDocPath) => {\r\n                this.gridDocSize = this.gridDocSize + parseFloat(e.target.files[0].size) / 1024 / 1024;\r\n                this.invdocumentsArr.push({\r\n                    'DOC_NAME': this.service.datavalidate(this.invfileName),\r\n                    \"DOC_PATH\": resDocPath,\r\n                    'UPLOADER_ID': this.loginUserID,\r\n                    'UPLOADED_ON': this.datepipe.transform(new Date(), 'dd-MM-yyyy'),\r\n                    'DOC_TYPE': 'Invoice',\r\n                    'DOC_SIZE': e.target.files[0].size / 1024 / 1024\r\n                });\r\n                this.invfileUploadDoc = '';\r\n            });\r\n        }\r\n    }\r\n    certDelete(i) {\r\n        if (this.datavalidate(this.certdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.certdocumentsArr[i].DOC_REF_NO);\r\n                    this.gridDocSize = this.gridDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\r\n                    this.certdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.gridDocSize = this.gridDocSize - parseFloat(this.certdocumentsArr[i].DOC_SIZE);\r\n            this.certdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    repDelete(i) {\r\n        if (this.datavalidate(this.repdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.repdocumentsArr[i].DOC_REF_NO);\r\n                    this.gridDocSize = this.gridDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\r\n                    this.repdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.gridDocSize = this.gridDocSize - parseFloat(this.repdocumentsArr[i].DOC_SIZE);\r\n            this.repdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    appDelete(i) {\r\n        if (this.datavalidate(this.appdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.appdocumentsArr[i].DOC_REF_NO);\r\n                    this.gridDocSize = this.gridDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\r\n                    this.appdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.gridDocSize = this.gridDocSize - parseFloat(this.appdocumentsArr[i].DOC_SIZE);\r\n            this.appdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    draDelete(i) {\r\n        if (this.datavalidate(this.dradocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.dradocumentsArr[i].DOC_REF_NO);\r\n                    this.gridDocSize = this.gridDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\r\n                    this.dradocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.gridDocSize = this.gridDocSize - parseFloat(this.dradocumentsArr[i].DOC_SIZE);\r\n            this.dradocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    invDelete(i) {\r\n        if (this.datavalidate(this.invdocumentsArr[i].DOC_REF_NO) != '') {\r\n            this.confirmationService.confirm({\r\n                message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n                accept: () => {\r\n                    this.gridDeleteFile(this.invdocumentsArr[i].DOC_REF_NO);\r\n                    this.gridDocSize = this.gridDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\r\n                    this.invdocumentsArr.splice(i, 1);\r\n                },\r\n                reject: () => { }\r\n            });\r\n        }\r\n        else {\r\n            this.gridDocSize = this.gridDocSize - parseFloat(this.invdocumentsArr[i].DOC_SIZE);\r\n            this.invdocumentsArr.splice(i, 1);\r\n        }\r\n    }\r\n    gridDocSave(arg) {\r\n        this.call_modal = false;\r\n        const concatArr = [this.certdocumentsArr, this.repdocumentsArr, this.appdocumentsArr, this.dradocumentsArr, this.invdocumentsArr].flat();\r\n        let ParamTuple = [];\r\n        var params = {};\r\n        for (var save of concatArr) {\r\n            if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\r\n                params = {\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            \"UPLOADER_ID\": save.UPLOADER_ID,\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                params = {\r\n                    'old': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_REF_NO': save.DOC_REF_NO\r\n                        }\r\n                    },\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            ParamTuple.push(params);\r\n        }\r\n        var paramsAll = { 'tuple': ParamTuple };\r\n        this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.gridDocSplit(res);\r\n            if (arg == 'complete') {\r\n                this.completeTask(1, this.openAs, '');\r\n            }\r\n            else {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { 'text': `Saved successfully `, active: this.call_modal };\r\n                }, 0);\r\n            }\r\n        }, (err) => {\r\n            console.log(\"Error occured while saving Docdata \");\r\n        });\r\n    }\r\n    gridDocSplit(doc) {\r\n        this.certdocumentsArr = [];\r\n        this.repdocumentsArr = [];\r\n        this.appdocumentsArr = [];\r\n        this.dradocumentsArr = [];\r\n        this.invdocumentsArr = [];\r\n        doc.forEach((obj) => {\r\n            switch (obj.DOC_TYPE) {\r\n                case 'Certificates':\r\n                    this.certdocumentsArr.push(obj);\r\n                    break;\r\n                case 'Reports':\r\n                    this.repdocumentsArr.push(obj);\r\n                    break;\r\n                case 'Approved':\r\n                    this.appdocumentsArr.push(obj);\r\n                    break;\r\n                case 'Drawings':\r\n                    this.dradocumentsArr.push(obj);\r\n                    break;\r\n                case 'Invoice':\r\n                    this.invdocumentsArr.push(obj);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    gridDeleteFile(i) {\r\n        this.call_modal = false;\r\n        let dataObj = {\r\n            tuple: {\r\n                old: {\r\n                    FD_HL_DOC_DETAILS: {\r\n                        DOC_REF_NO: i,\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).\r\n            then((ajaxResponse) => {\r\n            // this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'File Deleted Successfull', active: this.call_modal };\r\n            }, 0);\r\n        });\r\n    }\r\n    gridDocValid(arg) {\r\n        if (arg != 'docsave') {\r\n            this.docSubmit = true;\r\n            if (this.datavalidate(this.createRequestForm.controls['ARAI'].value) == '' || this.datavalidate(this.createRequestForm.controls['APEX'].value) == '') {\r\n                return true;\r\n            }\r\n            if (this.certdocumentsArr.length == 0 || this.repdocumentsArr.length == 0 || this.appdocumentsArr.length == 0 || this.dradocumentsArr.length == 0 || this.invdocumentsArr.length == 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    saveARAI(arg) {\r\n        this.ARAITrue = true;\r\n        this.isSubmitted1 = true;\r\n        this.call_modal = false;\r\n        if (this.gridDocValid(arg)) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Please enter all mandatory fields', active: this.call_modal, };\r\n            }, 0);\r\n            return;\r\n        }\r\n        let dataObj = {};\r\n        if (this.datavalidate(this.HR_REF_NO) != '') {\r\n            dataObj = {\r\n                tuple: {\r\n                    old: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            HR_REF_NO: this.HR_REF_NO\r\n                        }\r\n                    },\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'ARAI_NO': this.datavalidate(this.createRequestForm.controls['ARAI'].value),\r\n                            'APEX_NO': this.datavalidate(this.createRequestForm.controls['APEX'].value),\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.gridDocSave(arg);\r\n        });\r\n    }\r\n    isValid() {\r\n        this.valid = false;\r\n        if (true) {\r\n            if (this.datavalidate(this.createRequestForm.controls['WBS'].value) == '' && this.saveType != 'clone' ||\r\n                this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value) == '' && this.saveType != 'clone') {\r\n                this.valid = true;\r\n            }\r\n            if (this.routeName == 'clone' && this.CLONE_REQUEST_NO == '') {\r\n                this.valid = true;\r\n            }\r\n            if (this.saveType != 'clone') {\r\n                for (let i = 0; i < this.variantsArr.length; i++) {\r\n                    for (var obj of this.variantsArr[i].Table12Arr) {\r\n                        if (obj.MANDATORY == 'Yes' && (this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && this.emisionComplaince == 'TR4')) {\r\n                            this.valid = true;\r\n                            this.service.callTable4G.next('table4g');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.saveType != 'clone') {\r\n                for (let i = 0; i < this.variantsArr1.length; i++) {\r\n                    for (var obj of this.variantsArr1[i].Table12Arr1) {\r\n                        if (obj.MANDATORY == 'Yes' && (this.datavalidate(obj.ATTR_VALUE) == '' && this.datavalidate(obj.ANNEXURE_PATH) == '' && this.emisionComplaince == 'B3A')) {\r\n                            this.valid = true;\r\n                            this.service.callTable4G.next('chapter2');\r\n                            //return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.valid = false;\r\n        }\r\n        return this.valid;\r\n    }\r\n    saveValid() {\r\n        if (this.datavalidate(this.createRequestForm.controls['LOCATION'].value) == '' || this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value) == '' ||\r\n            this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) == '' || this.variantsArr.length == 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    saveDetails(arg) {\r\n        this.saveType = arg;\r\n        let dataObj = {};\r\n        this.call_modal = false;\r\n        if (this.isvarientCheck() && this.createRequestForm.controls['ENGINE_FAMILY_NO'].value) {\r\n            return;\r\n        }\r\n        if (this.saveValid()) {\r\n            this.isSaveSubm = true;\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { 'text': 'Please Enter All Mandatory Fields', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (arg == 'submit' || arg == 'clone') {\r\n            this.isSubmitted = arg == 'submit' ? true : false;\r\n            if (this.isValid()) {\r\n                setTimeout(() => {\r\n                    this.call_modal = true;\r\n                    this.data_send = { 'text': 'Please Enter All Mandatory Fields', active: this.call_modal };\r\n                }, 0);\r\n                return;\r\n            }\r\n        }\r\n        if (this.datavalidate(this.HR_REF_NO) != '') {\r\n            dataObj = {\r\n                tuple: {\r\n                    old: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            HR_REF_NO: this.HR_REF_NO\r\n                        }\r\n                    },\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'LOCATION': this.datavalidate(this.createRequestForm.controls['LOCATION'].value),\r\n                            'CERTIFICATION_TYPE': this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value),\r\n                            'ENGINE_FAMILY_NO': this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\r\n                            'WBS': this.datavalidate(this.createRequestForm.controls['WBS'].value),\r\n                            'COST_CENTER': this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value),\r\n                            'REQUEST_NO': this.routeName == 'clone' ? this.newREQUEST_NO : this.REQUEST_NO,\r\n                            CLONE_REQUEST_NO: this.routeName == 'clone' ? this.CLONE_REQUEST_NO : '',\r\n                            REMARKS: this.remarks\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            dataObj = {\r\n                tuple: {\r\n                    new: {\r\n                        FD_HL_REQUEST_DETAILS: {\r\n                            'HR_REF_NO': '',\r\n                            'LOCATION': this.datavalidate(this.createRequestForm.controls['LOCATION'].value),\r\n                            'CERTIFICATION_TYPE': this.datavalidate(this.createRequestForm.controls['CERTIFICATION_TYPE'].value),\r\n                            'ENGINE_FAMILY_NO': this.datavalidate(this.createRequestForm.controls['ENGINE_FAMILY_NO'].value),\r\n                            'WBS': this.datavalidate(this.createRequestForm.controls['WBS'].value),\r\n                            'COST_CENTER': this.datavalidate(this.createRequestForm.controls['COST_CENTER'].value),\r\n                            'INITIATOR_ID': this.loginUserID,\r\n                            'INITIATION_DATE': this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\r\n                            'PROCESS_STATUS': '0',\r\n                            CLONE_REQUEST_NO: this.routeName == 'clone' ? this.CLONE_REQUEST_NO : '',\r\n                            REMARKS: this.remarks,\r\n                            'CHAPTER2_REVISION': this.reguChapter2,\r\n                            'CL_REVISION': this.reguCovering,\r\n                            'TABLE4G_REVISION': this.reguTable4G,\r\n                            'TABLE12_REVISION': this.reguTable12,\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        this.service.invokeService(\"UpdateFdHlRequestDetails\", dataObj, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.HR_REF_NO = res[0].HR_REF_NO;\r\n            let obj = { 'HR_REF_NO': this.HR_REF_NO, 'actRole': this.actRole, 'actStage': this.actStage };\r\n            this.service.sharingData(obj, 'HR_REF_NO');\r\n            this.service.createPageEvents.next('');\r\n            this.REQUEST_NO = res[0].REQUEST_NO;\r\n            this.newREQUEST_NO = res[0].REQUEST_NO;\r\n            this.saveVariants();\r\n        }, (err) => {\r\n            console.log('Error occured! While saving the data');\r\n        });\r\n    }\r\n    saveDocuments() {\r\n        let ParamTuple = [];\r\n        var params = {};\r\n        for (var save of this.documentsArr) {\r\n            if (save.DOC_REF_NO == undefined || save.DOC_REF_NO == \"\") {\r\n                params = {\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'HR_REF_NO': this.HR_REF_NO,\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            \"UPLOADER_ID\": save.UPLOADERNAME,\r\n                            'DOC_REMARKS': save.DOC_REMARKS,\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                params = {\r\n                    'old': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_REF_NO': save.DOC_REF_NO\r\n                        }\r\n                    },\r\n                    'new': {\r\n                        'FD_HL_DOC_DETAILS': {\r\n                            'DOC_NAME': this.datavalidate(save.DOC_NAME),\r\n                            'DOC_PATH': this.datavalidate(save.DOC_PATH),\r\n                            // \"UPLOADER_ID\": save.UPLOADERNAME,\r\n                            'DOC_REMARKS': save.DOC_REMARKS,\r\n                            'DOC_TYPE': save.DOC_TYPE,\r\n                            'DOC_SIZE': save.DOC_SIZE\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n            ParamTuple.push(params);\r\n        }\r\n        var paramsAll = { 'tuple': ParamTuple };\r\n        this.service.invokeService(\"UpdateFdHlDocDetails\", paramsAll, this.namespace, true, false)\r\n            .then((res) => {\r\n            if (this.saveType == 'submit') {\r\n                if (this.datavalidate(this.taskId) == '') {\r\n                    let param = {\r\n                        'HR_REF_NO': this.HR_REF_NO,\r\n                        'INITIATED_BY': this.loginUserID,\r\n                        'REMARKS': this.remarks\r\n                    };\r\n                    this.service.invokeService(\"FD_HL_MainProcess\", param, \"http://schemas.cordys.com/default\", true, false).\r\n                        then((res) => {\r\n                        // let dObj = {HR_REF_NO:this.HR_REF_NO}\r\n                        // this.service.invokeService(\"SendFD_HLCustomRequestorMail\", dObj, this.namespace, true, false)\r\n                        // .then((res: any) => {\r\n                        // })\r\n                        setTimeout(() => {\r\n                            let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\r\n                            this.call_modal = true;\r\n                            this.data_send = { text: `Request Submitted Successfully`, 'text1': `Request ID`, 'text2': `${this.REQUEST_NO}`, active: this.call_modal, from: modal_from };\r\n                        }, 0);\r\n                    });\r\n                }\r\n                else {\r\n                    this.completeTask(7, this.openAs, '');\r\n                }\r\n            }\r\n            else if (this.saveType == 'save') {\r\n                let msg;\r\n                msg = this.datavalidate(this.openAs) == '' ? 'New Request Created Successfully' : 'Request Updated Successfully';\r\n                setTimeout(() => {\r\n                    let modal_from = this.saveType == 'save' ? '' : this.saveType == 'submit' ? 'task' : '';\r\n                    this.call_modal = true;\r\n                    this.data_send = { text: msg, 'text1': `Request ID`, 'text2': `${this.REQUEST_NO}`, active: this.call_modal, from: modal_from };\r\n                }, 0);\r\n            }\r\n            if (res) {\r\n                this.documentsArr = [];\r\n                this.getFD_HLDocDetailsByHR_RefNo(this.HR_REF_NO);\r\n            }\r\n        }, (err) => {\r\n            console.log(\"Error occured while saving Docdata \");\r\n        });\r\n    }\r\n    deleteFile() {\r\n        this.call_modal = false;\r\n        this.confirmationService.confirm({\r\n            message: 'Are you sure that you want to delele this file?', header: 'Confirmation', icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n                for (let i = 0; i < this.checkedRows.length; i++) {\r\n                    this.initValue = this.initValue - parseFloat(this.checkedRows[i].DOC_SIZE);\r\n                    if (this.service.datavalidate(this.checkedRows[i].DOC_REF_NO) != \"\") {\r\n                        let dataObj = {\r\n                            tuple: {\r\n                                old: {\r\n                                    FD_HL_DOC_DETAILS: {\r\n                                        DOC_REF_NO: this.checkedRows[i].DOC_REF_NO,\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        this.service.invokeService(\"UpdateFdHlDocDetails\", dataObj, this.namespace, true, false).\r\n                            then((ajaxResponse) => {\r\n                            this.documentsArr = this.documentsArr.filter((val) => {\r\n                                return this.checkedRows.indexOf(val) === -1;\r\n                            });\r\n                            this.checkedRows = [];\r\n                            setTimeout(() => {\r\n                                this.call_modal = true;\r\n                                this.data_send = { text: 'File Deleted Successfull', active: this.call_modal };\r\n                            }, 0);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.documentsArr = this.documentsArr.filter((val) => {\r\n                            return this.checkedRows.indexOf(val) === -1;\r\n                        });\r\n                        this.checkedRows.forEach((d) => {\r\n                            if (d.DOC_REF_NO == '') {\r\n                                this.checkedRows.splice(this.checkedRows.indexOf(d), 1);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            reject: () => { }\r\n        });\r\n    }\r\n    isRemarksValid(arg) {\r\n        if (arg == 0 && this.remarks == '' || arg == 3 && this.remarks == '' || arg == 4 && this.remarks == '' || arg == 7 && this.remarks == '') {\r\n            this.remarkSubmit = true;\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    completeTask(decision, openas, remarks) {\r\n        this.call_modal = false;\r\n        if (this.isRemarksValid(decision)) {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: 'Please enter remarks', active: this.call_modal };\r\n            }, 0);\r\n            return;\r\n        }\r\n        let data = {\r\n            \"FD_HL_OPSchemaFragment\": {\r\n                ApproverDecision: decision,\r\n                ApprovedBy: this.loginUserID,\r\n                Remarks: this.remarks\r\n            }\r\n        };\r\n        this.call_modal = false;\r\n        var titlest = decision == 1 ? \"Task Completed Successfully\" : decision == 0 ? \"Task Seek Clarification Successfully\" :\r\n            decision == 7 ? \"Task Submitted Successfully\" : decision == 4 ? \"Task Obsoleted Successfully\" : decision == 3 ? \"Task Rejected Successfully\" : \"\";\r\n        let _this = this;\r\n        $.cordys.workflow.completeTask(this.taskId, data, { dataType: 'xml' }).done(() => {\r\n            setTimeout(() => {\r\n                this.call_modal = true;\r\n                this.data_send = { text: titlest, active: this.call_modal, from: 'task' };\r\n            }, 0);\r\n            // _this.closeTask(openas);\r\n        });\r\n    }\r\n    closeTask(openas) {\r\n        this.actStage = \"view\";\r\n        if (openas == 'customInboxTask') {\r\n            this.router.navigate(['/inbox']);\r\n        }\r\n        else if (openas == 'mail') {\r\n            window.close();\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    async callReqManagement1(arg) {\r\n        let params = { HR_REF_NO: arg, REPORT_REF_ID: 3 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.Table12Arr = res;\r\n        });\r\n        let params1 = { HR_REF_NO: arg, REPORT_REF_ID: 4 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params1, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.chapter2Arr = res;\r\n        });\r\n        setTimeout(() => {\r\n            this.getFDHLRequestVariantDetails(arg);\r\n        }, 100);\r\n    }\r\n    async callReqManagementEmpty() {\r\n        let params = { HR_REF_NO: '', REPORT_REF_ID: 3 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.Table12EmptyArr = res;\r\n        });\r\n        let params1 = { HR_REF_NO: '', REPORT_REF_ID: 4 };\r\n        await this.service.invokeService(\"GetFdHlRequestManagement\", params1, this.namespace, true, false)\r\n            .then((res) => {\r\n            this.chapter2EmptyArr = res;\r\n        });\r\n    }\r\n    async getFdHlRequestManagement() {\r\n        this.variantsArr.forEach((d) => {\r\n            d.Table12Arr = [];\r\n            if (d.HRV_REF_NO == '') {\r\n                this.Table12EmptyArr.forEach((d1) => {\r\n                    d.Table12Arr.push({\r\n                        ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                        ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                        CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                        REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                    });\r\n                });\r\n            }\r\n            if (d.HRV_REF_NO != '') {\r\n                this.Table12Arr.forEach((d1) => {\r\n                    if (d.HRV_REF_NO == this.datavalidate(d1.HRV_REF_NO)) {\r\n                        d.Table12Arr.push({\r\n                            ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                            ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                            CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                            REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    async getFdHlRequestManagement1() {\r\n        this.variantsArr1.forEach((d) => {\r\n            d.Table12Arr1 = [];\r\n            if (d.HRV_REF_NO == '') {\r\n                this.chapter2EmptyArr.forEach((d1) => {\r\n                    d.Table12Arr1.push({\r\n                        ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                        ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                        CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                        REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                    });\r\n                });\r\n            }\r\n            if (d.HRV_REF_NO != '') {\r\n                this.chapter2Arr.forEach((d1) => {\r\n                    if (d.HRV_REF_NO == this.datavalidate(d1.HRV_REF_NO)) {\r\n                        d.Table12Arr1.push({\r\n                            ATTR_VALUE: d1.ATTR_VALUE, ANNEXURE_EXT: d1.ANNEXURE_EXT, ANNEXURE_NAME: d1.ANNEXURE_NAME, ANNEXURE_PATH: d1.ANNEXURE_PATH, ATTR_DESC: d1.ATTR_DESC,\r\n                            ATTR_NAME: d1.ATTR_NAME, ATTR_CHARACTERISTICS: d1.ATTR_CHARACTERISTICS, ATTR_REF_ID: d1.ATTR_REF_ID[0], AUDIT_TYPE: d1.AUDIT_TYPE, CREATED_BY: d1.CREATED_BY[0],\r\n                            CREATION_DATE: d1.CREATION_DATE[0], DOUMENT_NAME: d1.DOUMENT_NAME, HRM_REF_NO: d1.HRM_REF_NO, HRV_REF_NO: d1.HRV_REF_NO, HR_REF_NO: d1.HR_REF_NO, MANDATORY: d1.MANDATORY,\r\n                            REPORT_NAME: d1.REPORT_NAME, REPORT_REF_ID: d1.REPORT_REF_ID[0], REPORT_VERSION: d1.REPORT_VERSION, VISIBLE: d1.VISIBLE, MODIFIED_BY: d1.MODIFIED_BY[0], MODIFIED_DATE: d1.MODIFIED_DATE[0]\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    datavalidate(data) {\r\n        if (data != undefined && data != null && data != \"\") {\r\n            return data;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n};\r\nCreateNewRequestComponent.ctorParameters = () => [\r\n    { type: Services },\r\n    { type: DatePipe },\r\n    { type: FormBuilder },\r\n    { type: ActivatedRoute },\r\n    { type: Location },\r\n    { type: MenuComponent },\r\n    { type: Router },\r\n    { type: ConfirmationService }\r\n];\r\nCreateNewRequestComponent.propDecorators = {\r\n    covering: [{ type: ViewChild, args: [CoveringLetterComponent,] }],\r\n    table4g: [{ type: ViewChild, args: [Table4gComponent,] }],\r\n    chapter2: [{ type: ViewChild, args: [Chapter2Component,] }],\r\n    table12: [{ type: ViewChild, args: [Table12Component,] }],\r\n    requestIDClone: [{ type: Input }],\r\n    cloneHRNo: [{ type: Input }]\r\n};\r\nCreateNewRequestComponent = __decorate([\r\n    Component({\r\n        selector: 'app-create-new-request',\r\n        template: __NG_CLI_RESOURCE__0,\r\n        providers: [ConfirmationService, MessageService],\r\n        styles: [__NG_CLI_RESOURCE__1]\r\n    })\r\n], CreateNewRequestComponent);\r\nexport { CreateNewRequestComponent };\r\n"]},"metadata":{},"sourceType":"module"}